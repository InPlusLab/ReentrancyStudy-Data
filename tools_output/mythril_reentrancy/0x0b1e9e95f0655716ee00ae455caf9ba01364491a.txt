==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: AkilosIco
Function name: fallback
PC address: 871
Estimated Gas Usage: 894 - 989
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:171

56 _endBlock, uint256 _maxGasPrice,

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: AkilosIco
Function name: fallback
PC address: 888
Estimated Gas Usage: 1725 - 1820
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:171

xchangeRate, uint256 _maxSupply) 

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AkilosIco
Function name: initialise(address,uint256,uint256,uint256,uint256,uint256)
PC address: 2412
Estimated Gas Usage: 113155 - 418264
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:183

maxSupply;
     

--------------------
Initial State:

Account: [CREATOR], balance: 0x401000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialise(address,uint256,uint256,uint256,uint256,uint256), txdata: 0x8410956a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AkilosIco
Function name: initialise(address,uint256,uint256,uint256,uint256,uint256)
PC address: 2465
Estimated Gas Usage: 113155 - 418264
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:183

maxSupply;
     

--------------------
Initial State:

Account: [CREATOR], balance: 0x401000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialise(address,uint256,uint256,uint256,uint256,uint256), txdata: 0x8410956a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AkilosIco
Function name: initialise(address,uint256,uint256,uint256,uint256,uint256)
PC address: 2472
Estimated Gas Usage: 113155 - 418264
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:184

sed = true;

        ret

--------------------
Initial State:

Account: [CREATOR], balance: 0x401000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialise(address,uint256,uint256,uint256,uint256,uint256), txdata: 0x8410956a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AkilosIco
Function name: initialise(address,uint256,uint256,uint256,uint256,uint256)
PC address: 2479
Estimated Gas Usage: 113155 - 418264
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:187

    }


    function

--------------------
Initial State:

Account: [CREATOR], balance: 0x401000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialise(address,uint256,uint256,uint256,uint256,uint256), txdata: 0x8410956a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AkilosIco
Function name: initialise(address,uint256,uint256,uint256,uint256,uint256)
PC address: 2486
Estimated Gas Usage: 113155 - 418264
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:190

ayable {
        participa

--------------------
Initial State:

Account: [CREATOR], balance: 0x401000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialise(address,uint256,uint256,uint256,uint256,uint256), txdata: 0x8410956a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AkilosIco
Function name: initialise(address,uint256,uint256,uint256,uint256,uint256)
PC address: 2493
Estimated Gas Usage: 113155 - 418264
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:191

er, msg.value);
    }

    f

--------------------
Initial State:

Account: [CREATOR], balance: 0x401000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialise(address,uint256,uint256,uint256,uint256,uint256), txdata: 0x8410956a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AkilosIco
Function name: initialise(address,uint256,uint256,uint256,uint256,uint256)
PC address: 2500
Estimated Gas Usage: 113155 - 418264
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:194

ticipate(address parti

--------------------
Initial State:

Account: [CREATOR], balance: 0x401000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialise(address,uint256,uint256,uint256,uint256,uint256), txdata: 0x8410956a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AkilosIco
Function name: initialise(address,uint256,uint256,uint256,uint256,uint256)
PC address: 2513
Estimated Gas Usage: 113155 - 418264
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:194

t256 value) intern

--------------------
Initial State:

Account: [CREATOR], balance: 0x401000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialise(address,uint256,uint256,uint256,uint256,uint256), txdata: 0x8410956a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AkilosIco
Function name: initialise(address,uint256,uint256,uint256,uint256,uint256)
PC address: 2527
Estimated Gas Usage: 113155 - 418264
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:194

t256 value) intern

--------------------
Initial State:

Account: [CREATOR], balance: 0x401000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialise(address,uint256,uint256,uint256,uint256,uint256), txdata: 0x8410956a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AkilosIco
Function name: initialise(address,uint256,uint256,uint256,uint256,uint256)
PC address: 2534
Estimated Gas Usage: 113155 - 418264
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d02d2dd2f12efbaf72aa3600302e2437.sol:194

 {
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x401000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialise(address,uint256,uint256,uint256,uint256,uint256), txdata: 0x8410956a, value: 0x0