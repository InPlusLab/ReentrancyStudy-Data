==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: setTicketPrice(uint256)
PC address: 471
Estimated Gas Usage: 1040 - 1465
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/53ab1425afbb1a75e72e2759cac6e75a.sol:30


        _;
    }
  
    mod

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTicketPrice(uint256), txdata: 0x15981650, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: kill()
PC address: 731
Estimated Gas Usage: 1050 - 1475
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/53ab1425afbb1a75e72e2759cac6e75a.sol:30


        _;
    }
  
    mod

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: kill(), txdata: 0x41c0e1b5, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AddressLotteryV2
Function name: forceReseed()
PC address: 880
Estimated Gas Usage: 34817 - 156748
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/53ab1425afbb1a75e72e2759cac6e75a.sol:85

t4 = tx.gasprice

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AddressLotteryV2
Function name: forceReseed()
PC address: 898
Estimated Gas Usage: 34817 - 156748
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/53ab1425afbb1a75e72e2759cac6e75a.sol:87

 }
    
    functio

--------------------
Initial State:

Account: [CREATOR], balance: 0x120000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AddressLotteryV2
Function name: forceReseed()
PC address: 910
Estimated Gas Usage: 34817 - 156748
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/53ab1425afbb1a75e72e2759cac6e75a.sol:91

/ DEBUG, DELETE

--------------------
Initial State:

Account: [CREATOR], balance: 0x3000000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: participate()
PC address: 1035
Estimated Gas Usage: 260 - 355
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/53ab1425afbb1a75e72e2759cac6e75a.sol:36

        _;
    }
    
    functi

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: participate(), txdata: 0xd11711a2, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: participate()
PC address: 1163
Estimated Gas Usage: 3915 - 4906
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/53ab1425afbb1a75e72e2759cac6e75a.sol:54

umber)
        {
            participated[msg.sender] = true;
            require(msg.sender.call.value(this.balance)());
        }
    }
    
    function luckyNumberOfAddress(address add

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: participate(), txdata: 0xd11711a2, value: 0x16345785d8a0000

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AddressLotteryV2
Function name: participate()
PC address: 1318
Estimated Gas Usage: 11377 - 67074
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/53ab1425afbb1a75e72e2759cac6e75a.sol:60

    
    function luckyNumberOfAddres

--------------------
Initial State:

Account: [CREATOR], balance: 0x100040000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10000000000000008, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: participate(), txdata: 0xd11711a2, value: 0x16345785d8a0000