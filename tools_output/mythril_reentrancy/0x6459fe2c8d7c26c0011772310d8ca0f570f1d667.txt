==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ClassyCoinAirdrop
Function name: emergencyDrain(uint256)
PC address: 824
Estimated Gas Usage: 4371 - 40301
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/583e803588d44c5a0b1880b7e91a682a.sol:66
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: emergencyDrain(uint256), txdata: 0x70544b74, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ClassyCoinAirdrop
Function name: airDrop(address[],uint256)
PC address: 1361
Estimated Gas Usage: 20066 - 135901
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/583e803588d44c5a0b1880b7e91a682a.sol:55

enDrop(

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1c01, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ClassyCoinAirdrop
Function name: airDrop(address[],uint256)
PC address: 1589
Estimated Gas Usage: 20066 - 135901
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/583e803588d44c5a0b1880b7e91a682a.sol:55

enDrop( recipients[i], amount );
    }



--------------------
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000000000000101, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ClassyCoinAirdrop
Function name: airDrop(address[],uint256)
PC address: 1589
Estimated Gas Usage: 20066 - 135901
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/583e803588d44c5a0b1880b7e91a682a.sol:55

enDrop( recipients[i], amount );
    }



--------------------
Initial State:

Account: [CREATOR], balance: 0x81, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0
Caller: [CREATOR], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3801, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ClassyCoinAirdrop
Function name: airDrop(address[],uint256)
PC address: 1589
Estimated Gas Usage: 20066 - 135901
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/583e803588d44c5a0b1880b7e91a682a.sol:55

enDrop( recipients[i], amount );
    }



--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1c01, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ClassyCoinAirdrop
Function name: airDrop(address[],uint256)
PC address: 1763
Estimated Gas Usage: 20066 - 135901
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/583e803588d44c5a0b1880b7e91a682a.sol:59

ts.length * amount;
  }


  f

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1c01, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ClassyCoinAirdrop
Function name: airDrop(address[],uint256)
PC address: 1770
Estimated Gas Usage: 20066 - 135901
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/583e803588d44c5a0b1880b7e91a682a.sol:59

ts.length * amount;
  }


  f

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1c01, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ClassyCoinAirdrop
Function name: airDrop(address[],uint256)
PC address: 1775
Estimated Gas Usage: 20066 - 135901
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/583e803588d44c5a0b1880b7e91a682a.sol:63

n( uint amount ) onlyOwner

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0
Caller: [CREATOR], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0eefff00020800003f80003ffffffdffd77fe00fffff050000000001fffffff0eff, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ClassyCoinAirdrop
Function name: airDrop(address[],uint256)
PC address: 1782
Estimated Gas Usage: 20066 - 135901
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/583e803588d44c5a0b1880b7e91a682a.sol:63

 emergencyDrain( uint amount ) onlyOwner

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1c01, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ClassyCoinAirdrop
Function name: airDrop(address[],uint256)
PC address: 1789
Estimated Gas Usage: 20066 - 135901
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/583e803588d44c5a0b1880b7e91a682a.sol:63

 emergencyDrain( uint amount ) onlyOwner

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1c01, value: 0x0