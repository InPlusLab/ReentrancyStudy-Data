==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MyDice
Function name: playerWithdrawPendingTransactions()
PC address: 6207
Estimated Gas Usage: 13441 - 88903
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/4509653e54bcc5db04ae61d5e32784b0.sol:260

rawals[msg.sender] = withdrawAmount;
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: playerWithdrawPendingTransactions(), txdata: 0xa5f4af33, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MyDice
Function name: playerWithdrawPendingTransactions()
PC address: 6292
Estimated Gas Usage: 13441 - 88903
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/4509653e54bcc5db04ae61d5e32784b0.sol:267

endingWithdrawals[addressToCheck];
    }

    /*
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x180000000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: playerWithdrawPendingTransactions(), txdata: 0xa5f4af33, value: 0x0