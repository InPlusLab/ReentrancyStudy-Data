==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CryptoCopyCrowdsale
Function name: fallback
PC address: 662
Estimated Gas Usage: 13441 - 34196
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/8f2152265054d7f8581933bcebaf5248.sol:307

    } else if (now < start + bonusThirdWeekPeriod) {
            totalBonuses += bonusThirdWeek;
        } else if (now < start + bonusFourthWeekPeriod) {
            totalBonuses += bonusFourthWeek;
        }
        
        if (receivedEth >= 100 ether) {
            totalBonuses += bonusOver100ETH;
        } else if (receivedEth >= 30 ether) {
            totalBonuses += bonusOver30ETH;
        } else if (receivedEth >= 10 ether) {
            totalBonuses += bonusOver10ETH;
        } else if (receivedEth >= 3

--------------------
Initial State:

Account: [CREATOR], balance: 0x4a0400012b87, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x16345785d8a0000

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CryptoCopyCrowdsale
Function name: fallback
PC address: 688
Estimated Gas Usage: 15072 - 35827
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/8f2152265054d7f8581933bcebaf5248.sol:309

se if (now < start + bonusFourthWeekPeriod) {
            totalBonuses += bonusFourthWeek;
        }
        
        if (receivedEth >= 100 ether) {
            totalBonuses += bonusOver100ETH;
        } else if (receivedEth >= 30 ether) {
            totalBonuses += bonusOver30ETH;
        } else if (receivedEth >= 10 ether) {
            totalBonuses += bonusOver10ETH;
        } else if (receivedEth >= 3

--------------------
Initial State:

Account: [CREATOR], balance: 0x40101160120000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8484848484848484848484848484848484848484848484848484848484848484458ce58f32fbee83b6dbc5eaff72c8ce898bacfdf0b5aec00000000000015c0184, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x16345785d8a0000

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CryptoCopyCrowdsale
Function name: fallback
PC address: 714
Estimated Gas Usage: 16703 - 37458
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/8f2152265054d7f8581933bcebaf5248.sol:312

      
        if (receivedEth >= 100 ether) {
            totalBonuses += bonusOver100ETH;
        } else if (receivedEth >= 30 ether) {
            totalBonuses += bonusOver30ETH;
        } else if (receivedEth >= 10 ether) {
            totalBonuses += bonusOver10ETH;
        } else if (receivedEth >= 3

--------------------
Initial State:

Account: [CREATOR], balance: 0x40c0002013013, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c02d27dfa7ffffb3dfecb3d5fbbdef92b4042e0380600000000000000000042201c0, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x16345785d8a0000

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CryptoCopyCrowdsale
Function name: fallback
PC address: 740
Estimated Gas Usage: 18334 - 39089
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/8f2152265054d7f8581933bcebaf5248.sol:315

e if (receivedEth >= 30 ether) {
            totalBonuses += bonusOver30ETH;
        } else if (receivedEth >= 10 ether) {
            totalBonuses += bonusOver10ETH;
        } else if (receivedEth >= 3

--------------------
Initial State:

Account: [CREATOR], balance: 0x40425a01010542a1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000000000000000000000000000000003fff7afc7ff2e45f8b4fff3c8e7c5045502588200040000000000000004220180, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x16345785d8a0000

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CryptoCopyCrowdsale
Function name: fallback
PC address: 766
Estimated Gas Usage: 19965 - 40720
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/8f2152265054d7f8581933bcebaf5248.sol:317

dEth >= 10 ether) {
            totalBonuses += bonusOver10ETH;
        } else if (receivedEth >= 3

--------------------
Initial State:

Account: [CREATOR], balance: 0xc1500520054506, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000efe7c799f7deeb6a7b7fbfaedfbedff7bffc0040000005c04002000000020d02f8, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x16345785d8a0000

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CryptoCopyCrowdsale
Function name: fallback
PC address: 3488
Estimated Gas Usage: 3328 - 3423
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/8f2152265054d7f8581933bcebaf5248.sol:234

tage = Stages.Ico;
    }

    /**
     * Release tokens after the ICO
     */
    function releaseTokens(addres

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: CryptoCopyCrowdsale
Function name: fallback
PC address: 3539
Estimated Gas Usage: 4153 - 4248
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/8f2152265054d7f8581933bcebaf5248.sol:240

nlyCreator {
        if (stage != Stages.Ended) {
            return;
        }
        


--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CryptoCopyCrowdsale
Function name: returnOwnershipOfToken()
PC address: 5552
Estimated Gas Usage: 4605 - 40066
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/8f2152265054d7f8581933bcebaf5248.sol:118

on setCreator(address _creator) public onl

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 606060606060606060606060deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: returnOwnershipOfToken(), txdata: 0x427eebfc, value: 0x0