==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenIOStorage
Function name: setBytes(bytes32,bytes)
PC address: 453
Estimated Gas Usage: 7625 - 31156
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e66044ac39da9d2f361370d5ec4a1e0.sol:529

r returns (bool success) {

        boolStorage[_key] = _value;

        return true;

    }



    /**

     * @notice Set value for Int associated with bytes3

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setBytes(bytes32,bytes), txdata: 0x2e28d084fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenIOStorage
Function name: setBytes(bytes32,bytes)
PC address: 460
Estimated Gas Usage: 7625 - 31156
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e66044ac39da9d2f361370d5ec4a1e0.sol:529

r returns (bool success) {

        boolStorage[_key] = _value;

        return true;

    }



    /**

     * @notice Set value for Int associated with bytes3

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setBytes(bytes32,bytes), txdata: 0x2e28d084ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenIOStorage
Function name: setBytes(bytes32,bytes)
PC address: 485
Estimated Gas Usage: 17765 - 81482
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e66044ac39da9d2f361370d5ec4a1e0.sol:529

r returns (bool success) {

        boolStorage[_key] = _value;

        return true;

    }



    /**

     * @notice Set value for Int associated with bytes3

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setBytes(bytes32,bytes), txdata: 0x2e28d0848000000008000000000000100004010020080000000000020101100000010000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenIOStorage
Function name: setString(bytes32,string)
PC address: 697
Estimated Gas Usage: 7757 - 31288
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e66044ac39da9d2f361370d5ec4a1e0.sol:507

bytes _value) public onlyOwner returns (bool success) {

        bytesStorage[_key] = _value;

        return true;

    }



    /**

     * @notice Set value for

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setString(bytes32,string), txdata: 0x6e899550ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe8, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenIOStorage
Function name: setString(bytes32,string)
PC address: 704
Estimated Gas Usage: 7757 - 31288
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e66044ac39da9d2f361370d5ec4a1e0.sol:507

bytes _value) public onlyOwner returns (bool success) {

        bytesStorage[_key] = _value;

        return true;

    }



    /**

     * @notice Set value for

--------------------
Initial State:

Account: [CREATOR], balance: 0x201000000020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setString(bytes32,string), txdata: 0x6e899550ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff70, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenIOStorage
Function name: setString(bytes32,string)
PC address: 729
Estimated Gas Usage: 17897 - 81614
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e66044ac39da9d2f361370d5ec4a1e0.sol:507

bytes _value) public onlyOwner returns (bool success) {

        bytesStorage[_key] = _value;

        return true;

    }



    /**

     * @notice Set value for

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setString(bytes32,string), txdata: 0x6e8995500000000000000000000000000000000000000000000000104000000140000800ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenIOStorage
Function name: getString(bytes32)
PC address: 2657
Estimated Gas Usage: 1670 - 2800
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e66044ac39da9d2f361370d5ec4a1e0.sol:785

   * @notice Get value for

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: getString(bytes32), txdata: 0x986e791a, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenIOStorage
Function name: getBytes(bytes32)
PC address: 2981
Estimated Gas Usage: 1739 - 2869
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e66044ac39da9d2f361370d5ec4a1e0.sol:811



THE SOFTWARE IS PROVIDE

--------------------
Initial State:

Account: [CREATOR], balance: 0x2100000002002820, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: getBytes(bytes32), txdata: 0xc031a180, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: TokenIOStorage
Function name: setBytes(bytes32,bytes)
PC address: 4008
Estimated Gas Usage: 7625 - 31156
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x20100004008000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setBytes(bytes32,bytes), txdata: 0x2e28d084ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: TokenIOStorage
Function name: setString(bytes32,string)
PC address: 4008
Estimated Gas Usage: 7757 - 31288
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setString(bytes32,string), txdata: 0x6e899550ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: TokenIOStorage
Function name: setBytes(bytes32,bytes)
PC address: 4022
Estimated Gas Usage: 7625 - 31156
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x22000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setBytes(bytes32,bytes), txdata: 0x2e28d084ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa2, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: TokenIOStorage
Function name: setString(bytes32,string)
PC address: 4022
Estimated Gas Usage: 7757 - 31288
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000099, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setString(bytes32,string), txdata: 0x6e899550ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenIOCurrencyAuthority
Function name: getAccountSpendingLimit(address)
PC address: 12702
Estimated Gas Usage: 3380 - 42179
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0xb00000020000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: getAccountSpendingLimit(address), txdata: 0x61e7662b, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenIOCurrencyAuthority
Function name: getAccountSpendingLimit(address)
PC address: 12731
Estimated Gas Usage: 3380 - 42179
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x1800405000380ce, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: getAccountSpendingLimit(address), txdata: 0x61e7662b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenIOCurrencyAuthority
Function name: getAccountSpendingLimit(address)
PC address: 12837
Estimated Gas Usage: 3380 - 42179
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e66044ac39da9d2f361370d5ec4a1e0.sol:3359

    return self.Storage.

--------------------
Initial State:

Account: [CREATOR], balance: 0x90804, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getAccountSpendingLimit(address), txdata: 0x61e7662b, value: 0x0


