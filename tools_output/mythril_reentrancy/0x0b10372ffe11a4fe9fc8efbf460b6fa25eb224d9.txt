==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiTransfer
Function name: fallback
PC address: 119
Estimated Gas Usage: 3714 - 75989
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/d5cd74632909345cf8cc2632f62d05f4.sol:11

ion multiTransfer(ERC20 token, address[] _addresses, uint256 amount) public {

        for (uint256 i = 0; i < _addresses.length; i++) {

            token.transfer(_addresses[i], amount);

        }

    }

}

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: multiTransfer(address,address[],uint256), txdata: 0x0aa20e730000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MultiTransfer
Function name: fallback
PC address: 349
Estimated Gas Usage: 2046 - 39571
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d5cd74632909345cf8cc2632f62d05f4.sol:15

ransfer(_addresses[i], amount);

    

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransfer(address,address[],uint256), txdata: 0x0aa20e730000000000000000000000000000000000000000000000000000000000000002, value: 0x0
Caller: [ATTACKER], function: multiTransfer(address,address[],uint256), txdata: 0x0aa20e73080808080808080808080808deadbeefdeadbeefdeadbeefdeadbeefdeadbeef80, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: MultiTransfer
Function name: fallback
PC address: 349
Estimated Gas Usage: 3714 - 75989
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/d5cd74632909345cf8cc2632f62d05f4.sol:15

ransfer(_addresses[i], amount);

    

--------------------
Initial State:

Account: [CREATOR], balance: 0x3fc0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransfer(address,address[],uint256), txdata: 0x0aa20e730000000000000000000000000000000000000000000000000000000000000002, value: 0x0