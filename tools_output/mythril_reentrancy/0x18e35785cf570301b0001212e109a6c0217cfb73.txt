==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: SujiToken
Function name: setBalances(address[],uint256[])
PC address: 961
Estimated Gas Usage: 1747 - 7625
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3dd0caa83f411af65f9ff116ab6a170c.sol:485

roval(

        address indexed _owner,

        address indexed _spender,

        uint256 _amount

        );



    event Burn(

        address indexed _burner,

        uint256 _amount

        );

    

}

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setBalances(address[],uint256[]), txdata: 0xb7e39b4fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc08, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SujiToken
Function name: authenticate(uint256,uint256,uint256)
PC address: 1388
Estimated Gas Usage: 18259 - 97047
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3dd0caa83f411af65f9ff116ab6a170c.sol:479

_amou

--------------------
Initial State:

Account: [CREATOR], balance: 0x40001080042800002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: authenticate(uint256,uint256,uint256), txdata: 0x053011b7, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: SujiToken
Function name: name()
PC address: 1441
Estimated Gas Usage: 2374 - 4115
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3dd0caa83f411af65f9ff116ab6a170c.sol:203

= "SUJ";         //An identifier

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: name(), txdata: 0x06fdde03, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: SujiToken
Function name: symbol()
PC address: 2084
Estimated Gas Usage: 2594 - 4335
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3dd0caa83f411af65f9ff116ab6a170c.sol:213

owed` tracks any extra trans

--------------------
Initial State:

Account: [CREATOR], balance: 0x20010401000508c0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SujiToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 2673
Estimated Gas Usage: 9608 - 69796
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3dd0caa83f411af65f9ff116ab6a170c.sol:405

ead the `allowed[]` map

    /// @param _owner The address of

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SujiToken
Function name: authenticate(uint256,uint256,uint256)
PC address: 2967
Estimated Gas Usage: 18259 - 97047
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3dd0caa83f411af65f9ff116ab6a170c.sol:335

turn balances[_

--------------------
Initial State:

Account: [CREATOR], balance: 0x40001080042800002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: authenticate(uint256,uint256,uint256), txdata: 0x053011b7, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SujiToken
Function name: authenticate(uint256,uint256,uint256)
PC address: 3004
Estimated Gas Usage: 18259 - 97047
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3dd0caa83f411af65f9ff116ab6a170c.sol:341

e `msg.sender` 

--------------------
Initial State:

Account: [CREATOR], balance: 0x40001080042800002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: authenticate(uint256,uint256,uint256), txdata: 0x053011b7, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SujiToken
Function name: authenticate(uint256,uint256,uint256)
PC address: 3050
Estimated Gas Usage: 18259 - 97047
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3dd0caa83f411af65f9ff116ab6a170c.sol:337





    /// @notice `msg.sender` approves `_sp

--------------------
Initial State:

Account: [CREATOR], balance: 0x40001080042800002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: authenticate(uint256,uint256,uint256), txdata: 0x053011b7, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SujiToken
Function name: authenticate(uint256,uint256,uint256)
PC address: 3057
Estimated Gas Usage: 18259 - 97047
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3dd0caa83f411af65f9ff116ab6a170c.sol:341

ens on

    /

--------------------
Initial State:

Account: [CREATOR], balance: 0x40001080042800002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: authenticate(uint256,uint256,uint256), txdata: 0x053011b7, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SujiToken
Function name: authenticate(uint256,uint256,uint256)
PC address: 3106
Estimated Gas Usage: 18259 - 97047
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3dd0caa83f411af65f9ff116ab6a170c.sol:341

nd `_amount` tokens on

    ///  its behal

--------------------
Initial State:

Account: [CREATOR], balance: 0x40001080042800002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: authenticate(uint256,uint256,uint256), txdata: 0x053011b7, value: 0x0


