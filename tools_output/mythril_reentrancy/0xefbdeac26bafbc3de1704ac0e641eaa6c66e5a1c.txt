==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Airdrop
Function name: fallback
PC address: 135
Estimated Gas Usage: 8392 - 82611
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/81acd0763442bc78a6a07815fe1e4972.sol:205

;

        if ((!airdrops[_recipient[i]]) && ( tokens == 0)) {

          airdrops[_recipient[i]] = true;

          require(token.transferFrom(msg.sender, _recipient[i], _tokens[i] * decimalFactor));

        }

    }

  }

}

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000400020820, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airdropTokens(address[],uint256[]), txdata: 0x706f6937ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Airdrop
Function name: fallback
PC address: 396
Estimated Gas Usage: 8392 - 82611
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/81acd0763442bc78a6a07815fe1e4972.sol:211

kens[

--------------------
Initial State:

Account: [CREATOR], balance: 0x20e1d9a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [SOMEGUY], function: airdropTokens(address[],uint256[]), txdata: 0x706f693780, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Airdrop
Function name: fallback
PC address: 428
Estimated Gas Usage: 8392 - 82611
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/81acd0763442bc78a6a07815fe1e4972.sol:211

lFactor));

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x53a12, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x800, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000008080808080808080808080808080400101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airdropTokens(address[],uint256[]), txdata: 0x706f6937ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbd, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Airdrop
Function name: fallback
PC address: 516
Estimated Gas Usage: 8392 - 82611
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/81acd0763442bc78a6a07815fe1e4972.sol:211

kens[i] * decimalFactor));

  

--------------------
Initial State:

Account: [CREATOR], balance: 0xe1d9a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [SOMEGUY], function: airdropTokens(address[],uint256[]), txdata: 0x706f693780, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Airdrop
Function name: fallback
PC address: 516
Estimated Gas Usage: 8392 - 82611
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/81acd0763442bc78a6a07815fe1e4972.sol:211

kens[i] * decimalFactor));

  

--------------------
Initial State:

Account: [CREATOR], balance: 0x2fbe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airdropTokens(address[],uint256[]), txdata: 0x706f693780, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Airdrop
Function name: fallback
PC address: 516
Estimated Gas Usage: 8392 - 82611
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/81acd0763442bc78a6a07815fe1e4972.sol:211

kens[i] * decimalFactor));

  

--------------------
Initial State:

Account: [CREATOR], balance: 0x20e1d9a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [SOMEGUY], function: airdropTokens(address[],uint256[]), txdata: 0x706f693780, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Airdrop
Function name: fallback
PC address: 610
Estimated Gas Usage: 8392 - 82611
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/81acd0763442bc78a6a07815fe1e4972.sol:217



}

--------------------
Initial State:

Account: [CREATOR], balance: 0x20e1d9a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [SOMEGUY], function: airdropTokens(address[],uint256[]), txdata: 0x706f693780, value: 0x0