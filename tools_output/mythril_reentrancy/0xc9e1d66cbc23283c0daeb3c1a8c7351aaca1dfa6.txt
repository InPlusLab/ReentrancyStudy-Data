==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Crowdsale
Function name: fallback
PC address: 1412
Estimated Gas Usage: 13476 - 104087
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2a5b5e19b9777bb47cee509aba15a2ea.sol:313

nt ret

--------------------
Initial State:

Account: [CREATOR], balance: 0x4803402120000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Crowdsale
Function name: buyTokens(address,bytes32)
PC address: 1412
Estimated Gas Usage: 13585 - 104526
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2a5b5e19b9777bb47cee509aba15a2ea.sol:313

nt ret

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyTokens(address,bytes32), txdata: 0x2c86d0910000000000000000000000000101010101010101010101010101010101010101494c4f5645425546464552, value: 0x1

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Crowdsale
Function name: fallback
PC address: 1444
Estimated Gas Usage: 13476 - 104087
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2a5b5e19b9777bb47cee509aba15a2ea.sol:313

nt returns (bool) {

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x620000000000400c, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Crowdsale
Function name: fallback
PC address: 1444
Estimated Gas Usage: 13476 - 104087
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2a5b5e19b9777bb47cee509aba15a2ea.sol:313

nt returns (bool) {

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x4803402120000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x1


