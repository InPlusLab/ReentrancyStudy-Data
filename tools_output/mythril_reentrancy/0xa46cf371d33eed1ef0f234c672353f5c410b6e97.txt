==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Stang
Function name: withdrawMultipleTokens(address[],uint256[])
PC address: 297
Estimated Gas Usage: 2384 - 8873
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/c4ad84629141038a94b90e6c805ad983.sol:532

nts) public onlyOwner returns (bool withdrawBool){
        require(_receivers.length == _amounts.length, "Arrays not of equal length");
        for(uint256 i=0; i<_receivers.length; i++){
            _receivers[i].call.value(_amounts[i])("");
        }
        return true;
    }
    
    function isContract(address _addr) private view returns (bool isContract){
          uint32 size;
          assembly {
            size := extcodesize(_addr)
   

--------------------
Initial State:

Account: [CREATOR], balance: 0x4042, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000014040efdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawMultipleTokens(address[],uint256[]), txdata: 0x5a25a82bffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc01, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Stang
Function name: withdrawMultipleEthers(address[],uint256[])
PC address: 439
Estimated Gas Usage: 2537 - 43584
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/c4ad84629141038a94b90e6c805ad983.sol:545

       return (size > 0);
    }
    
    function () payable external {
        
    }
    
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x101, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawMultipleEthers(address[],uint256[]), txdata: 0x5bdcb831ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc80, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Stang
Function name: fallback
PC address: 937
Estimated Gas Usage: 5906 - 42375
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c4ad84629141038a94b90e6c805ad983.sol:514

ool withdrawBool){
        msg.sender.call.value(address(th

--------------------
Initial State:

Account: [CREATOR], balance: 0x40040000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawTokenByOwner(uint256), txdata: 0x185f69c6, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Stang
Function name: withdrawMultipleEthers(address[],uint256[])
PC address: 1888
Estimated Gas Usage: 2537 - 43584
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c4ad84629141038a94b90e6c805ad983.sol:552
Initial State:

Account: [CREATOR], balance: 0xc00c0000000a01, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawMultipleEthers(address[],uint256[]), txdata: 0x5bdcb831800000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: Stang
Function name: withdrawMultipleEthers(address[],uint256[])
PC address: 1888
Estimated Gas Usage: 2537 - 43584
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: /tmp/c4ad84629141038a94b90e6c805ad983.sol:552
Initial State:

Account: [CREATOR], balance: 0x1000000009420, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawMultipleEthers(address[],uint256[]), txdata: 0x5bdcb831800000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Stang
Function name: transferToken(uint256)
PC address: 2174
Estimated Gas Usage: 10435 - 66719
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c4ad84629141038a94b90e6c805ad983.sol:504

       return true;
    }
    
    function transferEth(uint256 _noOfEth) publ

--------------------
Initial State:

Account: [CREATOR], balance: 0x80040000022008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000010000000000000000000080000000000000000000000000000000000000000001020201020110040202020201010120000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: transferToken(uint256), txdata: 0x9fc71b31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Stang
Function name: transferToken(uint256)
PC address: 2209
Estimated Gas Usage: 10435 - 66719
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/c4ad84629141038a94b90e6c805ad983.sol:507

{
        require(msg.va

--------------------
Initial State:

Account: [CREATOR], balance: 0x80040000022880, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x200, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001000100000000000000000000010000000000000000000000000000000000000101020201020110040202020201010120000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: transferToken(uint256), txdata: 0x9fc71b31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Stang
Function name: transferToken(uint256)
PC address: 2251
Estimated Gas Usage: 10435 - 66719
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/c4ad84629141038a94b90e6c805ad983.sol:507

returns (bool transferBool){
        require(msg.value >= _noOfEth);

--------------------
Initial State:

Account: [CREATOR], balance: 0x80040000022880, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x200, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001000100000000000000000000010000000000000000000000000000000000000101020201020110040202020201010120000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: transferToken(uint256), txdata: 0x9fc71b31, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Stang
Function name: withdrawEthByOwner()
PC address: 2488
Estimated Gas Usage: 3601 - 38730
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c4ad84629141038a94b90e6c805ad983.sol:526

vers[i], _amounts[i]);
            Transaction (

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawEthByOwner(), txdata: 0xf7b73c82, value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: Stang
Function name: withdrawEthByOwner()
PC address: 2488
Estimated Gas Usage: 3601 - 38730
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: /tmp/c4ad84629141038a94b90e6c805ad983.sol:526

vers[i], _amounts[i]);
            Transaction (

--------------------
Initial State:

Account: [CREATOR], balance: 0x73e92, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000011010efdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawEthByOwner(), txdata: 0xf7b73c82, value: 0x0