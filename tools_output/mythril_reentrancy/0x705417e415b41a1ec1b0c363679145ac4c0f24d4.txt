==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SCHTSub
Function name: approve(address,uint256,address)
PC address: 1726
Estimated Gas Usage: 4537 - 40469
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:321

    uint256 from_balance = mc.balanceOf(_

--------------------
Initial State:

Account: [CREATOR], balance: 0x30000040000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: approve(address,uint256,address), txdata: 0x1271f09ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SCHTSub
Function name: increaseApproval(address,uint256,address)
PC address: 3338
Estimated Gas Usage: 6306 - 76895
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:371

oldValue) {

      mc.setAllow

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: increaseApproval(address,uint256,address), txdata: 0x32efd52bb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1200000008007ffffffffffffffffffff00001001000000000000000000000001b1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SCHTSub
Function name: increaseApproval(address,uint256,address)
PC address: 3558
Estimated Gas Usage: 6306 - 76895
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:369

er);

    if (_subtractedValue >= oldValue) {

      mc.setAllowance(origin, _spen

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: increaseApproval(address,uint256,address), txdata: 0x32efd52bb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1200000008007ffffffffffffffffffff00001001000000000000000000000001b1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: SCHTSub
Function name: increaseApproval(address,uint256,address)
PC address: 3558
Estimated Gas Usage: 6306 - 76895
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:369

er);

    if (_subtractedValue >= oldValue) {

      mc.setAllowance(origin, _spen

--------------------
Initial State:

Account: [CREATOR], balance: 0x2100000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: increaseApproval(address,uint256,address), txdata: 0x32efd52bb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1029d12c1ffffffffffffffffffffffff50015001500150015001500150015003b1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SCHTSub
Function name: decreaseApproval(address,uint256,address)
PC address: 6955
Estimated Gas Usage: 6402 - 76991
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:385
Initial State:

Account: [CREATOR], balance: 0xb4000018340000e, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x800000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: decreaseApproval(address,uint256,address), txdata: 0x9527b12ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b11d62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeafffb1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SCHTSub
Function name: decreaseApproval(address,uint256,address)
PC address: 7204
Estimated Gas Usage: 6402 - 76991
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:385
Initial State:

Account: [CREATOR], balance: 0xb4000018340000e, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x800000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: decreaseApproval(address,uint256,address), txdata: 0x9527b12ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b11d62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeafffb1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: SCHTSub
Function name: decreaseApproval(address,uint256,address)
PC address: 7204
Estimated Gas Usage: 6311 - 76900
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:385
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0
Caller: [CREATOR], function: decreaseApproval(address,uint256,address), txdata: 0x9527b12ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1e000400404100040000104000080020820808002800040001000208000004080b1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SCHTSub
Function name: decreaseApproval(address,uint256,address)
PC address: 7457
Estimated Gas Usage: 6402 - 76991
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:385
Initial State:

Account: [CREATOR], balance: 0xb4000018340000e, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x800000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: decreaseApproval(address,uint256,address), txdata: 0x9527b12ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b11d62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeafffb1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: SCHTSub
Function name: decreaseApproval(address,uint256,address)
PC address: 7457
Estimated Gas Usage: 6402 - 76991
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:385
Initial State:

Account: [CREATOR], balance: 0x1a3d3e0000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: decreaseApproval(address,uint256,address), txdata: 0x9527b12ab1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b11d62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeafffb1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: SCHTSub
Function name: changeStage(uint256)
PC address: 9874
Estimated Gas Usage: 5149 - 74838
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:289

  mc.setCurrentStageSpent(0);


--------------------
Initial State:

Account: [CREATOR], balance: 0x100000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: changeStage(uint256), txdata: 0x7ae4bff892, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: SCHTSub
Function name: increaseApproval(address,uint256,address)
PC address: 9874
Estimated Gas Usage: 4585 - 40327
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:371

oldValue) {

      mc.setAllowance(origin, _spe

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: increaseApproval(address,uint256,address), txdata: 0x32efd52bb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1229d12c1ffffffffffffffffffffffff50015001500150015001500150015003b1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: SCHTSub
Function name: transfer(address,uint256,address)
PC address: 9874
Estimated Gas Usage: 6188 - 76207
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/f0997bf5647f630f0bc73a5c65bd920b.sol:231

  mc.setBalanceForAddr(_to, mc.balanc

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x800, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMasterAddr(address), txdata: 0xd4495bf6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: transfer(address,uint256,address), txdata: 0xdbba0f01b1b1b1b1b1b1b1b1b1b1b1b10101010101010101010101010101010101010101f882c4de00000000000000000000000000000000000000000000000000000000b1b1b1b1b1b1b1b1b1b1b1b1affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0