==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Receiver
Function name: setNotice(string) or setNotice(string)
PC address: 486
Estimated Gas Usage: 17562 - 80948
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:71

   }

    // set the target sale address
    function setSale(address s) o

--------------------
Initial State:

Account: [CREATOR], balance: 0x41000000010002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setNotice(string), txdata: 0x3cf572a7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Receiver
Function name: setNotice(string) or setNotice(string)
PC address: 507
Estimated Gas Usage: 7422 - 30622
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:71

   }

    // set the target sale address
    function setSale(address s) o

--------------------
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setNotice(string), txdata: 0x3cf572a7a2, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Sale
Function name: setNotice(string) or setNotice(string)
PC address: 995
Estimated Gas Usage: 17606 - 80992
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:196

  }

    // withdraw some of the Ether
    function withdrawSome(uint valu

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setNotice(string), txdata: 0x3cf572a7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Sale
Function name: setNotice(string) or setNotice(string)
PC address: 1016
Estimated Gas Usage: 7466 - 30666
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:196

  }

    // withdraw some of the Ether
    function withdrawSome(uint valu

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setNotice(string), txdata: 0x3cf572a780, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Receiver
Function name: withdrawToken(address) or withdrawToken(address)
PC address: 2095
Estimated Gas Usage: 4400 - 74420
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:89

(address token, a

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000100000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address), txdata: 0x89476069000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Receiver
Function name: withdrawToken(address) or withdrawToken(address)
PC address: 2263
Estimated Gas Usage: 4400 - 74420
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:89

   function refundToken(address token, ad

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000100000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address), txdata: 0x89476069000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Receiver
Function name: withdrawToken(address) or withdrawToken(address)
PC address: 2263
Estimated Gas Usage: 4400 - 74420
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:89

   function refundToken(address token, ad

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address), txdata: 0x89476069, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Receiver
Function name: refundToken(address,address,uint256) or refundToken(address,address,uint256)
PC address: 2609
Estimated Gas Usage: 2901 - 38171
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:96

ract exceeds the
    // so

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: refundToken(address,address,uint256), txdata: 0x932fec40000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: Receiver
Function name: setNotice(string) or setNotice(string)
PC address: 3522
Estimated Gas Usage: 7422 - 30622
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setNotice(string), txdata: 0x3cf572a7e0, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: Receiver
Function name: setNotice(string) or setNotice(string)
PC address: 3536
Estimated Gas Usage: 7422 - 30622
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setNotice(string), txdata: 0x3cf572a780, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Sale
Function name: withdrawToken(address) or withdrawToken(address)
PC address: 4474
Estimated Gas Usage: 4532 - 74552
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:213

, amount));
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address), txdata: 0x89476069000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Sale
Function name: withdrawToken(address) or withdrawToken(address)
PC address: 4642
Estimated Gas Usage: 4532 - 74552
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:213

quire(t.transfer(sender, amount));
    }


--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address), txdata: 0x89476069000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Sale
Function name: withdrawToken(address) or withdrawToken(address)
PC address: 4642
Estimated Gas Usage: 4532 - 74552
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:213

quire(t.transfer(sender, amount));
    }


--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address), txdata: 0x89476069, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Sale
Function name: refundToken(address,address,uint256) or refundToken(address,address,uint256)
PC address: 4988
Estimated Gas Usage: 3033 - 38303
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d0856b4f305d60e213af74bdd4d6824d.sol:215
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: refundToken(address,address,uint256), txdata: 0x932fec40000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: Sale
Function name: setNotice(string) or setNotice(string)
PC address: 5682
Estimated Gas Usage: 7466 - 30666
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setNotice(string), txdata: 0x3cf572a780, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: Sale
Function name: setNotice(string) or setNotice(string)
PC address: 5696
Estimated Gas Usage: 7466 - 30666
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setNotice(string), txdata: 0x3cf572a7d8, value: 0x0