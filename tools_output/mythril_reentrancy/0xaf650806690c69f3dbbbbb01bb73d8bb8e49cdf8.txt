==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Testnet
Function name: getreserve(address)
PC address: 891
Estimated Gas Usage: 18914 - 113662
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/dcb62b24d28a56c25e49d6f1a3b3c328.sol:60

	= add(tokenbalance

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400c00020f8e95, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: getreserve(address), txdata: 0x999ae067, value: 0x0
Caller: [SOMEGUY], function: getreserve(address), txdata: 0x999ae067000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Testnet
Function name: getreserve(address)
PC address: 979
Estimated Gas Usage: 18914 - 113662
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dcb62b24d28a56c25e49d6f1a3b3c328.sol:62

		
		uint256

--------------------
Initial State:

Account: [CREATOR], balance: 0x7bf95, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: getreserve(address), txdata: 0x999ae067000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Testnet
Function name: getreserve(address)
PC address: 1009
Estimated Gas Usage: 18914 - 113662
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dcb62b24d28a56c25e49d6f1a3b3c328.sol:63

(ethbalance, _reserve0) ;
		

--------------------
Initial State:

Account: [CREATOR], balance: 0x7bf95, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: getreserve(address), txdata: 0x999ae067000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Testnet
Function name: getreserve(address)
PC address: 1016
Estimated Gas Usage: 18914 - 113662
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dcb62b24d28a56c25e49d6f1a3b3c328.sol:66

		blocktim

--------------------
Initial State:

Account: [CREATOR], balance: 0x7bf95, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: getreserve(address), txdata: 0x999ae067000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Testnet
Function name: getreserve(address)
PC address: 1046
Estimated Gas Usage: 18914 - 113662
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dcb62b24d28a56c25e49d6f1a3b3c328.sol:66

mpLast;
    
  } 
    

	/*===

--------------------
Initial State:

Account: [CREATOR], balance: 0x7bf95, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: getreserve(address), txdata: 0x999ae067000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Testnet
Function name: getreserve(address)
PC address: 1059
Estimated Gas Usage: 18914 - 113662
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dcb62b24d28a56c25e49d6f1a3b3c328.sol:71

==================
    =      SA

--------------------
Initial State:

Account: [CREATOR], balance: 0x7bf95, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: getreserve(address), txdata: 0x999ae067000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Testnet
Function name: checksupply(address)
PC address: 1302
Estimated Gas Usage: 7964 - 62526
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/dcb62b24d28a56c25e49d6f1a3b3c328.sol:35

      uint256 newba

--------------------
Initial State:

Account: [CREATOR], balance: 0x4040207b954, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: getreserve(address), txdata: 0x999ae067, value: 0x0
Caller: [ATTACKER], function: checksupply(address), txdata: 0xca02f14b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Testnet
Function name: checksupply(address)
PC address: 1366
Estimated Gas Usage: 7964 - 62526
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dcb62b24d28a56c25e49d6f1a3b3c328.sol:36

		= newbala

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: checksupply(address), txdata: 0xca02f14b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Testnet
Function name: checksupply(address)
PC address: 1380
Estimated Gas Usage: 7964 - 62526
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dcb62b24d28a56c25e49d6f1a3b3c328.sol:38

} 
  
      function addsu

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: checksupply(address), txdata: 0xca02f14b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0