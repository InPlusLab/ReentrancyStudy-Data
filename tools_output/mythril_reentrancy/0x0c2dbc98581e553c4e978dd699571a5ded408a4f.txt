==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Fomo3d
Function name: someFunction()
PC address: 453
Estimated Gas Usage: 23581 - 138805
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:48

)(bytes4(keccak256("deposit()"))))  
        {
            // give fomo3d work t

--------------------
Initial State:

Account: [CREATOR], balance: 0x20ffe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 468
Estimated Gas Usage: 23581 - 138805
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:53

 gasleft();
        } else

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Forwarder
Function name: deposit3()
PC address: 474
Estimated Gas Usage: 24342 - 139280
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:215

        } else {
            depositSuccessful_ = fals

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000102020001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit3(), txdata: 0x43cd1638, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Forwarder
Function name: deposit2()
PC address: 474
Estimated Gas Usage: 24386 - 139324
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:215

        } else {
            depositSuccessful_ = fals

--------------------
Initial State:

Account: [CREATOR], balance: 0x1108000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: deposit2(), txdata: 0x539c0f14, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Forwarder
Function name: deposit4()
PC address: 474
Estimated Gas Usage: 24430 - 139368
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:215

        } else {
            depositSuccessful_ = fals

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: deposit4(), txdata: 0xbd0e5d07, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Forwarder
Function name: deposit()
PC address: 474
Estimated Gas Usage: 24474 - 139412
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:215

        } else {
            depositSuccessful_ = fals

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000300, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit(), txdata: 0xd0e30db0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 474
Estimated Gas Usage: 23581 - 138805
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:53

 gasleft();
        } else

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 478
Estimated Gas Usage: 23581 - 138805
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:55

depositSuccessful_ = 

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 487
Estimated Gas Usage: 23581 - 138805
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:56

actions_++;
            g

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 487
Estimated Gas Usage: 23625 - 138849
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:56

actions_++;
            g

--------------------
Initial State:

Account: [CREATOR], balance: 0xffe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 499
Estimated Gas Usage: 23581 - 138805
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:56

actions_++;
            g

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 501
Estimated Gas Usage: 23581 - 138805
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:57

eft();
        }
    }
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 505
Estimated Gas Usage: 23581 - 138805
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:57

eft();
        }
    }
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 509
Estimated Gas Usage: 23581 - 138805
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:61

fomo3d function that 

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Fomo3d
Function name: someFunction4()
PC address: 647
Estimated Gas Usage: 23625 - 138849
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:116

e fomo3d work to do that needs gas. what better way than storage 
            // 

--------------------
Initial State:

Account: [CREATOR], balance: 0xfde, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 662
Estimated Gas Usage: 23625 - 138849
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:121

;
            successfulTr

--------------------
Initial State:

Account: [CREATOR], balance: 0xffe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 668
Estimated Gas Usage: 23625 - 138849
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:121

;
            successfulTr

--------------------
Initial State:

Account: [CREATOR], balance: 0xffe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 672
Estimated Gas Usage: 23625 - 138849
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:123

            gasAfter_

--------------------
Initial State:

Account: [CREATOR], balance: 0xffe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Fomo3d
Function name: someFunction2()
PC address: 812
Estimated Gas Usage: 23669 - 138893
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:70

posit2()"))))  
        {
            // give fomo3d work to do that needs gas. w

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 827
Estimated Gas Usage: 23669 - 138893
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:76

else {
            deposit

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 833
Estimated Gas Usage: 23669 - 138893
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:76

else {
            deposit

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 837
Estimated Gas Usage: 23669 - 138893
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:77

rue;
            succ

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Fomo3d
Function name: someFunction3()
PC address: 971
Estimated Gas Usage: 23691 - 138915
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:93

  {
            // give fomo3d work to do that needs gas. what better way than st

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 986
Estimated Gas Usage: 23691 - 138915
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:99

ositSuccessful_ = true;
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x3bfe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 992
Estimated Gas Usage: 23691 - 138915
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:99

ositSuccessful_ = true;
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x3bfe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 996
Estimated Gas Usage: 23691 - 138915
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23c95d0a9bac580295e14ad7c51ab824.sol:100

ssfulTransactions_++;

--------------------
Initial State:

Account: [CREATOR], balance: 0x3bfe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0


