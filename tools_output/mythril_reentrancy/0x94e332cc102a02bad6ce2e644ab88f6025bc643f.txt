==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenSale
Function name: withdrawTokens(address,uint256)
PC address: 2043
Estimated Gas Usage: 3594 - 39287
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c9e2a9bb395fce7bb1fe1f79e9133efa.sol:412

    function setAdvisorFee(uint25

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawTokens(address,uint256), txdata: 0x06b091f9, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: addMeByRC()
PC address: 3675
Estimated Gas Usage: 1204 - 1629
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/c9e2a9bb395fce7bb1fe1f79e9133efa.sol:393

    to.transfer(value);
   

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: addMeByRC(), txdata: 0x66b52b93, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: setRateContract(address)
PC address: 3955
Estimated Gas Usage: 1266 - 1691
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/c9e2a9bb395fce7bb1fe1f79e9133efa.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setRateContract(address), txdata: 0x6b96668f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenSale
Function name: tokenValueInEther(uint256)
PC address: 4232
Estimated Gas Usage: 3243 - 39031
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c9e2a9bb395fce7bb1fe1f79e9133efa.sol:327

 );
		
		uint256 remainingTo

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: tokenValueInEther(uint256), txdata: 0x7b413985, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: setTime(uint256,uint256) or setTime(uint256,uint256)
PC address: 4430
Estimated Gas Usage: 1372 - 1797
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/c9e2a9bb395fce7bb1fe1f79e9133efa.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTime(uint256,uint256), txdata: 0xa0355eca, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: setWalletAddress(address)
PC address: 4878
Estimated Gas Usage: 1398 - 1823
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/c9e2a9bb395fce7bb1fe1f79e9133efa.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWalletAddress(address), txdata: 0xac1a386a, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: setTokenContract(address)
PC address: 5037
Estimated Gas Usage: 1420 - 1845
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/c9e2a9bb395fce7bb1fe1f79e9133efa.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x100, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTokenContract(address), txdata: 0xbbcd5bbe, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: setAdvisorFee(uint256)
PC address: 5196
Estimated Gas Usage: 1436 - 1861
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/c9e2a9bb395fce7bb1fe1f79e9133efa.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAdvisorFee(uint256), txdata: 0xcd1ce6d5, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: transferOwnership(address) or transferOwnership(address)
PC address: 5335
Estimated Gas Usage: 1486 - 1911
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/c9e2a9bb395fce7bb1fe1f79e9133efa.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38b, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: withdraw(address,uint256)
PC address: 5676
Estimated Gas Usage: 1532 - 1957
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/c9e2a9bb395fce7bb1fe1f79e9133efa.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdraw(address,uint256), txdata: 0xf3fef3a3, value: 0x0