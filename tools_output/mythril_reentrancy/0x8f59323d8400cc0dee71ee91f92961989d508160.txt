==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Fomo3d
Function name: someFunction()
PC address: 652
Estimated Gas Usage: 23634 - 138951
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:48

)(bytes4(keccak256("deposit()"))))  
        {
            // give fomo3d work t

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 343434343434343434343434deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 674
Estimated Gas Usage: 23634 - 138951
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:53

 gasleft();
        } else

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 343434343434343434343434deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 688
Estimated Gas Usage: 23634 - 138951
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:53

 gasleft();
        } else

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 343434343434343434343434deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 695
Estimated Gas Usage: 23634 - 138951
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:55

depositSuccessful_ = 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 343434343434343434343434deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 712
Estimated Gas Usage: 23634 - 138951
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:56

actions_++;
            g

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 343434343434343434343434deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 726
Estimated Gas Usage: 23634 - 138951
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:56

actions_++;
            g

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 343434343434343434343434deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 733
Estimated Gas Usage: 23634 - 138951
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:57

eft();
        }
    }
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 343434343434343434343434deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Forwarder
Function name: deposit3()
PC address: 742
Estimated Gas Usage: 24506 - 140104
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:215

        } else {
            depositSuccessful_ = fals

--------------------
Initial State:

Account: [CREATOR], balance: 0x5, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 161616161616161616161616deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit3(), txdata: 0x43cd1638, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 744
Estimated Gas Usage: 23634 - 138951
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:57

eft();
        }
    }
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 343434343434343434343434deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction()
PC address: 751
Estimated Gas Usage: 23634 - 138951
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:61

fomo3d function that 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 343434343434343434343434deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction(), txdata: 0x35b09a6e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit3()
PC address: 818
Estimated Gas Usage: 24506 - 140104
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:217

= gasleft();
            

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 383838383838383838383838deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit3(), txdata: 0x43cd1638, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit3()
PC address: 832
Estimated Gas Usage: 24506 - 140104
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:217

= gasleft();
            

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 383838383838383838383838deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit3(), txdata: 0x43cd1638, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit3()
PC address: 839
Estimated Gas Usage: 24506 - 140104
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:219

    }
    }
    
    func

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 383838383838383838383838deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit3(), txdata: 0x43cd1638, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit3()
PC address: 850
Estimated Gas Usage: 24506 - 140104
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:219

    }
    }
    
    func

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 383838383838383838383838deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit3(), txdata: 0x43cd1638, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit3()
PC address: 857
Estimated Gas Usage: 24506 - 140104
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:222


        public 
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 383838383838383838383838deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit3(), txdata: 0x43cd1638, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Fomo3d
Function name: someFunction4()
PC address: 972
Estimated Gas Usage: 23678 - 138995
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:116

e fomo3d work to do that needs gas. what better way than storage 
            // 

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 994
Estimated Gas Usage: 23678 - 138995
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:121

;
            successfulTr

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000007f83809, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 1008
Estimated Gas Usage: 23678 - 138995
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:121

;
            successfulTr

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000007f83809, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 1015
Estimated Gas Usage: 23678 - 138995
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:123

            gasAfter_

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000007f83809, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 1032
Estimated Gas Usage: 23678 - 138995
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:126

 
    // for data trackin

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000007f83809, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 1046
Estimated Gas Usage: 23678 - 138995
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:126

 
    // for data trackin

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000007f83809, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 1053
Estimated Gas Usage: 23678 - 138995
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:127

unction to check this con

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000007f83809, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 1064
Estimated Gas Usage: 23678 - 138995
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:127

unction to check this con

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000007f83809, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction4()
PC address: 1071
Estimated Gas Usage: 23678 - 138995
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:128

    function checkBal

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000007f83809, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction4(), txdata: 0x85439f82, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Forwarder
Function name: deposit2()
PC address: 1119
Estimated Gas Usage: 24550 - 140148
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:194

      return(true);
        } else {
            depos

--------------------
Initial State:

Account: [CREATOR], balance: 0x800003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit2(), txdata: 0x539c0f14, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit2()
PC address: 1195
Estimated Gas Usage: 24550 - 140148
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:197

          gasAfter_ = gas

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3002000e012e39802, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit2(), txdata: 0x539c0f14, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit2()
PC address: 1209
Estimated Gas Usage: 24550 - 140148
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:197

          gasAfter_ = gas

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3002000e012e39802, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit2(), txdata: 0x539c0f14, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit2()
PC address: 1216
Estimated Gas Usage: 24550 - 140148
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:198

 return(false);
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3002000e012e39802, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit2(), txdata: 0x539c0f14, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit2()
PC address: 1227
Estimated Gas Usage: 24550 - 140148
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:198

 return(false);
        }

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3002000e012e39802, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit2(), txdata: 0x539c0f14, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit2()
PC address: 1234
Estimated Gas Usage: 24550 - 140148
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:202

 function deposit3()


--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3002000e012e39802, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit2(), txdata: 0x539c0f14, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Fomo3d
Function name: someFunction2()
PC address: 1292
Estimated Gas Usage: 23722 - 139039
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:70

posit2()"))))  
        {
            // give fomo3d work to do that needs gas. w

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 1314
Estimated Gas Usage: 23722 - 139039
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:76

else {
            deposit

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 1328
Estimated Gas Usage: 23722 - 139039
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:76

else {
            deposit

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 1335
Estimated Gas Usage: 23722 - 139039
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:77

rue;
            succ

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 1352
Estimated Gas Usage: 23722 - 139039
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:79

  gasAfter_ = gasleft();


--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 1366
Estimated Gas Usage: 23722 - 139039
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:79

  gasAfter_ = gasleft();


--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 1373
Estimated Gas Usage: 23722 - 139039
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:81


    
    // some fomo3d 

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 1384
Estimated Gas Usage: 23722 - 139039
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:81


    
    // some fomo3d 

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction2()
PC address: 1391
Estimated Gas Usage: 23722 - 139039
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:83

eposits to Forwarder


--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction2(), txdata: 0x9ef45a31, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Forwarder
Function name: deposit4()
PC address: 1496
Estimated Gas Usage: 24594 - 140192
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:236

         depositSuccessful_ = false;
            gasAf

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: deposit4(), txdata: 0xbd0e5d07, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit4()
PC address: 1572
Estimated Gas Usage: 24594 - 140192
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:238

     return(false);
     

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit4(), txdata: 0xbd0e5d07, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit4()
PC address: 1586
Estimated Gas Usage: 24594 - 140192
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:238

     return(false);
     

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit4(), txdata: 0xbd0e5d07, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit4()
PC address: 1593
Estimated Gas Usage: 24594 - 140192
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:242

 // for data tracking let

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit4(), txdata: 0xbd0e5d07, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit4()
PC address: 1604
Estimated Gas Usage: 24594 - 140192
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:242

 // for data tracking let

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit4(), txdata: 0xbd0e5d07, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Fomo3d
Function name: someFunction3()
PC address: 1606
Estimated Gas Usage: 23744 - 139061
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:93

  {
            // give fomo3d work to do that needs gas. what better way than st

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x1, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit4()
PC address: 1611
Estimated Gas Usage: 24594 - 140192
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:242

on to check this cont

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit4(), txdata: 0xbd0e5d07, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 1628
Estimated Gas Usage: 23744 - 139061
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:99

ositSuccessful_ = true;
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 1642
Estimated Gas Usage: 23744 - 139061
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:99

ositSuccessful_ = true;
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 1649
Estimated Gas Usage: 23744 - 139061
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:100

ssfulTransactions_++;

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 1666
Estimated Gas Usage: 23744 - 139061
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:101

);
        }
    }
    
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 1680
Estimated Gas Usage: 23744 - 139061
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:101

);
        }
    }
    
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 1687
Estimated Gas Usage: 23744 - 139061
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:105

3d function that deposits

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 1698
Estimated Gas Usage: 23744 - 139061
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:105

3d function that deposits

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Fomo3d
Function name: someFunction3()
PC address: 1705
Estimated Gas Usage: 23744 - 139061
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:106

   function someFunct

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 404040404040404040404040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: someFunction3(), txdata: 0xacddbe1c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Forwarder
Function name: deposit()
PC address: 1898
Estimated Gas Usage: 24638 - 140236
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:173

= gasleft();
            return(true);
        } else

--------------------
Initial State:

Account: [CREATOR], balance: 0xa, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2208400040a000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: deposit(), txdata: 0xd0e30db0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit()
PC address: 1974
Estimated Gas Usage: 24638 - 140236
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:176

cessful_ = false;
       

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit(), txdata: 0xd0e30db0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit()
PC address: 1988
Estimated Gas Usage: 24638 - 140236
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:176

cessful_ = false;
       

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit(), txdata: 0xd0e30db0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit()
PC address: 1995
Estimated Gas Usage: 24638 - 140236
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:177

sleft();
            retu

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit(), txdata: 0xd0e30db0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit()
PC address: 2006
Estimated Gas Usage: 24638 - 140236
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:177

sleft();
            retu

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit(), txdata: 0xd0e30db0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Forwarder
Function name: deposit()
PC address: 2013
Estimated Gas Usage: 24638 - 140236
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f11858e03e13c9cb356e804eb70cb4b0.sol:179

    }
    }
    
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit(), txdata: 0xd0e30db0, value: 0x0