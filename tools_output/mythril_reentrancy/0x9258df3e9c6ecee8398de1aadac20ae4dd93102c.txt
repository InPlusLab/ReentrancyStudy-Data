==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalStatistics()
PC address: 1131
Estimated Gas Usage: 10575 - 115532
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x8b, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalStatistics(), txdata: 0x9022366d, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AerumCrowdsaleStatistics
Function name: getTotalUsdRaised()
PC address: 1262
Estimated Gas Usage: 3580 - 38753
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x1080000000802, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 7d7d7d7d7d7d7d7d7d7d7d7ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalUsdRaised(), txdata: 0x45ba4d2c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AerumCrowdsaleStatistics
Function name: getTotalStatistics()
PC address: 1262
Estimated Gas Usage: 10575 - 115532
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x80000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalStatistics(), txdata: 0x9022366d, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: AerumCrowdsaleStatistics
Function name: getTotalStatistics()
PC address: 1262
Estimated Gas Usage: 10575 - 115532
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x402, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: getTotalStatistics(), txdata: 0x9022366d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalStatistics()
PC address: 1262
Estimated Gas Usage: 10575 - 115532
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x8b, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalStatistics(), txdata: 0x9022366d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalUsdRaised()
PC address: 1321
Estimated Gas Usage: 3580 - 38753
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x1080000000807, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 7d7d7d7d7d7d7d7d7d7d7d7ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalUsdRaised(), txdata: 0x45ba4d2c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AerumCrowdsaleStatistics
Function name: getTotalTokensSold()
PC address: 1924
Estimated Gas Usage: 3712 - 38885
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:389

uint256, uint256, uint

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalTokensSold(), txdata: 0x94c33163, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AerumCrowdsaleStatistics
Function name: getTotalStatistics()
PC address: 1924
Estimated Gas Usage: 10575 - 115532
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:389

uint256, uint256, uint

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalStatistics(), txdata: 0x9022366d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalTokensSold()
PC address: 1983
Estimated Gas Usage: 3712 - 38885
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:389

external view retu

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalTokensSold(), txdata: 0x94c33163, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalStatistics()
PC address: 1983
Estimated Gas Usage: 10575 - 115532
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:389

external view retu

--------------------
Initial State:

Account: [CREATOR], balance: 0x8b, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalStatistics(), txdata: 0x9022366d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalStatistics()
PC address: 2051
Estimated Gas Usage: 10575 - 115532
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x8b, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalStatistics(), txdata: 0x9022366d, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AerumCrowdsaleStatistics
Function name: getTotalWeiRaised()
PC address: 2182
Estimated Gas Usage: 3756 - 38929
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalWeiRaised(), txdata: 0x9f0c83f9, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AerumCrowdsaleStatistics
Function name: getTotalStatistics()
PC address: 2182
Estimated Gas Usage: 10575 - 115532
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x80000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalStatistics(), txdata: 0x9022366d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalStatistics()
PC address: 2182
Estimated Gas Usage: 10575 - 115532
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x8b, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalStatistics(), txdata: 0x9022366d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalWeiRaised()
PC address: 2241
Estimated Gas Usage: 3756 - 38929
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getTotalWeiRaised(), txdata: 0x9f0c83f9, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalUsdRaised()
PC address: 2595
Estimated Gas Usage: 3486 - 38378
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x2004000000000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101100101010101010101012001000000000000000000000000000000000000000000000000000000000000000087, value: 0x0
Caller: [SOMEGUY], function: getTotalUsdRaised(), txdata: 0x45ba4d2c, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalTokensSold()
PC address: 2595
Estimated Gas Usage: 3618 - 38510
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:389

external view returns (uint256, uint256, uint2

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000001000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000100400001011001020002800101020201800000af, value: 0x0
Caller: [SOMEGUY], function: getTotalTokensSold(), txdata: 0x94c33163, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalStatistics()
PC address: 2595
Estimated Gas Usage: 3620 - 38512
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:389

external view returns (uint256, uint256, uint2

--------------------
Initial State:

Account: [CREATOR], balance: 0x400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000102801001010101024000800102008080010180af, value: 0x0
Caller: [SOMEGUY], function: getTotalStatistics(), txdata: 0x9022366d, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: AerumCrowdsaleStatistics
Function name: getTotalWeiRaised()
PC address: 2595
Estimated Gas Usage: 3662 - 38554
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/41c575030b0f7b29a71aafc5fc59cadc.sol:395
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000010101010220082001014001014001018040018000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c2, value: 0x0
Caller: [SOMEGUY], function: getTotalWeiRaised(), txdata: 0x9f0c83f9, value: 0x0