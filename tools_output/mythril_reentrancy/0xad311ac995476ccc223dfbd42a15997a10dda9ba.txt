==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Kman
Function name: PayWinners(uint256,address)
PC address: 919
Estimated Gas Usage: 1125 - 1550
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/effe058d18b7a247938f3f11c557858d.sol:65

);

        _;

    }

    

    

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: openToThePublic(), txdata: 0x246d4098, value: 0x0
Caller: [CREATOR], function: PayWinners(uint256,address), txdata: 0x5d113b03, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Kman
Function name: PayWinners(uint256,address)
PC address: 1011
Estimated Gas Usage: 2001 - 2756
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/effe058d18b7a247938f3f11c557858d.sol:27

ender == owner);

        _;

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: openToThePublic(), txdata: 0x246d4098, value: 0x0
Caller: [CREATOR], function: PayWinners(uint256,address), txdata: 0x5d113b03, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Kman
Function name: returnAnyERC20Token(address,address,uint256)
PC address: 2059
Estimated Gas Usage: 1158 - 1583
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/effe058d18b7a247938f3f11c557858d.sol:27

ender == owner);

        _;

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: openToThePublic(), txdata: 0x246d4098, value: 0x0
Caller: [CREATOR], function: returnAnyERC20Token(address,address,uint256), txdata: 0x9fc9278e, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Kman
Function name: returnAnyERC20Token(address,address,uint256)
PC address: 2323
Estimated Gas Usage: 3827 - 39520
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/effe058d18b7a247938f3f11c557858d.sol:365

ccess);

}  



//Need to ensure the Lottery contract kno

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: returnAnyERC20Token(address,address,uint256), txdata: 0x9fc9278e, value: 0x0
Caller: [CREATOR], function: returnAnyERC20Token(address,address,uint256), txdata: 0x9fc9278e646464646464646464646464deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Kman
Function name: start()
PC address: 3071
Estimated Gas Usage: 1146 - 1571
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/effe058d18b7a247938f3f11c557858d.sol:65

);

        _;

    }

    

    

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20000000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: openToThePublic(), txdata: 0x246d4098, value: 0x0
Caller: [ATTACKER], function: start(), txdata: 0xbe9a6555, value: 0x0