==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: LucisDollar
Function name: batchTransfer(address[],uint256[])
PC address: 831
Estimated Gas Usage: 1609 - 2034
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1e442af152b20ff575a55004e7c8a403.sol:923
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: batchTransfer(address[],uint256[]), txdata: 0x88d695b2ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc80, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: LucisDollar
Function name: batchTransfer(address[],uint256[])
PC address: 842
Estimated Gas Usage: 1375 - 1800
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1e442af152b20ff575a55004e7c8a403.sol:923
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: batchTransfer(address[],uint256[]), txdata: 0x88d695b240000000000000000000000000000000000000000000000000000000000002f0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: LucisDollar
Function name: emergencyERC20Drain(address,uint256)
PC address: 2546
Estimated Gas Usage: 3882 - 39531
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1e442af152b20ff575a55004e7c8a403.sol:923
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: emergencyERC20Drain(address,uint256), txdata: 0xdb0e16f1000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


