==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ARXExchange
Function name: amIReadyToExchange(address)
PC address: 890
Estimated Gas Usage: 2899 - 38262
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:283

 sender has some approved tokens

  

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010101010101010101010101010101010201010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: amIReadyToExchange(address), txdata: 0xb5a8289b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ARXExchange
Function name: withdrawCoinBalance(address)
PC address: 2271
Estimated Gas Usage: 6162 - 76466
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:239

nce from given address to this

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000010100000101010101010201010201014001010101000101000101000202000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawCoinBalance(address), txdata: 0xe336a733, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ARXExchange
Function name: withdrawCoinBalance(address)
PC address: 2334
Estimated Gas Usage: 6162 - 76466
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:241

   * 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000010101010100000101000101000100010101020101000101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawCoinBalance(address), txdata: 0xe336a733, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ARXExchange
Function name: withdrawCoinBalance(address)
PC address: 2528
Estimated Gas Usage: 6162 - 76466
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:241

   * 4) Calculated WEI amount for app

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000010100000101010101010201010201014001010101000101000101000202000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawCoinBalance(address), txdata: 0xe336a733, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ARXExchange
Function name: withdrawCoinBalance(address)
PC address: 2528
Estimated Gas Usage: 6162 - 76466
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:241

   * 4) Calculated WEI amount for app

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 01, value: 0x0
Caller: [CREATOR], function: withdrawCoinBalance(address), txdata: 0xe336a733, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ARXExchange
Function name: withdrawCoinBalance(address)
PC address: 2528
Estimated Gas Usage: 6162 - 76466
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:241

   * 4) Calculated WEI amount for app

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000010101010100000101000101000100010101020101000101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawCoinBalance(address), txdata: 0xe336a733, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ARXExchange
Function name: getInfo(address)
PC address: 3046
Estimated Gas Usage: 9631 - 115158
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:259

dress

     */

    f

--------------------
Initial State:

Account: [CREATOR], balance: 0x140000000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getInfo(address), txdata: 0xffdd5cf1, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ARXExchange
Function name: getInfo(address)
PC address: 3107
Estimated Gas Usage: 9631 - 115158
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:263

ction

--------------------
Initial State:

Account: [CREATOR], balance: 0x140000100000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getInfo(address), txdata: 0xffdd5cf1, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ARXExchange
Function name: getInfo(address)
PC address: 3345
Estimated Gas Usage: 9631 - 115158
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:263

ction amIReadyToExchange(address add

--------------------
Initial State:

Account: [CREATOR], balance: 0x140000000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getInfo(address), txdata: 0xffdd5cf1, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ARXExchange
Function name: getInfo(address)
PC address: 3345
Estimated Gas Usage: 9631 - 115158
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:263

ction amIReadyToExchange(address add

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 01, value: 0x0
Caller: [ATTACKER], function: getInfo(address), txdata: 0xffdd5cf1, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ARXExchange
Function name: getInfo(address)
PC address: 3345
Estimated Gas Usage: 9631 - 115158
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:263

ction amIReadyToExchange(address add

--------------------
Initial State:

Account: [CREATOR], balance: 0x140000100000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getInfo(address), txdata: 0xffdd5cf1, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ARXExchange
Function name: getInfo(address)
PC address: 3404
Estimated Gas Usage: 9631 - 115158
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:265

int256 ap

--------------------
Initial State:

Account: [CREATOR], balance: 0x140000100000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getInfo(address), txdata: 0xffdd5cf1, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ARXExchange
Function name: getInfo(address)
PC address: 3409
Estimated Gas Usage: 9631 - 115158
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:263

 publ

--------------------
Initial State:

Account: [CREATOR], balance: 0x140000100000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getInfo(address), txdata: 0xffdd5cf1, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ARXExchange
Function name: getInfo(address)
PC address: 3647
Estimated Gas Usage: 9631 - 115158
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:263

 public view returns(bool) {

      

--------------------
Initial State:

Account: [CREATOR], balance: 0x140000000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getInfo(address), txdata: 0xffdd5cf1, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ARXExchange
Function name: getInfo(address)
PC address: 3647
Estimated Gas Usage: 9631 - 115158
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:263

 public view returns(bool) {

      

--------------------
Initial State:

Account: [CREATOR], balance: 0x140000100000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getInfo(address), txdata: 0xffdd5cf1, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ARXExchange
Function name: getInfo(address)
PC address: 3704
Estimated Gas Usage: 9631 - 115158
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/511d61af46479a2590371d021f5ea62b.sol:263

 public view returns(bool) {

        uint256 ap

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 01, value: 0x0
Caller: [ATTACKER], function: getInfo(address), txdata: 0xffdd5cf1, value: 0x0