==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Traders
Function name: addTrader(uint8,address) or addTrader(uint8,address)
PC address: 1431
Estimated Gas Usage: 14685 - 90617
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/56c40180636cdb5a982a5df524d364cc.sol:209

/// @dev Remove a tr

--------------------
Initial State:

Account: [CREATOR], balance: 0x100, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addTrader(uint8,address), txdata: 0xd6d6e8bd, value: 0x0
Caller: [CREATOR], function: addTrader(uint8,address), txdata: 0xd6d6e8bde8e8e8e8e8e8e8e8e8e8e8e80000000000000000000000000000800000000000e8e8e8e8e8e8e8e8e8e8e8e8deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Traders
Function name: addTrader(uint8,address) or addTrader(uint8,address)
PC address: 1505
Estimated Gas Usage: 14685 - 90617
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/56c40180636cdb5a982a5df524d364cc.sol:209

ess. Only owner.

  function

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addTrader(uint8,address), txdata: 0xd6d6e8bd0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Traders
Function name: addTrader(uint8,address) or addTrader(uint8,address)
PC address: 1558
Estimated Gas Usage: 14685 - 90617
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/56c40180636cdb5a982a5df524d364cc.sol:209

ess. Only owner.

  function

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addTrader(uint8,address), txdata: 0xd6d6e8bd0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Traders
Function name: addTrader(uint8,address) or addTrader(uint8,address)
PC address: 1632
Estimated Gas Usage: 14685 - 90617
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/56c40180636cdb5a982a5df524d364cc.sol:211

rader(uint8 protocolId) 

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addTrader(uint8,address), txdata: 0xd6d6e8bd0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Traders
Function name: addTrader(uint8,address) or addTrader(uint8,address)
PC address: 1646
Estimated Gas Usage: 14685 - 90617
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/56c40180636cdb5a982a5df524d364cc.sol:211

rader(uint8 protocolId) 

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addTrader(uint8,address), txdata: 0xd6d6e8bd0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0