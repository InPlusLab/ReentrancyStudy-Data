with mythril_dir
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: fallback
PC address: 404
Estimated Gas Usage: 524 - 900
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:20

y1 - _y2 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: isAdjacent(uint8,uint8,uint8,uint8), txdata: 0x10b23ceb00000000000000000000000000000000000000000000000000000000000000ff0000000000000000000000000000000000000000000000000000000000000003, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: fallback
PC address: 419
Estimated Gas Usage: 524 - 900
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:20

|      //

--------------------
Initial State:

Account: [CREATOR], balance: 0x4002c100200000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: isAdjacent(uint8,uint8,uint8,uint8), txdata: 0x10b23ceb00000000000000000000000000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000081, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BWMarket
Function name: cancelOffer(uint16)
PC address: 428
Estimated Gas Usage: 1080 - 2165
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:646

 a tile offer

    constructor(a

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: cancelOffer(uint16), txdata: 0x4807270b, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: fallback
PC address: 451
Estimated Gas Usage: 524 - 900
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:21

1 - _x2 =

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: isAdjacent(uint8,uint8,uint8,uint8), txdata: 0x10b23ceb00000000000000000000000000000000000000000000000000000000000000ff0000000000000000000000000000000000000000000000000000000000000002, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: fallback
PC address: 466
Estimated Gas Usage: 524 - 900
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:21

      // 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: isAdjacent(uint8,uint8,uint8,uint8), txdata: 0x10b23ceb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: fallback
PC address: 482
Estimated Gas Usage: 524 - 900
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:22

y2 - _y1 

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: isAdjacent(uint8,uint8,uint8,uint8), txdata: 0x10b23ceb00000000000000000000000000000000000000000000000000000000000000ff0000000000000000000000000000000000000000000000000000000000000002, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: fallback
PC address: 498
Estimated Gas Usage: 524 - 900
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:22

 - _y2 ==

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: isAdjacent(uint8,uint8,uint8,uint8), txdata: 0x10b23ceb00000000000000000000000000000000000000000000000000000000000000ff0000000000000000000000000000000000000000000000000000000000000003, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: fallback
PC address: 513
Estimated Gas Usage: 524 - 900
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:22

     // R

--------------------
Initial State:

Account: [CREATOR], balance: 0x4002c100200000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: isAdjacent(uint8,uint8,uint8,uint8), txdata: 0x10b23ceb00000000000000000000000000000000000000000000000000000000000000ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000081, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: fallback
PC address: 529
Estimated Gas Usage: 524 - 900
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:23

2 - _y1 =

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: isAdjacent(uint8,uint8,uint8,uint8), txdata: 0x10b23ceb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: fallback
PC address: 545
Estimated Gas Usage: 501 - 877
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:23

- _y2 == 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: isAdjacent(uint8,uint8,uint8,uint8), txdata: 0x10b23ceb000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000ff, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: ceil(uint256,uint256)
PC address: 600
Estimated Gas Usage: 287 - 663
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:10

 _multiple - 1) / _

--------------------
Initial State:

Account: [CREATOR], balance: 0x8a06084d019f7a00, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: ceil(uint256,uint256), txdata: 0x8587be6e80001402002080000010002000000ffe0001400101008100c02000000000008080, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BWUtility
Function name: ceil(uint256,uint256)
PC address: 601
Estimated Gas Usage: 287 - 663
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:10

 _multiple - 1) / _mult

--------------------
Initial State:

Account: [CREATOR], balance: 0x4e000004480008000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: ceil(uint256,uint256), txdata: 0x8587be6ea00000000000000000000000000000000000000000000000000000000000000060, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BWMarket
Function name: cancelOffer(uint16)
PC address: 605
Estimated Gas Usage: 3592 - 39899
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:738
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: cancelOffer(uint16), txdata: 0x4807270b, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: BWUtility
Function name: ceil(uint256,uint256)
PC address: 609
Estimated Gas Usage: 207 - 302
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:9

 ceil(uint _amount, uint _multiple) pure public returns (uint) {
        return ((_amount + _multiple - 1) / _multiple) * _multiple;
    }

    // C

--------------------
Initial State:

Account: [CREATOR], balance: 0x144800000040c733b, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: ceil(uint256,uint256), txdata: 0x8587be6e, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BWMarket
Function name: transferTokens(address,address)
PC address: 876
Estimated Gas Usage: 1097 - 2182
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:644

ice of an offer to sell a tile
    event TileOfferCancelled(

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferTokens(address,address), txdata: 0x6a092e79, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BWMarket
Function name: transferTokens(address,address)
PC address: 994
Estimated Gas Usage: 4540 - 77154
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:738
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferTokens(address,address), txdata: 0x6a092e79000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BWMarket
Function name: transferTokens(address,address)
PC address: 1115
Estimated Gas Usage: 4540 - 77154
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:738
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferTokens(address,address), txdata: 0x6a092e79000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: BWMarket
Function name: transferTokens(address,address)
PC address: 1115
Estimated Gas Usage: 4540 - 77154
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:738
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferTokens(address,address), txdata: 0x6a092e79, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BWMarket
Function name: setAllowMarketplace(bool)
PC address: 1194
Estimated Gas Usage: 1082 - 1837
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:644

ice of an offer to sell a tile
    event TileOfferCancelled(

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAllowMarketplace(bool), txdata: 0x8b2d2dca, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BWMarket
Function name: acceptOffer(uint16,uint256)
PC address: 1328
Estimated Gas Usage: 1184 - 2599
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:646

 a tile offer

    constructor(a

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: acceptOffer(uint16,uint256), txdata: 0xbfe6b1ac, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BWMarket
Function name: createOffer(uint16,uint256)
PC address: 2087
Estimated Gas Usage: 1221 - 2636
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/06fc09a0294965e11851ef9079062ddf.sol:646

 a tile offer

    constructor(a

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: createOffer(uint16,uint256), txdata: 0xe33a9ab7, value: 0x0


