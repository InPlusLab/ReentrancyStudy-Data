==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: NervesSmartStaking
Function name: SuperStakeMultiSendToken()
PC address: 4785
Estimated Gas Usage: 21156 - 116473
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:491

rentUser.contributions[q].time

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 525252525252525252525252deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: SuperStakeMultiSendToken(), txdata: 0x2762e20d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: NervesSmartStaking
Function name: SuperStakeMultiSendToken()
PC address: 4846
Estimated Gas Usage: 21156 - 116473
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:491

+ 24 hours && now < currentUser.contributions[q].time

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 525252525252525252525252deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: SuperStakeMultiSendToken(), txdata: 0x2762e20d, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: NervesSmartStaking
Function name: MasterStakeMultiSendToken()
PC address: 6196
Estimated Gas Usage: 21200 - 116517
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:567

rsList.length && msg.gas > 900

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: MasterStakeMultiSendToken(), txdata: 0x3d0c037c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: NervesSmartStaking
Function name: MasterStakeMultiSendToken()
PC address: 6257
Estimated Gas Usage: 21200 - 116517
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:563





        while(p<usersList.length && msg.gas > 900

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: MasterStakeMultiSendToken(), txdata: 0x3d0c037c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: NervesSmartStaking
Function name: StakeMultiSendToken()
PC address: 8533
Estimated Gas Usage: 21244 - 116561
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:429

entUser.contributions[q].time 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: b1b1b1b1b1b1b1b1b1b1b1b1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: StakeMultiSendToken(), txdata: 0x4898ef5f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: NervesSmartStaking
Function name: StakeMultiSendToken()
PC address: 8594
Estimated Gas Usage: 21244 - 116561
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:429

          if(now > currentUser.contributions[q].time 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: b1b1b1b1b1b1b1b1b1b1b1b1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: StakeMultiSendToken(), txdata: 0x4898ef5f, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: NervesSmartStaking
Function name: WithdrawETH(uint256)
PC address: 12935
Estimated Gas Usage: 3026 - 37637
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:855

r = users[msg.se

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: WithdrawETH(uint256), txdata: 0x94effa1480, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: NervesSmartStaking
Function name: WithdrawETH(uint256)
PC address: 13009
Estimated Gas Usage: 3026 - 37637
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:861

t lockedTokens =

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: WithdrawETH(uint256), txdata: 0x94effa1480, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: NervesSmartStaking
Function name: SetEthBonus(uint256)
PC address: 13361
Estimated Gas Usage: 19834 - 115688
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:577

r.contributions[q].time + 85 d

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: a0a0a0a0a0a0a0a0a0a0a0a0deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: SetEthBonus(uint256), txdata: 0x9d0981b201, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: NervesSmartStaking
Function name: SetEthBonus(uint256)
PC address: 13422
Estimated Gas Usage: 19834 - 115688
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:577

    if(now > currentUser.contributions[q].time + 85 d

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: a0a0a0a0a0a0a0a0a0a0a0a0deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: SetEthBonus(uint256), txdata: 0x9d0981b201, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: NervesSmartStaking
Function name: SetEthBonus(uint256)
PC address: 13430
Estimated Gas Usage: 19834 - 115688
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:579

              amou

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: a0a0a0a0a0a0a0a0a0a0a0a0deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: SetEthBonus(uint256), txdata: 0x9d0981b201, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: NervesSmartStaking
Function name: ReturnTokens(address,address,uint256)
PC address: 14030
Estimated Gas Usage: 3309 - 38391
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:891
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: ReturnTokens(address,address,uint256), txdata: 0xc1486b07000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: NervesSmartStaking
Function name: CheckAllowance()
PC address: 14999
Estimated Gas Usage: 3288 - 38651
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6f8d13fdb4cf87d0c0f796639ddbf110.sol:865

.time + 24 hours){

                locked

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000082882, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 646464646464646464646464deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: CheckAllowance(), txdata: 0xda4a48f9, value: 0x0