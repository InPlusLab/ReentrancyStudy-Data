==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Faucet
Function name: dripMe()
PC address: 742
Estimated Gas Usage: 11169 - 67435
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d8571f1ba5ec444425db2cdefa672418.sol:38

dripAmount * 10 ** decimals);
        alreadyReceived[msg.sender]

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x3, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 969696969696969696969696deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: dripMe(), txdata: 0x96e8cace, value: 0x0
Caller: [CREATOR], function: dripMe(), txdata: 0x96e8cace, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Faucet
Function name: dripMe()
PC address: 836
Estimated Gas Usage: 11169 - 67435
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d8571f1ba5ec444425db2cdefa672418.sol:40

  }
    
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 313131313131313131313131deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: dripMe(), txdata: 0x96e8cace, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Faucet
Function name: dripMe()
PC address: 850
Estimated Gas Usage: 11169 - 67435
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d8571f1ba5ec444425db2cdefa672418.sol:40

  }
    
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 313131313131313131313131deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: dripMe(), txdata: 0x96e8cace, value: 0x0