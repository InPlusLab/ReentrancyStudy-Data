==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SNTGiveaway
Function name: retrieveFunds()
PC address: 2000
Estimated Gas Usage: 6140 - 76634
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:455
Initial State:

Account: [CREATOR], balance: 0x11000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0d0d0d0d0d0d0d0d0d0d0d0ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: retrieveFunds(), txdata: 0x61b20d8c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNTGiveaway
Function name: retrieveFunds()
PC address: 2064
Estimated Gas Usage: 6140 - 76634
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:455
Initial State:

Account: [CREATOR], balance: 0x200, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0d0d0d0d0d0d0d0d0d0d0d0ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: retrieveFunds(), txdata: 0x61b20d8c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SNTGiveaway
Function name: retrieveFunds()
PC address: 2258
Estimated Gas Usage: 6140 - 76634
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:455
Initial State:

Account: [CREATOR], balance: 0x11000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0d0d0d0d0d0d0d0d0d0d0d0ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: retrieveFunds(), txdata: 0x61b20d8c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNTGiveaway
Function name: retrieveFunds()
PC address: 2258
Estimated Gas Usage: 6140 - 76634
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:455
Initial State:

Account: [CREATOR], balance: 0x200, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0d0d0d0d0d0d0d0d0d0d0d0ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: retrieveFunds(), txdata: 0x61b20d8c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SNTGiveaway
Function name: manualSend(address,bytes5)
PC address: 3270
Estimated Gas Usage: 22503 - 135193
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:421

(msg.sender, sntBalance), "Tra

--------------------
Initial State:

Account: [CREATOR], balance: 0x10800c6400000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0d0d0d0d0d0d0d0d0d0d0d0ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: manualSend(address,bytes5), txdata: 0x6a21857f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNTGiveaway
Function name: manualSend(address,bytes5)
PC address: 3471
Estimated Gas Usage: 22503 - 135193
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:423

);

    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: b8b8b8b8b8b8b8b8b8b8b8b8deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: manualSend(address,bytes5), txdata: 0x6a21857f, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: SNTGiveaway
Function name: manualSend(address,bytes5)
PC address: 3492
Estimated Gas Usage: 22503 - 135193
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:423

ruct(msg.sender);

    }


--------------------
Initial State:

Account: [CREATOR], balance: 0x110000000000009, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: manualSend(address,bytes5), txdata: 0x6a21857f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNTGiveaway
Function name: manualSend(address,bytes5)
PC address: 3492
Estimated Gas Usage: 22503 - 135193
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:423

ruct(msg.sender);

    }


--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: b8b8b8b8b8b8b8b8b8b8b8b8deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: manualSend(address,bytes5), txdata: 0x6a21857f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNTGiveaway
Function name: manualSend(address,bytes5)
PC address: 3553
Estimated Gas Usage: 22503 - 135193
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:429

he contra

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: b8b8b8b8b8b8b8b8b8b8b8b8deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: manualSend(address,bytes5), txdata: 0x6a21857f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNTGiveaway
Function name: manualSend(address,bytes5)
PC address: 3556
Estimated Gas Usage: 22503 - 135193
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:429



    fun

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: b8b8b8b8b8b8b8b8b8b8b8b8deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: manualSend(address,bytes5), txdata: 0x6a21857f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SNTGiveaway
Function name: boom()
PC address: 5627
Estimated Gas Usage: 6272 - 76766
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:437

      selfdestruct(msg.sende

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x800000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: cdcdcdcdcdcdcdcdcdcdcdcddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: boom(), txdata: 0xa169ce09, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNTGiveaway
Function name: boom()
PC address: 5691
Estimated Gas Usage: 6272 - 76766
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:445

unc

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: cdcdcdcdcdcdcdcdcdcdcdcddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: boom(), txdata: 0xa169ce09, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SNTGiveaway
Function name: boom()
PC address: 5885
Estimated Gas Usage: 6272 - 76766
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:445

unction() public payable {

        

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x800000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: cdcdcdcdcdcdcdcdcdcdcdcddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: boom(), txdata: 0xa169ce09, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNTGiveaway
Function name: boom()
PC address: 5885
Estimated Gas Usage: 6272 - 76766
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/aee2ffd66affffa1479df33537e6e376.sol:445

unction() public payable {

        

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: cdcdcdcdcdcdcdcdcdcdcdcddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: boom(), txdata: 0xa169ce09, value: 0x0