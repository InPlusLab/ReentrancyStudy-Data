==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: KOISafe
Function name: unlock()
PC address: 367
Estimated Gas Usage: 1007 - 1102
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/6818214d139283efb0cce8f2b9fd4317.sol:167

entitled * exponent)) thro

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unlock(), txdata: 0xa69df4b5, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: KOISafe
Function name: unlock()
PC address: 715
Estimated Gas Usage: 9578 - 65040
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6818214d139283efb0cce8f2b9fd4317.sol:185

*   if (!assertion) { */

    /*     throw; */

    /*   } *

--------------------
Initial State:

Account: [CREATOR], balance: 0x21410c00000e3c3e, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 212121212121212121212121deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: unlock(), txdata: 0xa69df4b5, value: 0x0
Caller: [SOMEGUY], function: unlock(), txdata: 0xa69df4b5, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: KOIToken
Function name: finalize()
PC address: 3017
Estimated Gas Usage: 3677 - 4762
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/6818214d139283efb0cce8f2b9fd4317.sol:393

        // prevents refund if operational

      if (block.number 

--------------------
Initial State:

Account: [CREATOR], balance: 0x90003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 4b4b4b4b4b4b4b4b4b4b4b4bdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: KOIToken
Function name: finalize()
PC address: 3041
Estimated Gas Usage: 3694 - 4779
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/6818214d139283efb0cce8f2b9fd4317.sol:393

           // prevents refund if operational

      if (block.number <= fund

--------------------
Initial State:

Account: [CREATOR], balance: 0x402010000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 4b4b4b4b4b4b4b4b4b4b4b4bdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: finalize(), txdata: 0x4bb278f3, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: KOIToken
Function name: refund()
PC address: 3394
Estimated Gas Usage: 2001 - 2426
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/6818214d139283efb0cce8f2b9fd4317.sol:407

 extra safe

      uint256 ethVal = koiVal

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000040000082003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: refund(), txdata: 0x590e1ae3, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: KOIToken
Function name: createTokens()
PC address: 4454
Estimated Gas Usage: 2150 - 2575
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/6818214d139283efb0cce8f2b9fd4317.sol:351

rong

      if (tokenCreationCap < checkedS

--------------------
Initial State:

Account: [CREATOR], balance: 0x912000010a0562, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: createTokens(), txdata: 0xb4427263, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: KOIToken
Function name: createTokens()
PC address: 4469
Estimated Gas Usage: 2975 - 3400
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/6818214d139283efb0cce8f2b9fd4317.sol:353

w;  // odd fractions won't be found



  

--------------------
Initial State:

Account: [CREATOR], balance: 0x1063a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: createTokens(), txdata: 0xb4427263, value: 0x0