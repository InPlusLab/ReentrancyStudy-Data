==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: VotingChallenge
Function name: constructor
PC address: 167
Estimated Gas Usage: 56658 - 245221
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/6151b4fbd9927abdc8845999f86b4679.sol:129

     cryptoVersusWal

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: VotingChallengeProxy
Function name: fallback
PC address: 204
Estimated Gas Usage: 3264 - 38160
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6151b4fbd9927abdc8845999f86b4679.sol:633

 returns (uint[]) {

        return sumsHash[user];

    }

}

--------------------
Initial State:

Account: [CREATOR], balance: 0xa400500c0080054c, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: VotingChallengeForwarder
Function name: sumsHash(address,uint256)
PC address: 768
Estimated Gas Usage: 1110 - 1395
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/6151b4fbd9927abdc8845999f86b4679.sol:639
Initial State:

Account: [CREATOR], balance: 0x41000000a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sumsHash(address,uint256), txdata: 0x1a6d1598, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: VotingChallengeForwarder
Function name: sendersHash(address,uint256)
PC address: 816
Estimated Gas Usage: 1132 - 1417
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/6151b4fbd9927abdc8845999f86b4679.sol:639
Initial State:

Account: [CREATOR], balance: 0x40000000000002041, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendersHash(address,uint256), txdata: 0x2619fa4b, value: 0x0