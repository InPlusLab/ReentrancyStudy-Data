==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ADT
Function name: setAd(string,string)
PC address: 1319
Estimated Gas Usage: 24117 - 110278
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a13eaf032c789bd2df459f1d82eaa461.sol:56

        require(owner == msg.sender);
        name = _name;
        symbol = _symbol;
    }

    function balanceOf(address _owner) public view retur

--------------------
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAd(string,string), txdata: 0xe6b09e92ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdcda, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ADT
Function name: setAd(string,string)
PC address: 1325
Estimated Gas Usage: 24137 - 110112
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a13eaf032c789bd2df459f1d82eaa461.sol:56

        require(owner == msg.sender);
        name = _name;
        symbol = _symbol;
    }

    function balanceOf(address _owner) public view retur

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAd(string,string), txdata: 0xe6b09e92ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ADT
Function name: setAd(string,string)
PC address: 1334
Estimated Gas Usage: 24137 - 110112
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a13eaf032c789bd2df459f1d82eaa461.sol:56

        require(owner == msg.sender);
        name = _name;
        symbol = _symbol;
    }

    function balanceOf(address _owner) public view retur

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000000010003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAd(string,string), txdata: 0xe6b09e92ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff88, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ADT
Function name: setAd(string,string)
PC address: 1340
Estimated Gas Usage: 24104 - 110172
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a13eaf032c789bd2df459f1d82eaa461.sol:56

        require(owner == msg.sender);
        name = _name;
        symbol = _symbol;
    }

    function balanceOf(address _owner) public view retur

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000008400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAd(string,string), txdata: 0xe6b09e92bffffffffffffffffffffffbfffffffffffffffffffdfffffdffffffffffffc07f, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ADT
Function name: setAd(string,string)
PC address: 1407
Estimated Gas Usage: 24137 - 110112
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a13eaf032c789bd2df459f1d82eaa461.sol:56

        require(owner == msg.sender);
        name = _name;
        symbol = _symbol;
    }

    function balanceOf(address _owner) public view retur

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAd(string,string), txdata: 0xe6b09e92ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ADT
Function name: withdrawTokens(address,uint256)
PC address: 1647
Estimated Gas Usage: 2718 - 38081
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a13eaf032c789bd2df459f1d82eaa461.sol:86
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdrawTokens(address,uint256), txdata: 0x06b091f9000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: ADT
Function name: setAd(string,string)
PC address: 2928
Estimated Gas Usage: 24137 - 110112
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAd(string,string), txdata: 0xe6b09e92ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc2, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: ADT
Function name: setAd(string,string)
PC address: 2942
Estimated Gas Usage: 24137 - 110112
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0xc0000000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAd(string,string), txdata: 0xe6b09e92ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81, value: 0x0