==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FrontRunner
Function name: abc2(address)
PC address: 996
Estimated Gas Usage: 3620 - 39032
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/89ffb1ca6173bd2e00f866e99cf2ae28.sol:258

dress tokenAddress, uint256 deadline) external restricted payable {
        address[] memory path = new address[](2);
        path[0] = tokenAdd

--------------------
Initial State:

Account: [CREATOR], balance: 0xc0000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: drainToken(address), txdata: 0xe0b22c4c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: abc2(address), txdata: 0x16428d9aa3a3a3a3a3a3a3a3a3a3a3a3deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FrontRunner
Function name: drainToken(address)
PC address: 4295
Estimated Gas Usage: 5373 - 75347
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/89ffb1ca6173bd2e00f866e99cf2ae28.sol:285

er(address recipient, uint256 amou

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: drainToken(address), txdata: 0xe0b22c4c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: drainToken(address), txdata: 0xe0b22c4ca3a3a3a3a3a3a3a3a3a3a3a3deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: FrontRunner
Function name: drainToken(address)
PC address: 4295
Estimated Gas Usage: 5373 - 75347
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/89ffb1ca6173bd2e00f866e99cf2ae28.sol:285

er(address recipient, uint256 amou

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: drainToken(address), txdata: 0xe0b22c4c0000000000000000000000000000000000000000000000000000000000000000, value: 0x0