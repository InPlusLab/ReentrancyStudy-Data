==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CYMTAirdrop
Function name: emergencyDrain(uint256)
PC address: 852
Estimated Gas Usage: 4449 - 40191
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/dfd019d257f64c512d1d86b9a62cdc1a.sol:135
Initial State:

Account: [CREATOR], balance: 0x100000000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: emergencyDrain(uint256), txdata: 0x70544b74, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CYMTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1424
Estimated Gas Usage: 20201 - 135660
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dfd019d257f64c512d1d86b9a62cdc1a.sol:119

rops +=

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0c00000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CYMTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1641
Estimated Gas Usage: 20201 - 135660
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/dfd019d257f64c512d1d86b9a62cdc1a.sol:119

rops += recipients.length;

    dropAmou

--------------------
Initial State:

Account: [CREATOR], balance: 0x400002223, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x80000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CYMTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1641
Estimated Gas Usage: 20201 - 135660
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/dfd019d257f64c512d1d86b9a62cdc1a.sol:119

rops += recipients.length;

    dropAmou

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000000a0405, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0ffffe0000000000000000000000000000000000000000000000000000000000101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CYMTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1641
Estimated Gas Usage: 20201 - 135660
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dfd019d257f64c512d1d86b9a62cdc1a.sol:119

rops += recipients.length;

    dropAmou

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0c00000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CYMTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1850
Estimated Gas Usage: 20201 - 135660
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dfd019d257f64c512d1d86b9a62cdc1a.sol:129

t amount ) onlyOwner public{


--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0c00000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CYMTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1857
Estimated Gas Usage: 20201 - 135660
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dfd019d257f64c512d1d86b9a62cdc1a.sol:129

t amount ) onlyOwner public{


--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0c00000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: CYMTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1862
Estimated Gas Usage: 20201 - 135660
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/dfd019d257f64c512d1d86b9a62cdc1a.sol:131

( owner, amount );

  }

}

--------------------
Initial State:

Account: [CREATOR], balance: 0xc2b, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0ffff0000000004003fff7fbff7fbc8000000007fffffffffffffffffffffff08ff, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CYMTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1869
Estimated Gas Usage: 20201 - 135660
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dfd019d257f64c512d1d86b9a62cdc1a.sol:131

Token.transfer( owner, amount );

  }

}

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0c00000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CYMTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1876
Estimated Gas Usage: 20201 - 135660
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/dfd019d257f64c512d1d86b9a62cdc1a.sol:131

Token.transfer( owner, amount );

  }

}

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0c00000000000000000000000000000000000000000000000000000000000000001, value: 0x0