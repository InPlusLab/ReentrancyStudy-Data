==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CANtoSOLVEmigration
Function name: withdrawAllTokensFromContract(address)
PC address: 684
Estimated Gas Usage: 4521 - 77416
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:243
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000011008100110040202010208080110010101010800000000000000000000000001, value: 0x0
Caller: [CREATOR], function: withdrawAllTokensFromContract(address), txdata: 0x428147ee040404040404040404040404deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CANtoSOLVEmigration
Function name: withdrawAllTokensFromContract(address)
PC address: 805
Estimated Gas Usage: 4521 - 77416
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:243
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000011008100110040202010208080110010101010800000000000000000000000001, value: 0x0
Caller: [CREATOR], function: withdrawAllTokensFromContract(address), txdata: 0x428147ee040404040404040404040404deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CANtoSOLVEmigration
Function name: withdrawAllTokensFromContract(address)
PC address: 805
Estimated Gas Usage: 4521 - 77416
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:243
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000080400080101010420010201040000000004010200000000000000000000000001, value: 0x0
Caller: [CREATOR], function: withdrawAllTokensFromContract(address), txdata: 0x428147ee, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CANtoSOLVEmigration
Function name: migrateAll()
PC address: 857
Estimated Gas Usage: 8690 - 115319
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:209

equire(n

--------------------
Initial State:

Account: [CREATOR], balance: 0x42000000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CANtoSOLVEmigration
Function name: migrate(uint256)
PC address: 979
Estimated Gas Usage: 6182 - 77919
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:209

equire(newToken.transfer(msg.sender, _value), 'New token

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrate(uint256), txdata: 0x454b0608, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CANtoSOLVEmigration
Function name: migrateAll()
PC address: 979
Estimated Gas Usage: 8690 - 115319
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:209

equire(newToken.transfer(msg.sender, _value), 'New token

--------------------
Initial State:

Account: [CREATOR], balance: 0x42000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CANtoSOLVEmigration
Function name: migrateAll()
PC address: 979
Estimated Gas Usage: 8690 - 115319
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:209

equire(newToken.transfer(msg.sender, _value), 'New token

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000010101010101010101010101010101010101010100000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CANtoSOLVEmigration
Function name: migrateAll()
PC address: 979
Estimated Gas Usage: 8690 - 115319
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:209

equire(newToken.transfer(msg.sender, _value), 'New token

--------------------
Initial State:

Account: [CREATOR], balance: 0x42000000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CANtoSOLVEmigration
Function name: migrate(uint256)
PC address: 1061
Estimated Gas Usage: 6182 - 77919
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:211

_value);

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrate(uint256), txdata: 0x454b0608, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CANtoSOLVEmigration
Function name: migrateAll()
PC address: 1061
Estimated Gas Usage: 8690 - 115319
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:211

_value);

--------------------
Initial State:

Account: [CREATOR], balance: 0x42000000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CANtoSOLVEmigration
Function name: migrate(uint256)
PC address: 1177
Estimated Gas Usage: 6182 - 77919
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:211

_value);

        return true;

    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x47000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101020101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: migrate(uint256), txdata: 0x454b0608, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CANtoSOLVEmigration
Function name: migrateAll()
PC address: 1177
Estimated Gas Usage: 8690 - 115319
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:211

_value);

        return true;

    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000010000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CANtoSOLVEmigration
Function name: migrate(uint256)
PC address: 1177
Estimated Gas Usage: 6182 - 77919
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:211

_value);

        return true;

    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000010101010101010101010101010101010101010100000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrate(uint256), txdata: 0x454b0608, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CANtoSOLVEmigration
Function name: migrate(uint256)
PC address: 1177
Estimated Gas Usage: 6182 - 77919
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:211

_value);

        return true;

    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrate(uint256), txdata: 0x454b0608, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CANtoSOLVEmigration
Function name: migrateAll()
PC address: 1177
Estimated Gas Usage: 8690 - 115319
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:211

_value);

        return true;

    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x42000000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CANtoSOLVEmigration
Function name: migrateAll()
PC address: 1554
Estimated Gas Usage: 8690 - 115319
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0d92bc556ed3ae633f6b6d7906bb0ca9.sol:227

r() returns(bool) {

        m

--------------------
Initial State:

Account: [CREATOR], balance: 0x42000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0


