==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DepositSlot
Function name: collect()
PC address: 457
Estimated Gas Usage: 5026 - 74154
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/01c8852a2de10f0f7d1e7f0964c8577e.sol:98

andard 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: collect(), txdata: 0xe5225381, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: DepositSlot
Function name: collect()
PC address: 592
Estimated Gas Usage: 5026 - 74154
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/01c8852a2de10f0f7d1e7f0964c8577e.sol:98

  string public constant standard = "Token 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: collect(), txdata: 0xe5225381, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DepositSlot
Function name: collect()
PC address: 592
Estimated Gas Usage: 5026 - 74154
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/01c8852a2de10f0f7d1e7f0964c8577e.sol:98

  string public constant standard = "Token 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: collect(), txdata: 0xe5225381, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: SocTokenWrapped
Function name: processDeposit()
PC address: 1605
Estimated Gas Usage: 19394 - 132494
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/01c8852a2de10f0f7d1e7f0964c8577e.sol:130

       totalSupply += freshWSOC;


--------------------
Initial State:

Account: [CREATOR], balance: 0x4000003061e, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: createPersonalDepositAddress(), txdata: 0x89d59ee5, value: 0x0
Caller: [SOMEGUY], function: processDeposit(), txdata: 0x8f70bfa0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SocTokenWrapped
Function name: processDeposit()
PC address: 1649
Estimated Gas Usage: 19394 - 132494
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/01c8852a2de10f0f7d1e7f0964c8577e.sol:131

+= freshWSO

--------------------
Initial State:

Account: [CREATOR], balance: 0x20c00800000802a0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: createPersonalDepositAddress(), txdata: 0x89d59ee5, value: 0x0
Caller: [SOMEGUY], function: processDeposit(), txdata: 0x8f70bfa0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SocTokenWrapped
Function name: processDeposit()
PC address: 1668
Estimated Gas Usage: 19394 - 132494
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/01c8852a2de10f0f7d1e7f0964c8577e.sol:132

nder, fresh

--------------------
Initial State:

Account: [CREATOR], balance: 0x20c00800000802a0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: createPersonalDepositAddress(), txdata: 0x89d59ee5, value: 0x0
Caller: [SOMEGUY], function: processDeposit(), txdata: 0x8f70bfa0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SocTokenWrapped
Function name: processDeposit()
PC address: 1677
Estimated Gas Usage: 19394 - 132494
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/01c8852a2de10f0f7d1e7f0964c8577e.sol:133

}

    function transfer

--------------------
Initial State:

Account: [CREATOR], balance: 0x20c00800000802a0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: createPersonalDepositAddress(), txdata: 0x89d59ee5, value: 0x0
Caller: [SOMEGUY], function: processDeposit(), txdata: 0x8f70bfa0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SocTokenWrapped
Function name: processDeposit()
PC address: 1696
Estimated Gas Usage: 19394 - 132494
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/01c8852a2de10f0f7d1e7f0964c8577e.sol:135

o,
                      uint256 

--------------------
Initial State:

Account: [CREATOR], balance: 0x20c00800000802a0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: createPersonalDepositAddress(), txdata: 0x89d59ee5, value: 0x0
Caller: [SOMEGUY], function: processDeposit(), txdata: 0x8f70bfa0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SocTokenWrapped
Function name: processDeposit()
PC address: 1700
Estimated Gas Usage: 19394 - 132494
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/01c8852a2de10f0f7d1e7f0964c8577e.sol:135

o,
                      uint256 

--------------------
Initial State:

Account: [CREATOR], balance: 0x20c00800000802a0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: createPersonalDepositAddress(), txdata: 0x89d59ee5, value: 0x0
Caller: [SOMEGUY], function: processDeposit(), txdata: 0x8f70bfa0, value: 0x0


