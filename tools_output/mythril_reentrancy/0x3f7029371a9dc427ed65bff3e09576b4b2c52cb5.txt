==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TST_ERC
Function name: name()
PC address: 2006
Estimated Gas Usage: 3192 - 4510
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a8d0eca94b31b5888f2a332fe3f0a455.sol:177

nt256(decimals);



   

    // This creates an array w

--------------------
Initial State:

Account: [CREATOR], balance: 0x24000001808000803, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: name(), txdata: 0x06fdde03, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TST_ERC
Function name: mintToken(address,uint256)
PC address: 3239
Estimated Gas Usage: 14612 - 55764
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a8d0eca94b31b5888f2a332fe3f0a455.sol:453

// Check if the sender has enough

--------------------
Initial State:

Account: [CREATOR], balance: 0x81, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: mintToken(address,uint256), txdata: 0x79c65068000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TST_ERC
Function name: mintToken(address,uint256)
PC address: 3255
Estimated Gas Usage: 14612 - 55764
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a8d0eca94b31b5888f2a332fe3f0a455.sol:455

anceOf[msg.sender] -= _valu

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: mintToken(address,uint256), txdata: 0x79c650680000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TST_ERC
Function name: approveAndCall(address,uint256,bytes)
PC address: 4495
Estimated Gas Usage: 8129 - 67308
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a8d0eca94b31b5888f2a332fe3f0a455.sol:411

rget] = freeze;

        emit FrozenFunds(target, freeze);

 

--------------------
Initial State:

Account: [CREATOR], balance: 0xbe002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000201002002080, value: 0x0