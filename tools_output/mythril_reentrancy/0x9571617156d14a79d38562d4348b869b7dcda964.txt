==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: WrappedCryptoHouse
Function name: wrapCryptoHouse(uint256)
PC address: 1355
Estimated Gas Usage: 28291 - 144123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/774630966368a811b6889bb3b4e02452.sol:66

unt;
		
		nftTokens.push(ho

--------------------
Initial State:

Account: [CREATOR], balance: 0x3ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: wrapCryptoHouse(uint256), txdata: 0x2043821b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: WrappedCryptoHouse
Function name: wrapCryptoHouse(uint256)
PC address: 1365
Estimated Gas Usage: 28291 - 144123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/774630966368a811b6889bb3b4e02452.sol:66

unt;
		
		nftTokens.push(ho

--------------------
Initial State:

Account: [CREATOR], balance: 0x3ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: wrapCryptoHouse(uint256), txdata: 0x2043821b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: WrappedCryptoHouse
Function name: wrapCryptoHouse(uint256)
PC address: 1383
Estimated Gas Usage: 28291 - 144123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/774630966368a811b6889bb3b4e02452.sol:68

dex);
		
		emit WrapToken(houseIndex

--------------------
Initial State:

Account: [CREATOR], balance: 0x3ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: wrapCryptoHouse(uint256), txdata: 0x2043821b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: WrappedCryptoHouse
Function name: wrapCryptoHouse(uint256)
PC address: 1389
Estimated Gas Usage: 28291 - 144123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/774630966368a811b6889bb3b4e02452.sol:68

dex);
		
		emit WrapToken(houseIndex

--------------------
Initial State:

Account: [CREATOR], balance: 0x3ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: wrapCryptoHouse(uint256), txdata: 0x2043821b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: WrappedCryptoHouse
Function name: wrapCryptoHouse(uint256)
PC address: 1393
Estimated Gas Usage: 28291 - 144123
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/774630966368a811b6889bb3b4e02452.sol:70

der);
		emit Transfer(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x3ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: wrapCryptoHouse(uint256), txdata: 0x2043821b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: WrappedCryptoHouse
Function name: wrapCryptoHouse(uint256)
PC address: 1398
Estimated Gas Usage: 28291 - 144123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/774630966368a811b6889bb3b4e02452.sol:70

der);
		emit Transfer(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x3ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: wrapCryptoHouse(uint256), txdata: 0x2043821b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: WrappedCryptoHouse
Function name: wrapCryptoHouse(uint256)
PC address: 1439
Estimated Gas Usage: 28291 - 144123
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/774630966368a811b6889bb3b4e02452.sol:70

der);
		emit Transfer(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x3ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: wrapCryptoHouse(uint256), txdata: 0x2043821b0000000000000000000000000000000000000000000000000000000000000000, value: 0x0