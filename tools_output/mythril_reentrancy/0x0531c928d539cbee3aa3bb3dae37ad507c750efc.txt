==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Call
Function name: eexploitOwnn()
PC address: 653
Estimated Gas Usage: 5797 - 75539
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d98f544aec6fa046fcf33cd9df60c1b4.sol:63

ontr.lock();

	}



	fun

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMyContractt(address), txdata: 0x08bde7d4000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: eexploitOwnn(), txdata: 0x471fabfd, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Call
Function name: eexploitOwnn()
PC address: 680
Estimated Gas Usage: 5797 - 75539
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d98f544aec6fa046fcf33cd9df60c1b4.sol:69

wwwit

--------------------
Initial State:

Account: [CREATOR], balance: 0x8080120211a1cc0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMyContractt(address), txdata: 0x08bde7d4000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: eexploitOwnn(), txdata: 0x471fabfd, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Call
Function name: eexploitOwnn()
PC address: 811
Estimated Gas Usage: 5797 - 75539
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d98f544aec6fa046fcf33cd9df60c1b4.sol:69

wwwithdrawww

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMyContractt(address), txdata: 0x08bde7d4000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: eexploitOwnn(), txdata: 0x471fabfd, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Call
Function name: eexploitOwnn()
PC address: 811
Estimated Gas Usage: 5797 - 75539
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/d98f544aec6fa046fcf33cd9df60c1b4.sol:69

wwwithdrawww

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMyContractt(address), txdata: 0x08bde7d4, value: 0x0
Caller: [CREATOR], function: eexploitOwnn(), txdata: 0x471fabfd, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Call
Function name: eexploitOwnn()
PC address: 811
Estimated Gas Usage: 5797 - 75539
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d98f544aec6fa046fcf33cd9df60c1b4.sol:69

wwwithdrawww

--------------------
Initial State:

Account: [CREATOR], balance: 0x8080120211a1cc0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMyContractt(address), txdata: 0x08bde7d4000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: eexploitOwnn(), txdata: 0x471fabfd, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Call
Function name: wwwithdrawww(uint256)
PC address: 1073
Estimated Gas Usage: 4330 - 73647
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d98f544aec6fa046fcf33cd9df60c1b4.sol:77

nder.transfer(amount * (1 

--------------------
Initial State:

Account: [CREATOR], balance: 0x50001d9e000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMyContractt(address), txdata: 0x08bde7d4000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: wwwithdrawww(uint256), txdata: 0xcd84cff4, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Call
Function name: wwwithdrawww(uint256)
PC address: 1131
Estimated Gas Usage: 4330 - 73647
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/d98f544aec6fa046fcf33cd9df60c1b4.sol:83

() payable public


--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMyContractt(address), txdata: 0x08bde7d4, value: 0x0
Caller: [CREATOR], function: wwwithdrawww(uint256), txdata: 0xcd84cff480, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Call
Function name: wwwithdrawww(uint256)
PC address: 1152
Estimated Gas Usage: 4330 - 73647
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/d98f544aec6fa046fcf33cd9df60c1b4.sol:77

);

	}



	function () payable public



--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMyContractt(address), txdata: 0x08bde7d4, value: 0x0
Caller: [CREATOR], function: wwwithdrawww(uint256), txdata: 0xcd84cff4, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Call
Function name: wwwithdrawww(uint256)
PC address: 1152
Estimated Gas Usage: 4330 - 73647
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d98f544aec6fa046fcf33cd9df60c1b4.sol:77

);

	}



	function () payable public



--------------------
Initial State:

Account: [CREATOR], balance: 0x5001d81efff000103, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setMyContractt(address), txdata: 0x08bde7d4000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: wwwithdrawww(uint256), txdata: 0xcd84cff4, value: 0x0