==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: DiatomAirdrop
Function name: airDrop(address[],uint256)
PC address: 347
Estimated Gas Usage: 20081 - 137241
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:48

ount) onlyOwner public{
    require( amount > 0);

    for( uint i = 0 ; i < recipients.length ; i++ ) {
        myToken.transfer( recipients[i], amount);
        emit TokenDrop( recipients[i], amount );
    }

    numDrops += recipients.length;
    dropAmount += recipients.length * amount;
  }


  function emergencyDrain( uint amount ) onlyOwner pub

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000c, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc01, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DiatomAirdrop
Function name: emergencyDrain(uint256)
PC address: 533
Estimated Gas Usage: 4305 - 39624
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:64
Initial State:

Account: [CREATOR], balance: 0x80000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: emergencyDrain(uint256), txdata: 0x70544b74, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DiatomAirdrop
Function name: airDrop(address[],uint256)
PC address: 807
Estimated Gas Usage: 20081 - 137241
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:53

mit Tok

--------------------
Initial State:

Account: [CREATOR], balance: 0x102082006, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DiatomAirdrop
Function name: airDrop(address[],uint256)
PC address: 960
Estimated Gas Usage: 20081 - 137241
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:53

mit TokenDrop( recipients[i], amount );


--------------------
Initial State:

Account: [CREATOR], balance: 0x100080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000000000001001, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: DiatomAirdrop
Function name: airDrop(address[],uint256)
PC address: 960
Estimated Gas Usage: 20081 - 137241
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:53

mit TokenDrop( recipients[i], amount );


--------------------
Initial State:

Account: [CREATOR], balance: 0x4004000010001001a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000004000000301, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DiatomAirdrop
Function name: airDrop(address[],uint256)
PC address: 960
Estimated Gas Usage: 20081 - 137241
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:53

mit TokenDrop( recipients[i], amount );


--------------------
Initial State:

Account: [CREATOR], balance: 0x102082006, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DiatomAirdrop
Function name: airDrop(address[],uint256)
PC address: 1109
Estimated Gas Usage: 20081 - 137241
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:57

ents.length * amount;
  }


 

--------------------
Initial State:

Account: [CREATOR], balance: 0x102082006, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DiatomAirdrop
Function name: airDrop(address[],uint256)
PC address: 1113
Estimated Gas Usage: 20081 - 137241
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:57

ents.length * amount;
  }


 

--------------------
Initial State:

Account: [CREATOR], balance: 0x102082006, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DiatomAirdrop
Function name: airDrop(address[],uint256)
PC address: 1117
Estimated Gas Usage: 20081 - 137241
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:61

on emergencyDrain( uint amount ) onlyOwn

--------------------
Initial State:

Account: [CREATOR], balance: 0x102082006, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: DiatomAirdrop
Function name: airDrop(address[],uint256)
PC address: 1121
Estimated Gas Usage: 20081 - 137241
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:61

ain( uint amount ) onlyOwn

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000008a02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000000000000880, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DiatomAirdrop
Function name: airDrop(address[],uint256)
PC address: 1124
Estimated Gas Usage: 20081 - 137241
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/0236a2bf6bd7864d30596137c86703e7.sol:61

on emergencyDrain( uint amount ) onlyOwn

--------------------
Initial State:

Account: [CREATOR], balance: 0x102082006, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0800000000000000000000000000000000000000000000000000000000000000080, value: 0x0


