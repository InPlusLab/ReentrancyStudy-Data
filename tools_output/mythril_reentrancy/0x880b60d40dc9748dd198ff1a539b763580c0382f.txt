==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DeflatLottoInvest
Function name: fallback
PC address: 798
Estimated Gas Usage: 28899 - 159461
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:93

(rounds+1)-p

--------------------
Initial State:

Account: [CREATOR], balance: 0x14202482142044958, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x71afd498d0000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DeflatLottoInvest
Function name: fallback
PC address: 801
Estimated Gas Usage: 28899 - 159461
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:93

yerPo

--------------------
Initial State:

Account: [CREATOR], balance: 0x14202482142044958, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x71afd498d0000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DeflatLottoInvest
Function name: fallback
PC address: 879
Estimated Gas Usage: 28899 - 159461
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:95

}

    } 

  }

}

--------------------
Initial State:

Account: [CREATOR], balance: 0x14202482142044958, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x71afd498d0000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DeflatLottoInvest
Function name: fallback
PC address: 882
Estimated Gas Usage: 28899 - 159461
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:95

 rewar

--------------------
Initial State:

Account: [CREATOR], balance: 0x14202482142044958, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x71afd498d0000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DeflatLottoInvest
Function name: fallback
PC address: 885
Estimated Gas Usage: 28899 - 159461
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:95

> 0) { toke

--------------------
Initial State:

Account: [CREATOR], balance: 0x14202482142044958, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x71afd498d0000

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: DeflatLottoInvest
Function name: fallback
PC address: 996
Estimated Gas Usage: 29051 - 159613
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:95

> 0) { tokenReward.transfer(msg.send

--------------------
Initial State:

Account: [CREATOR], balance: 0x120801e05020000a6, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x01010101, value: 0x71afd498d0000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DeflatLottoInvest
Function name: fallback
PC address: 996
Estimated Gas Usage: 28899 - 159461
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:95

> 0) { tokenReward.transfer(msg.send

--------------------
Initial State:

Account: [CREATOR], balance: 0x14202482142044958, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x71afd498d0000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DeflatLottoInvest
Function name: fallback
PC address: 1052
Estimated Gas Usage: 28899 - 159461
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:95

 (reward > 0) { tokenReward.transfer(msg.sender, reward); }

    } 

  }

}

--------------------
Initial State:

Account: [CREATOR], balance: 0x40002023026542, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x71afd498d0000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DeflatLottoInvest
Function name: fallback
PC address: 1063
Estimated Gas Usage: 28899 - 159461
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:101
Initial State:

Account: [CREATOR], balance: 0x40002023026542, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x71afd498d0000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: DeflatLottoInvest
Function name: fallback
PC address: 1066
Estimated Gas Usage: 26584 - 156089
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:101
Initial State:

Account: [CREATOR], balance: 0x80004004104d602, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x01010101, value: 0x71afd498d0000

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: DeflatLottoInvest
Function name: fallback
PC address: 1498
Estimated Gas Usage: 2330 - 4071
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:27

AT LOTTO INVEST";

  string public symbol 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: name(), txdata: 0x06fdde03, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: DeflatLottoInvest
Function name: symbol()
PC address: 1669
Estimated Gas Usage: 2396 - 4137
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:29

LI";

  string public prob = "P

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: DeflatLottoInvest
Function name: prob()
PC address: 1758
Estimated Gas Usage: 2412 - 4153
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/26b4f937993dc581544bc41423b59891.sol:31

ity 1 of 10";

  string public comment = "

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: prob(), txdata: 0xc6f396db, value: 0x0


