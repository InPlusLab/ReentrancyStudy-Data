mythril.mythril.mythril_analyzer [CRITICAL]: Exception occurred, aborting analysis. Please report this issue to the Mythril GitHub page.
Traceback (most recent call last):
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/mythril/mythril_analyzer.py", line 149, in fire_lasers
    sym = SymExecWrapper(
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/analysis/symbolic.py", line 163, in __init__
    self.laser.sym_exec(
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/laser/ethereum/svm.py", line 175, in sym_exec
    self._execute_transactions(created_account.address)
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/laser/ethereum/svm.py", line 216, in _execute_transactions
    execute_message_call(self, address)
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/laser/ethereum/transaction/symbolic.py", line 108, in execute_message_call
    laser_evm.exec()
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/laser/ethereum/svm.py", line 254, in exec
    new_states, op_code = self.execute_state(global_state)
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/laser/ethereum/svm.py", line 342, in execute_state
    new_global_states = Instruction(
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/laser/ethereum/instructions.py", line 263, in evaluate
    result = instruction_mutator(global_state)
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/laser/ethereum/instructions.py", line 195, in wrapper
    new_global_states = self.call_on_state_copy(func, func_obj, global_state)
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/laser/ethereum/instructions.py", line 130, in call_on_state_copy
    return func(func_obj, global_state_copy)
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/laser/ethereum/instructions.py", line 903, in balance_
    balance = global_state.world_state.accounts_exist_or_load(
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/laser/ethereum/state/world_state.py", line 115, in accounts_exist_or_load
    code=dynamic_loader.dynld(addr),
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/mythril/support/loader.py", line 67, in dynld
    raise ValueError("Cannot load from the chain when eth is None")
ValueError: Cannot load from the chain when eth is None

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: POOHMOWHALE
Function name: transferAnyERC20Token(address,address,uint256)
PC address: 955
Estimated Gas Usage: 3823 - 41496
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3723f30feedfae3471ee23453c44c7a2.sol:190

oublrAddress) 
    public
    onlyOwner()
    {
        d

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferAnyERC20Token(address,address,uint256), txdata: 0xd493b9ac000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: POOHMOWHALE
Function name: donate()
PC address: 1225
Estimated Gas Usage: 5888 - 75347
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3723f30feedfae3471ee23453c44c7a2.sol:78

    uint256 Poo

--------------------
Initial State:

Account: [CREATOR], balance: 0x80, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: donate(), txdata: 0xed88c68e, value: 0xf4241


