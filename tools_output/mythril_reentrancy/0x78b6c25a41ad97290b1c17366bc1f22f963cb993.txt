==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: GangTokenSale
Function name: fallback
PC address: 1006
Estimated Gas Usage: 7525 - 78066
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1b0ecdcd55afe9b7712bc49cfd6debaf.sol:201
Initial State:

Account: [CREATOR], balance: 0x40000000000063c00, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000101010101010101010101010001010001000101000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01, value: 0x0
Caller: [SOMEGUY], function: destroyContract(), txdata: 0x092a5cce, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GangTokenSale
Function name: fallback
PC address: 1050
Estimated Gas Usage: 7525 - 78066
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1b0ecdcd55afe9b7712bc49cfd6debaf.sol:201
Initial State:

Account: [CREATOR], balance: 0x40000000000063c81, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000120000101010101010001010001020101010101000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01, value: 0x0
Caller: [SOMEGUY], function: destroyContract(), txdata: 0x092a5cce, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GangTokenSale
Function name: fallback
PC address: 1053
Estimated Gas Usage: 7525 - 78066
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1b0ecdcd55afe9b7712bc49cfd6debaf.sol:201
Initial State:

Account: [CREATOR], balance: 0x40000000000063c81, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000120000101010101010001010001020101010101000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01, value: 0x0
Caller: [SOMEGUY], function: destroyContract(), txdata: 0x092a5cce, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: GangTokenSale
Function name: fallback
PC address: 1166
Estimated Gas Usage: 7525 - 78066
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1b0ecdcd55afe9b7712bc49cfd6debaf.sol:201
Initial State:

Account: [CREATOR], balance: 0x40000000000063c00, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000101010101010101010101010001010001000101000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01, value: 0x0
Caller: [SOMEGUY], function: destroyContract(), txdata: 0x092a5cce, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GangTokenSale
Function name: fallback
PC address: 1166
Estimated Gas Usage: 7525 - 78066
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1b0ecdcd55afe9b7712bc49cfd6debaf.sol:201
Initial State:

Account: [CREATOR], balance: 0x40000000000063c81, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000120000101010101010001010001020101010101000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01, value: 0x0
Caller: [SOMEGUY], function: destroyContract(), txdata: 0x092a5cce, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GangTokenSale
Function name: fallback
PC address: 1210
Estimated Gas Usage: 7525 - 78066
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1b0ecdcd55afe9b7712bc49cfd6debaf.sol:201
Initial State:

Account: [CREATOR], balance: 0x40000000000063c81, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000120000101010101010001010001020101010101000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa01, value: 0x0
Caller: [SOMEGUY], function: destroyContract(), txdata: 0x092a5cce, value: 0x0

==== Unprotected Selfdestruct ====
SWC ID: 106
Severity: High
Contract: GangTokenSale
Function name: fallback
PC address: 1220
Estimated Gas Usage: 7525 - 78066
Any sender can cause the contract to self-destruct.
Any sender can trigger execution of the SELFDESTRUCT instruction to destroy this contract account and withdraw its balance to an arbitrary address. Review the transaction trace generated for this issue and make sure that appropriate security controls are in place to prevent unrestricted access.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1b0ecdcd55afe9b7712bc49cfd6debaf.sol:201
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef01, value: 0x0
Caller: [ATTACKER], function: destroyContract(), txdata: 0x092a5cce, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: GangTokenSale
Function name: getRemainingTokens()
PC address: 1491
Estimated Gas Usage: 2790 - 38058
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1b0ecdcd55afe9b7712bc49cfd6debaf.sol:195

 {
    uint tokens = token.bal

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000101010101010101010101010101010101014020000000000000000000000000000000000000000000000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: getRemainingTokens(), txdata: 0xaf35ae27, value: 0x0


