==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DigitizeCoin
Function name: withdrawERC20Tokens(address)
PC address: 4298
Estimated Gas Usage: 7722 - 78563
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f3c2c63786853f3e024a9a245e5abaee.sol:350

public {
    uint256 totalBalan

--------------------
Initial State:

Account: [CREATOR], balance: 0x6000080000008001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawERC20Tokens(address), txdata: 0x4ff7ff32000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DigitizeCoin
Function name: withdrawERC20Tokens(address)
PC address: 4369
Estimated Gas Usage: 7722 - 78563
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f3c2c63786853f3e024a9a245e5abaee.sol:352

0);
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawERC20Tokens(address), txdata: 0x4ff7ff32000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DigitizeCoin
Function name: withdrawERC20Tokens(address)
PC address: 4533
Estimated Gas Usage: 7722 - 78563
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f3c2c63786853f3e024a9a245e5abaee.sol:352

(totalBalance > 0);
    owner.transf

--------------------
Initial State:

Account: [CREATOR], balance: 0x6000080000008001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawERC20Tokens(address), txdata: 0x4ff7ff32000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: DigitizeCoin
Function name: withdrawERC20Tokens(address)
PC address: 4533
Estimated Gas Usage: 7722 - 78563
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/f3c2c63786853f3e024a9a245e5abaee.sol:352

(totalBalance > 0);
    owner.transf

--------------------
Initial State:

Account: [CREATOR], balance: 0x40008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawERC20Tokens(address), txdata: 0x4ff7ff32, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DigitizeCoin
Function name: withdrawERC20Tokens(address)
PC address: 4533
Estimated Gas Usage: 7722 - 78563
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f3c2c63786853f3e024a9a245e5abaee.sol:352

(totalBalance > 0);
    owner.transf

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawERC20Tokens(address), txdata: 0x4ff7ff32000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DigitizeCoin
Function name: withdrawERC20Tokens(address)
PC address: 4560
Estimated Gas Usage: 7722 - 78563
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f3c2c63786853f3e024a9a245e5abaee.sol:354

otalB

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawERC20Tokens(address), txdata: 0x4ff7ff32000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0