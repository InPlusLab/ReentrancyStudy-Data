==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: EnvientaPreToken
Function name: transfer(address,uint256)
PC address: 1012
Estimated Gas Usage: 22223 - 135237
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/254c9dbab12dbd2f357435d30102cd7d.sol:50


        
        _balances[msg.sende

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x800000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: enableBuyBackMode(address), txdata: 0xcf88eebe000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EnvientaPreToken
Function name: transfer(address,uint256)
PC address: 1082
Estimated Gas Usage: 22223 - 135237
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/254c9dbab12dbd2f357435d30102cd7d.sol:53

o] += value;
        emit Tran

--------------------
Initial State:

Account: [CREATOR], balance: 0x2280000100400004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: enableBuyBackMode(address), txdata: 0xcf88eebe000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EnvientaPreToken
Function name: transfer(address,uint256)
PC address: 1087
Estimated Gas Usage: 22223 - 135237
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/254c9dbab12dbd2f357435d30102cd7d.sol:53

o] += value;
        emit Tran

--------------------
Initial State:

Account: [CREATOR], balance: 0x2280000100400004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: enableBuyBackMode(address), txdata: 0xcf88eebe000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EnvientaPreToken
Function name: transfer(address,uint256)
PC address: 1106
Estimated Gas Usage: 22223 - 135237
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/254c9dbab12dbd2f357435d30102cd7d.sol:54

ender, to, value );
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x2280000100400004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: enableBuyBackMode(address), txdata: 0xcf88eebe000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EnvientaPreToken
Function name: transfer(address,uint256)
PC address: 1110
Estimated Gas Usage: 22223 - 135237
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/254c9dbab12dbd2f357435d30102cd7d.sol:54

ender, to, value );
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x2280000100400004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: enableBuyBackMode(address), txdata: 0xcf88eebe000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EnvientaPreToken
Function name: transfer(address,uint256)
PC address: 1166
Estimated Gas Usage: 22223 - 135237
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/254c9dbab12dbd2f357435d30102cd7d.sol:57

n true;
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x2280000100400004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: enableBuyBackMode(address), txdata: 0xcf88eebe000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: EnvientaPreToken
Function name: transfer(address,uint256)
PC address: 1275
Estimated Gas Usage: 22223 - 135237
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/254c9dbab12dbd2f357435d30102cd7d.sol:57

n true;
    } else {
        require( ms

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: enableBuyBackMode(address), txdata: 0xcf88eebe000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: EnvientaPreToken
Function name: transfer(address,uint256)
PC address: 1275
Estimated Gas Usage: 22223 - 135237
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/254c9dbab12dbd2f357435d30102cd7d.sol:57

n true;
    } else {
        require( ms

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: enableBuyBackMode(address), txdata: 0xcf88eebe, value: 0x0
Caller: [ATTACKER], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EnvientaPreToken
Function name: transfer(address,uint256)
PC address: 1275
Estimated Gas Usage: 22223 - 135237
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/254c9dbab12dbd2f357435d30102cd7d.sol:57

n true;
    } else {
        require( ms

--------------------
Initial State:

Account: [CREATOR], balance: 0x2280000100400004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: enableBuyBackMode(address), txdata: 0xcf88eebe000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: transfer(address,uint256), txdata: 0xa9059cbb0000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0


