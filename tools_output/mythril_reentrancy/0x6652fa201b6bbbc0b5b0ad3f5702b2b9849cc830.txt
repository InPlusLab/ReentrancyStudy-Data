==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: MEDCASH
Function name: constructor
PC address: 58
Estimated Gas Usage: 30412 - 202316
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/025247889493f661113b6e2e5270f626.sol:89

lSupply;
        }

        //allows owner to burn

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c10c0542020002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x6f05b59d3b20000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: MEDCASH
Function name: constructor
PC address: 100
Estimated Gas Usage: 30412 - 202316
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/025247889493f661113b6e2e5270f626.sol:89

lSupply;
        }

        //allows owner to burn

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c10c0542020002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x6f05b59d3b20000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: MEDCASH
Function name: constructor
PC address: 104
Estimated Gas Usage: 30412 - 202316
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/025247889493f661113b6e2e5270f626.sol:92

owdsale
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c10c0542020002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x6f05b59d3b20000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: MEDCASH
Function name: constructor
PC address: 132
Estimated Gas Usage: 30412 - 202316
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/025247889493f661113b6e2e5270f626.sol:92

e not sold in a crowdsale
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c10c0542020002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x6f05b59d3b20000

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: MEDCASH
Function name: constructor
PC address: 355
Estimated Gas Usage: 30412 - 202316
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/025247889493f661113b6e2e5270f626.sol:109

ngeListed == false){
                  

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c10c0142020002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x6f05b59d3b20000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: MEDCASH
Function name: constructor
PC address: 355
Estimated Gas Usage: 30412 - 202316
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/025247889493f661113b6e2e5270f626.sol:109

ngeListed == false){
                  

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c10c0542020002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x6f05b59d3b20000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: MEDCASH
Function name: constructor
PC address: 386
Estimated Gas Usage: 30412 - 202316
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/025247889493f661113b6e2e5270f626.sol:111

         }
     

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c10c0542020002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x6f05b59d3b20000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: MEDCASH
Function name: constructor
PC address: 435
Estimated Gas Usage: 30412 - 202316
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/025247889493f661113b6e2e5270f626.sol:113

      originalFeeReceive.transfer(1050000000000

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c10c0542020002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x6f05b59d3b20000


