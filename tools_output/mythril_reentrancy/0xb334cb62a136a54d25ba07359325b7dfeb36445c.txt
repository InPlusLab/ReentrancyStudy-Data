==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: m00n
Function name: fallback
PC address: 165
Estimated Gas Usage: 19568 - 114421
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: /tmp/6536886c779708bd83bdeee9a80b6a65.sol:39

737756A4Bcd8).call.gas(62000).value(fee)();

            

            if (inves

--------------------
Initial State:

Account: [CREATOR], balance: 0x481ad9000003ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x01010101, value: 0x2386f26fc10000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: m00n
Function name: fallback
PC address: 183
Estimated Gas Usage: 19568 - 114421
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6536886c779708bd83bdeee9a80b6a65.sol:43

t;

        }

     

--------------------
Initial State:

Account: [CREATOR], balance: 0x1205f27fb0dd203ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x01010101, value: 0x2386f26fc10000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: m00n
Function name: fallback
PC address: 198
Estimated Gas Usage: 19568 - 114421
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6536886c779708bd83bdeee9a80b6a65.sol:49

      payWithdra

--------------------
Initial State:

Account: [CREATOR], balance: 0x1205f27fb0dd203ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x01010101, value: 0x2386f26fc10000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: m00n
Function name: fallback
PC address: 203
Estimated Gas Usage: 19568 - 114421
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6536886c779708bd83bdeee9a80b6a65.sol:49

      payWithdra

--------------------
Initial State:

Account: [CREATOR], balance: 0x1205f27fb0dd203ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x01010101, value: 0x2386f26fc10000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: m00n
Function name: fallback
PC address: 235
Estimated Gas Usage: 19482 - 114335
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6536886c779708bd83bdeee9a80b6a65.sol:55

d[msg.sender] += msg.value;

    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x3bfba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100000040010000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x2386f26fc10000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: m00n
Function name: fallback
PC address: 243
Estimated Gas Usage: 19482 - 114335
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6536886c779708bd83bdeee9a80b6a65.sol:61

unction payWithdraw(address to) p

--------------------
Initial State:

Account: [CREATOR], balance: 0x3bfba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100000040010000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x2386f26fc10000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: m00n
Function name: fallback
PC address: 247
Estimated Gas Usage: 19482 - 114335
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6536886c779708bd83bdeee9a80b6a65.sol:61

unction payWithdraw(address to) p

--------------------
Initial State:

Account: [CREATOR], balance: 0x3bfba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100000040010000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x2386f26fc10000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: m00n
Function name: fallback
PC address: 418
Estimated Gas Usage: 19568 - 114421
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6536886c779708bd83bdeee9a80b6a65.sol:69

sted[to] * 5

--------------------
Initial State:

Account: [CREATOR], balance: 0x1205f27fb0dd203ba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x01010101, value: 0x2386f26fc10000