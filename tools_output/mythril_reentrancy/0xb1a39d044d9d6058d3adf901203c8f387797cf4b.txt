==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 306
Estimated Gas Usage: 82 - 177
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:152

value <= 5e17 wei);
        uint

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 325
Estimated Gas Usage: 117 - 212
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:154

  weiRaised+=msg.value;
        IER

--------------------
Initial State:

Account: [CREATOR], balance: 0x21aa4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 535
Estimated Gas Usage: 23143 - 250714
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:160

     

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 535
Estimated Gas Usage: 23308 - 250879
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:160

     

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 538
Estimated Gas Usage: 23143 - 250714
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:160

(wet

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 538
Estimated Gas Usage: 23308 - 250879
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:160

(wet

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 626
Estimated Gas Usage: 23143 - 250714
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:159

) {
            IWETH(wethContrac

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000000001812a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 626
Estimated Gas Usage: 23308 - 250879
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:159

) {
            IWETH(wethContrac

--------------------
Initial State:

Account: [CREATOR], balance: 0x402020000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 626
Estimated Gas Usage: 23143 - 250714
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:159

) {
            IWETH(wethContrac

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 626
Estimated Gas Usage: 23308 - 250879
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:159

) {
            IWETH(wethContrac

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 681
Estimated Gas Usage: 23143 - 250714
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:164

        if (

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 681
Estimated Gas Usage: 23308 - 250879
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:164

        if (

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 758
Estimated Gas Usage: 23143 - 250714
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:163

 pool
        if (amountWETH > 0) {
            

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 758
Estimated Gas Usage: 23308 - 250879
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:163

 pool
        if (amountWETH > 0) {
            

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 784
Estimated Gas Usage: 23143 - 250714
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:166

      }
    

--------------------
Initial State:

Account: [CREATOR], balance: 0xb8000100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 784
Estimated Gas Usage: 23308 - 250879
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:166

      }
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x2083000000004000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 860
Estimated Gas Usage: 23143 - 250714
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:165

H);
        }
        UNIV2Sync(pair).sync()

--------------------
Initial State:

Account: [CREATOR], balance: 0xb8000100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 860
Estimated Gas Usage: 23308 - 250879
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:165

H);
        }
        UNIV2Sync(pair).sync()

--------------------
Initial State:

Account: [CREATOR], balance: 0x2083000000004000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 912
Estimated Gas Usage: 23143 - 250714
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:169
Initial State:

Account: [CREATOR], balance: 0xb8000100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 912
Estimated Gas Usage: 23308 - 250879
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:169
Initial State:

Account: [CREATOR], balance: 0x2083000000004000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 915
Estimated Gas Usage: 23143 - 250714
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:169
Initial State:

Account: [CREATOR], balance: 0xb8000100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 915
Estimated Gas Usage: 23308 - 250879
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:169
Initial State:

Account: [CREATOR], balance: 0x2083000000004000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 1001
Estimated Gas Usage: 23143 - 250714
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:169
Initial State:

Account: [CREATOR], balance: 0xb8000100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 1049
Estimated Gas Usage: 23143 - 250714
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:169
Initial State:

Account: [CREATOR], balance: 0xb8000100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: buyTokens(address)
PC address: 1049
Estimated Gas Usage: 23308 - 250879
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:169
Initial State:

Account: [CREATOR], balance: 0x2083000000004000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x100000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: buyTokens(address), txdata: 0xec8ac4d80000000000000000000000000101010101010101010101010101010101010101, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ERC20Presale
Function name: fallback
PC address: 1126
Estimated Gas Usage: 23143 - 250714
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9978ae23cd636be91400a7c77406a019.sol:169
Initial State:

Account: [CREATOR], balance: 0xb8000100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000