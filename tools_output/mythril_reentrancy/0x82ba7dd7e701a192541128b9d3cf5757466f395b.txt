==== Delegatecall to user-supplied address ====
SWC ID: 112
Severity: High
Contract: CallContract
Function name: callByFun(address,address[],bool)
PC address: 493
Estimated Gas Usage: 2559 - 75115
The contract delegates execution to another contract with a user-supplied address.
The smart contract delegates execution to a user-supplied address.This could allow an attacker to execute arbitrary code in the context of this contract account and manipulate the state of the contract account or execute actions on its behalf.
--------------------
In file: /tmp/4e2247dafa6e355ffa1b2f2ee0fa53c2.sol:13

.delegatecall(methodId, _addrs[i], _isFrozen);
    }
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: callByFun(address,address[],bool), txdata: 0x79bc3255000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefff, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CallContract
Function name: callByFun(address,address[],bool)
PC address: 493
Estimated Gas Usage: 2559 - 75115
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/4e2247dafa6e355ffa1b2f2ee0fa53c2.sol:13

.delegatecall(methodId, _addrs[i], _isFrozen);
    }
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: callByFun(address,address[],bool), txdata: 0x79bc32550000000000000000000000000000000000000000000000000000000000000002, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CallContract
Function name: callByFun(address,address[],bool)
PC address: 493
Estimated Gas Usage: 2559 - 75115
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/4e2247dafa6e355ffa1b2f2ee0fa53c2.sol:13

.delegatecall(methodId, _addrs[i], _isFrozen);
    }
}

--------------------
Initial State:

Account: [CREATOR], balance: 0xf8b85, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: callByFun(address,address[],bool), txdata: 0x79bc3255000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeefff, value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: CallContract
Function name: callByFun(address,address[],bool)
PC address: 493
Estimated Gas Usage: 2559 - 75115
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: /tmp/4e2247dafa6e355ffa1b2f2ee0fa53c2.sol:13

.delegatecall(methodId, _addrs[i], _isFrozen);
    }
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: callByFun(address,address[],bool), txdata: 0x79bc32550000000000000000000000000000000000000000000000000000000000000002, value: 0x0