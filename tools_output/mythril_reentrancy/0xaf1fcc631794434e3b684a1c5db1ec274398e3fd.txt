==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: LinenWalletActionsKovan
Function name: redeemUnderlyingAndTransfer(address,address,uint256)
PC address: 965
Estimated Gas Usage: 2982 - 72296
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/15dfb146f0cd44ccdcc194eb598ddb2b.sol:42

      require(success, "Transfer

--------------------
Initial State:

Account: [CREATOR], balance: 0x21010c00020f3ffe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: redeemUnderlyingAndTransfer(address,address,uint256), txdata: 0xcaf8278900000000000000000000000041b5844f4680a8c38fbb695b7f9cfd1f64474a72000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: LinenWalletActionsMainnet
Function name: redeemUnderlyingAndTransfer(address,address,uint256)
PC address: 965
Estimated Gas Usage: 2982 - 72296
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/15dfb146f0cd44ccdcc194eb598ddb2b.sol:42

      require(success, "Transfer

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: redeemUnderlyingAndTransfer(address,address,uint256), txdata: 0xcaf827890000000000000000000000004ddc2d193948926d02f9b1fe9e1daa0718270ed5000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: LinenWalletActionsKovan
Function name: redeemUnderlyingAndTransfer(address,address,uint256)
PC address: 965
Estimated Gas Usage: 2982 - 72296
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/15dfb146f0cd44ccdcc194eb598ddb2b.sol:42

      require(success, "Transfer

--------------------
Initial State:

Account: [CREATOR], balance: 0x4020fbfba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: redeemUnderlyingAndTransfer(address,address,uint256), txdata: 0xcaf8278900000000000000000000000041b5844f4680a8c38fbb695b7f9cfd1f64474a7200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: LinenWalletActionsKovan
Function name: redeemUnderlyingAndTransfer(address,address,uint256)
PC address: 965
Estimated Gas Usage: 2982 - 72296
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/15dfb146f0cd44ccdcc194eb598ddb2b.sol:42

      require(success, "Transfer

--------------------
Initial State:

Account: [CREATOR], balance: 0x4020fbfba, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: redeemUnderlyingAndTransfer(address,address,uint256), txdata: 0xcaf8278900000000000000000000000041b5844f4680a8c38fbb695b7f9cfd1f64474a7200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0


