==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 668
Estimated Gas Usage: 24922 - 157072
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:52

= abssub(resinf, myinf);
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 696
Estimated Gas Usage: 24922 - 157072
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:54

*10**18) {
            

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 999
Estimated Gas Usage: 24922 - 157072
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:68


}
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 1007
Estimated Gas Usage: 24922 - 157072
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:68


}
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 1043
Estimated Gas Usage: 24922 - 157072
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:68


}
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 1048
Estimated Gas Usage: 24922 - 157072
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:68


}
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: bet(uint256,uint128,uint256)
PC address: 1572
Estimated Gas Usage: 22100 - 153445
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:38

thi

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: NcovDeadPool
Function name: bet(uint256,uint128,uint256)
PC address: 1699
Estimated Gas Usage: 22100 - 153445
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:38

this), amount);
        bets[msg.sender] = Bet({amo

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: bet(uint256,uint128,uint256)
PC address: 1699
Estimated Gas Usage: 22100 - 153445
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:38

this), amount);
        bets[msg.sender] = Bet({amo

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: bet(uint256,uint128,uint256)
PC address: 1776
Estimated Gas Usage: 22100 - 153445
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:39

 day:day, infections:infections});
}
    function reward(uint256 amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: bet(uint256,uint128,uint256)
PC address: 1783
Estimated Gas Usage: 22100 - 153445
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:39

 day:day, infections:infections});
}
    function reward(uint256 amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: bet(uint256,uint128,uint256)
PC address: 1810
Estimated Gas Usage: 22100 - 153445
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:39

 day:day, infections:infections});
}
    function reward(uint256 amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: bet(uint256,uint128,uint256)
PC address: 1816
Estimated Gas Usage: 22100 - 153445
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:39

 day:day, infections:infections});
}
    function reward(uint256 amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: NcovDeadPool
Function name: fallback
PC address: 1823
Estimated Gas Usage: 22520 - 119869
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:30

 ? c 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: bet(uint256,uint128,uint256), txdata: 0xa82369b300000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000004040400009030014400000280011080bc, value: 0x0
Caller: [CREATOR], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 1896
Estimated Gas Usage: 24922 - 157072
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:42

infections:0});
        tok.transfer(msg.sender, amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 1905
Estimated Gas Usage: 24922 - 157072
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:42

infections:0});
        tok.transfer(msg.sender, amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 1942
Estimated Gas Usage: 24922 - 157072
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:42

infections:0});
        tok.transfer(msg.sender, amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 1952
Estimated Gas Usage: 24922 - 157072
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:42

infections:0});
        tok.transfer(msg.sender, amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 1953
Estimated Gas Usage: 24922 - 157072
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:45

  f

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 2070
Estimated Gas Usage: 24922 - 157072
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:45

  function claim() public {
    

--------------------
Initial State:

Account: [CREATOR], balance: 0xe5a12, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000001abd51fb563ba4050ca01000140baa73ecf, value: 0x0
Caller: [SOMEGUY], function: claim(), txdata: 0x4e71d92d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NcovDeadPool
Function name: fallback
PC address: 2070
Estimated Gas Usage: 24922 - 157072
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d50ef7a3dd0e13c4f48f9a63e2863086.sol:45

  function claim() public {
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: bet(uint256,uint128,uint256), txdata: 0xa82369b3000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000001801c2044643000800002800280baa73ecf, value: 0x0
Caller: [ATTACKER], function: claim(), txdata: 0x4e71d92d, value: 0x0