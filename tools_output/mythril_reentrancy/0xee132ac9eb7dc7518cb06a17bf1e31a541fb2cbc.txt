==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Arbot
Function name: withdrawToken(address,bool)
PC address: 760
Estimated Gas Usage: 6216 - 76380
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6e661e3e44b3563ffbab5e1cffef1fbf.sol:378

le {}

  // ======== Gas Token

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address,bool), txdata: 0x082c6e64000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0120018001010180400110010101010101010400010101010101010101010101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Arbot
Function name: withdrawToken(address,bool)
PC address: 899
Estimated Gas Usage: 6216 - 76380
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6e661e3e44b3563ffbab5e1cffef1fbf.sol:378

unction() public payable {}

  // ======== Gas Token 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address,bool), txdata: 0x082c6e64000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0120018001010180400110010101010101010400010101010101010101010101, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Arbot
Function name: withdrawToken(address,bool)
PC address: 899
Estimated Gas Usage: 6216 - 76380
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/6e661e3e44b3563ffbab5e1cffef1fbf.sol:378

unction() public payable {}

  // ======== Gas Token 

--------------------
Initial State:

Account: [CREATOR], balance: 0x80002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address,bool), txdata: 0x082c6e6400000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Arbot
Function name: withdrawToken(address,bool)
PC address: 934
Estimated Gas Usage: 6216 - 76380
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address,bool), txdata: 0x082c6e6400000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Arbot
Function name: withdrawToken(address,bool)
PC address: 946
Estimated Gas Usage: 6216 - 76380
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/6e661e3e44b3563ffbab5e1cffef1fbf.sol:378

unction() public payable {}

  // ======== Gas Token 

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address,bool), txdata: 0x082c6e6400000000000000000000000000000000000000000000000000000000000000004001010101080104802001020402010110020108100840020401200110088010, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Arbot
Function name: withdrawToken(address,bool)
PC address: 1138
Estimated Gas Usage: 6216 - 76380
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6e661e3e44b3563ffbab5e1cffef1fbf.sol:382

879cb30FE243b4Dfee438691c04);
    gs

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address,bool), txdata: 0x082c6e64000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0120018001010180400110010101010101010400010101010101010101010101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Arbot
Function name: withdrawToken(address,bool)
PC address: 1277
Estimated Gas Usage: 6216 - 76380
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6e661e3e44b3563ffbab5e1cffef1fbf.sol:382

 gst2 = GST2(0x0000000000b3F879cb30FE243b4Dfee438691c04);
    gst

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address,bool), txdata: 0x082c6e64000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0120018001010180400110010101010101010400010101010101010101010101, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Arbot
Function name: withdrawToken(address,bool)
PC address: 1277
Estimated Gas Usage: 5958 - 75841
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/6e661e3e44b3563ffbab5e1cffef1fbf.sol:382

 gst2 = GST2(0x0000000000b3F879cb30FE243b4Dfee438691c04);
    gst

--------------------
Initial State:

Account: [CREATOR], balance: 0x21c0000000080001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address,bool), txdata: 0x082c6e6400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Arbot
Function name: withdrawToken(address,bool)
PC address: 9511
Estimated Gas Usage: 6216 - 76380
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address,bool), txdata: 0x082c6e6400000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101, value: 0x0