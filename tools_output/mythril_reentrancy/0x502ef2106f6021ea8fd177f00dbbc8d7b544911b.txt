==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BS
Function name: bulkTransfer(address,address[],uint256[])
PC address: 229
Estimated Gas Usage: 5405 - 82277
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/e36676195005210c0f8eacf5d2c5eeb4.sol:103

rns (bool) {

        require((toAddresses.length > 0) && (toAddresses.length == values.length));

        for (uint i = 0; i < toAddresses.length; i++) {

            token.safeTransfer(toAddresses[i], values[i]);

        }

        return true;

    }

}

--------------------
Initial State:

Account: [CREATOR], balance: 0x2081, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: bulkTransfer(address,address[],uint256[]), txdata: 0xe886dade0000000000000000000000000000000000000000000000000000000000000002ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BS
Function name: bulkTransfer(address,address[],uint256[])
PC address: 840
Estimated Gas Usage: 5405 - 82277
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/e36676195005210c0f8eacf5d2c5eeb4.sol:79

ken, address from, addres

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: bulkTransfer(address,address[],uint256[]), txdata: 0xe886dade000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeeffff1fc4000000000000000000000000000000000000000000000000000000000fd, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: BS
Function name: bulkTransfer(address,address[],uint256[])
PC address: 840
Estimated Gas Usage: 5405 - 82277
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/e36676195005210c0f8eacf5d2c5eeb4.sol:79

ken, address from, addres

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: bulkTransfer(address,address[],uint256[]), txdata: 0xe886dade0000000000000000000000000000000000000000000000000000000000000002, value: 0x0