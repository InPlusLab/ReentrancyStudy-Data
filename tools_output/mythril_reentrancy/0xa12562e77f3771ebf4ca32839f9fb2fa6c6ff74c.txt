==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Airdrop
Function name: fallback
PC address: 81
Estimated Gas Usage: 4467 - 48736
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3c2a2b7290c2694796fd337a0ef54dca.sol:103

      IERC20 erc20Token = IERC20(erc20TokenAddr);
        uint allowance = erc20Token.allowance(msg.sender, address(this));

        for (uint i = 0; i < addresses.length; i++) {
          if (addresses[i] != address(0) && amounts[i] != 0) {
            if (allowance >= amounts[i]) {
              if (erc20Token.transferFrom(msg.sender, addresses[i], amounts[i])) {
                allowance -= amounts[i];
              }
            }
          }
        }

        emit AirdropEvent(erc20TokenAddr, addresses, amounts);
    }
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: doAirDrop(address,uint256[],address[]), txdata: 0x3f64c5f60000000000000000000000000000000000000000000000000000000000000001ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Airdrop
Function name: fallback
PC address: 91
Estimated Gas Usage: 4467 - 48736
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3c2a2b7290c2694796fd337a0ef54dca.sol:103

      IERC20 erc20Token = IERC20(erc20TokenAddr);
        uint allowance = erc20Token.allowance(msg.sender, address(this));

        for (uint i = 0; i < addresses.length; i++) {
          if (addresses[i] != address(0) && amounts[i] != 0) {
            if (allowance >= amounts[i]) {
              if (erc20Token.transferFrom(msg.sender, addresses[i], amounts[i])) {
                allowance -= amounts[i];
              }
            }
          }
        }

        emit AirdropEvent(erc20TokenAddr, addresses, amounts);
    }
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000100008244, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: doAirDrop(address,uint256[],address[]), txdata: 0x3f64c5f6000000000000000000000000000000000000000000000000000000000000000180, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Airdrop
Function name: fallback
PC address: 295
Estimated Gas Usage: 4467 - 48736
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3c2a2b7290c2694796fd337a0ef54dca.sol:106


          if (addresses[i] != address(0) && am

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000008000000030e, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10000000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: doAirDrop(address,uint256[],address[]), txdata: 0x3f64c5f6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe080, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Airdrop
Function name: fallback
PC address: 649
Estimated Gas Usage: 4467 - 48736
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3c2a2b7290c2694796fd337a0ef54dca.sol:118
Initial State:

Account: [CREATOR], balance: 0xfe3a8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: doAirDrop(address,uint256[],address[]), txdata: 0x3f64c5f6000000000000000000000000000000000000000000000000000000000000000180, value: 0x0


