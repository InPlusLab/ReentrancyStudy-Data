with mythril_dir
==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Distributor
Function name: distribute(address[])
PC address: 248
Estimated Gas Usage: 11198 - 70529
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d6f0d77ae9f2a3ffc7d577e3265bd8a.sol:58

uint256 i = 0; i <  addrs.length; i++) {
			w.withdrawTo(addrs[i]);
		}
		BatchComplete(nonce);
		nonce = nonce + 1;
	}

	function complete() onlyOwner {
		nonce = 0;
		Complete();


--------------------
Initial State:

Account: [CREATOR], balance: 0x100000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889bffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Distributor
Function name: distribute(address[])
PC address: 597
Estimated Gas Usage: 11198 - 70529
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d6f0d77ae9f2a3ffc7d577e3265bd8a.sol:62

e

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889b80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Distributor
Function name: distribute(address[])
PC address: 800
Estimated Gas Usage: 11198 - 70529
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d6f0d77ae9f2a3ffc7d577e3265bd8a.sol:65

ner {

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889b80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Distributor
Function name: distribute(address[])
PC address: 823
Estimated Gas Usage: 11198 - 70529
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d6f0d77ae9f2a3ffc7d577e3265bd8a.sol:67

		Com

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889b80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Distributor
Function name: distribute(address[])
PC address: 828
Estimated Gas Usage: 11198 - 70529
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d6f0d77ae9f2a3ffc7d577e3265bd8a.sol:66

ce = 0;
		Complet

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889b80, value: 0x0


