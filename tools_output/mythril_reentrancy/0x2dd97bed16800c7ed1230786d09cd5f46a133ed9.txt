==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MoverValorYearnUSDCv2VaultV2
Function name: initialize(address,address,address)
PC address: 10744
Estimated Gas Usage: 104194 - 499257
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b8e03f89e1d69f3f337fc7305b8e8c9d.sol:1413

nds
    function i

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(address,address,address), txdata: 0xc0c53b8b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MoverValorYearnUSDCv2VaultV2
Function name: initialize(address,address,address)
PC address: 10752
Estimated Gas Usage: 104194 - 499257
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b8e03f89e1d69f3f337fc7305b8e8c9d.sol:1414

t(uint256 _amount, 

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(address,address,address), txdata: 0xc0c53b8b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MoverValorYearnUSDCv2VaultV2
Function name: initialize(address,address,address)
PC address: 10770
Estimated Gas Usage: 104194 - 499257
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b8e03f89e1d69f3f337fc7305b8e8c9d.sol:524

onstruction or not.
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(address,address,address), txdata: 0xc0c53b8b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MoverValorYearnUSDCv2VaultV2
Function name: initialize(address,address,address)
PC address: 10784
Estimated Gas Usage: 104194 - 499257
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b8e03f89e1d69f3f337fc7305b8e8c9d.sol:524

onstruction or not.
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(address,address,address), txdata: 0xc0c53b8b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MoverValorYearnUSDCv2VaultV2
Function name: initialize(address,address,address)
PC address: 16228
Estimated Gas Usage: 104194 - 499257
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/b8e03f89e1d69f3f337fc7305b8e8c9d.sol:1417

ult
        // pool can give less funds than as

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initialize(address,address,address), txdata: 0xc0c53b8b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001010101010101010101010000010101010101010000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: MoverValorYearnUSDCv2VaultV2
Function name: initialize(address,address,address)
PC address: 16228
Estimated Gas Usage: 104194 - 499257
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/b8e03f89e1d69f3f337fc7305b8e8c9d.sol:1417

ult
        // pool can give less funds than as

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000804, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initialize(address,address,address), txdata: 0xc0c53b8b010101010101010101010101010101010101010101010101010101010101010100000000000000000000000080808080808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000000, value: 0x0