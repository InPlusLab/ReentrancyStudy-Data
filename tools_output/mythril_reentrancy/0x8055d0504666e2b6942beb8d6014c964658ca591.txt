==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: FiatContract
Function name: update(uint256,string,uint256,uint256,uint256,uint256)
PC address: 402
Estimated Gas Usage: 43958 - 211881
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/50c29f52732df285edada9799cb196ba.sol:86

6 gbp) external {
        require(msg.sender==sender);
        tokens[id] = Token(_token, eth, usd, eur, gbp, block.number);
        NewPrice(id, _token);
    }

    // delete a token from the contract
    function deleteToken(uint id) {
        req

--------------------
Initial State:

Account: [CREATOR], balance: 0x108040108881912, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: update(uint256,string,uint256,uint256,uint256,uint256), txdata: 0x1833fa4c0000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FiatContract
Function name: execute(address,uint256,bytes)
PC address: 2598
Estimated Gas Usage: 2300 - 39496
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/50c29f52732df285edada9799cb196ba.sol:118

with low gas limits.
    func

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: execute(address,uint256,bytes), txdata: 0xb61d27f6100240000810201000000040deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: FiatContract
Function name: update(uint256,string,uint256,uint256,uint256,uint256)
PC address: 3179
Estimated Gas Usage: 33818 - 161555
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: update(uint256,string,uint256,uint256,uint256,uint256), txdata: 0x1833fa4cffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: FiatContract
Function name: update(uint256,string,uint256,uint256,uint256,uint256)
PC address: 3193
Estimated Gas Usage: 33818 - 161555
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x40, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: update(uint256,string,uint256,uint256,uint256,uint256), txdata: 0x1833fa4cffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0