==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: StandardToken
Function name: distributeTokens(address,uint256)
PC address: 592
Estimated Gas Usage: 1235 - 2461
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/5732bb22492a6648ea0ab70284a48449.sol:47

alances[msg.sender] >= _valu

--------------------
Initial State:

Account: [CREATOR], balance: 0x7bfde, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: distributeTokens(address,uint256), txdata: 0x158a4988000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== Unprotected Selfdestruct ====
SWC ID: 106
Severity: High
Contract: StandardToken
Function name: destroycontract(address)
PC address: 994
Estimated Gas Usage: 263 - 1018
Any sender can cause the contract to self-destruct.
Any sender can trigger execution of the SELFDESTRUCT instruction to destroy this contract account and withdraw its balance to an arbitrary address. Review the transaction trace generated for this issue and make sure that appropriate security controls are in place to prevent unrestricted access.
--------------------
In file: /tmp/5732bb22492a6648ea0ab70284a48449.sol:43

n distributeToken

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: destroycontract(address), txdata: 0x422624d2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Zapit
Function name: approveAndCall(address,uint256,bytes)
PC address: 1057
Estimated Gas Usage: 8882 - 71803
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/5732bb22492a6648ea0ab70284a48449.sol:121

g.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);

        if (!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
        return true;
    }
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca5100000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Zapit
Function name: distributeTokens(address,uint256)
PC address: 1620
Estimated Gas Usage: 14620 - 57328
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/5732bb22492a6648ea0ab70284a48449.sol:47

alances[msg.sender] >= _valu

--------------------
Initial State:

Account: [CREATOR], balance: 0x2040000100800000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distributeTokens(address,uint256), txdata: 0x158a4988000000000000000000000000affeaffeaf7caffcabfeaffeaffeaf02aaa288a0080057bf7e6bc2cbcfdf1a16ef9e72359a623043a1927362, value: 0x0

==== Unprotected Selfdestruct ====
SWC ID: 106
Severity: High
Contract: Zapit
Function name: destroycontract(address)
PC address: 2037
Estimated Gas Usage: 342 - 1427
Any sender can cause the contract to self-destruct.
Any sender can trigger execution of the SELFDESTRUCT instruction to destroy this contract account and withdraw its balance to an arbitrary address. Review the transaction trace generated for this issue and make sure that appropriate security controls are in place to prevent unrestricted access.
--------------------
In file: /tmp/5732bb22492a6648ea0ab70284a48449.sol:43

n distributeToken

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: destroycontract(address), txdata: 0x422624d2efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Zapit
Function name: approveAndCall(address,uint256,bytes)
PC address: 2682
Estimated Gas Usage: 8883 - 71474
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0