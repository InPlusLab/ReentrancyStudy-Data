==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AmmuNationStore
Function name: delistNFT(address,uint256[])
PC address: 1274
Estimated Gas Usage: 5020 - 82435
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:571

e can buy GTA for

   */

    function setTokenPrices(u

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: delistNFT(address,uint256[]), txdata: 0x4708655a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef80, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: AmmuNationStore
Function name: delistNFT(address,uint256[])
PC address: 1274
Estimated Gas Usage: 5020 - 82435
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:571

e can buy GTA for

   */

    function setTokenPrices(u

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: delistNFT(address,uint256[]), txdata: 0x4708655a0000000000000000000000000000000000000000000000000000000000000002, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AmmuNationStore
Function name: withdrawGTA(uint256)
PC address: 1590
Estimated Gas Usage: 3568 - 39310
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:579

   tokenBuyPrice = _newBuyPrice;



--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawGTA(uint256), txdata: 0x6ed5f880, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AmmuNationStore
Function name: depositGTA(uint256)
PC address: 2131
Estimated Gas Usage: 3695 - 39532
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:523

ds[i]);

            nftPrices[_nftToken][_t

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: depositGTA(uint256), txdata: 0xa4453336, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AmmuNationStore
Function name: buyNFT(address,uint256)
PC address: 3004
Estimated Gas Usage: 4791 - 77315
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:613

  _buyPrice = _buyPrice.

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyNFT(address,uint256), txdata: 0xa82ba76f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AmmuNationStore
Function name: buyNFT(address,uint256)
PC address: 3175
Estimated Gas Usage: 4791 - 77315
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:617

amount = value.div(_buyPrice);

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyNFT(address,uint256), txdata: 0xa82ba76f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000100000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AmmuNationStore
Function name: buyNFT(address,uint256)
PC address: 3374
Estimated Gas Usage: 4791 - 77315
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:619

nt, "Sold out");

        require(token.transfer(ms

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyNFT(address,uint256), txdata: 0xa82ba76f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: AmmuNationStore
Function name: buyNFT(address,uint256)
PC address: 3374
Estimated Gas Usage: 4791 - 77315
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:619

nt, "Sold out");

        require(token.transfer(ms

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: buyNFT(address,uint256), txdata: 0xa82ba76f000000000000000000000000000000000000000000000000000000000000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AmmuNationStore
Function name: buyNFT(address,uint256)
PC address: 3374
Estimated Gas Usage: 4791 - 77315
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:619

nt, "Sold out");

        require(token.transfer(ms

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buyNFT(address,uint256), txdata: 0xa82ba76f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000100000901d12ebe1b195e5aa8748e62bd7734ae19b51f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AmmuNationStore
Function name: listNFT(address,uint256[],uint256)
PC address: 3595
Estimated Gas Usage: 15749 - 134956
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:549

r, amount), "Amount exceeds the available balance");

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: listNFT(address,uint256[],uint256), txdata: 0xbf6de902000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef80, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: AmmuNationStore
Function name: listNFT(address,uint256[],uint256)
PC address: 3595
Estimated Gas Usage: 15749 - 134956
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:549

r, amount), "Amount exceeds the available balance");

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: listNFT(address,uint256[],uint256), txdata: 0xbf6de9020000000000000000000000000000000000000000000000000000000000000002, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AmmuNationStore
Function name: listNFT(address,uint256[],uint256)
PC address: 3595
Estimated Gas Usage: 15749 - 134956
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:549

r, amount), "Amount exceeds the available balance");

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: listNFT(address,uint256[],uint256), txdata: 0xbf6de902000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AmmuNationStore
Function name: listNFT(address,uint256[],uint256)
PC address: 3683
Estimated Gas Usage: 15749 - 134956
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:555

ion robCashier() onlyOwner public {

      

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: listNFT(address,uint256[],uint256), txdata: 0xbf6de902000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef80, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: AmmuNationStore
Function name: buy()
PC address: 4053
Estimated Gas Usage: 2126 - 2551
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/677b46141a53d3f2740bfc36d83ccf0e.sol:375

ernal

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: buy(), txdata: 0xa6f2ae3a, value: 0x0