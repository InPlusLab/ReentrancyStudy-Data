==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BancorHandler
Function name: withdrawToken(address,uint256)
PC address: 1268
Estimated Gas Usage: 3662 - 39685
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/09dd2d1cbecd5c1de179f030ea9b9432.sol:244

 require(_totlePrimary != address(0), 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, value: 0x0
Caller: [CREATOR], function: withdrawToken(address,uint256), txdata: 0x9e281a98000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BancorHandler
Function name: performBuy(address[8],uint256[6],uint256,uint256,uint8,bytes32,bytes32)
PC address: 2411
Estimated Gas Usage: 6261 - 88127
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/09dd2d1cbecd5c1de179f030ea9b9432.sol:207

     }


--------------------
Initial State:

Account: [CREATOR], balance: 0x40002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: performBuy(address[8],uint256[6],uint256,uint256,uint8,bytes32,bytes32), txdata: 0xbdd5be2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010100000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BancorHandler
Function name: performBuy(address[8],uint256[6],uint256,uint256,uint8,bytes32,bytes32)
PC address: 2434
Estimated Gas Usage: 6261 - 88127
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/09dd2d1cbecd5c1de179f030ea9b9432.sol:209

 Crea

--------------------
Initial State:

Account: [CREATOR], balance: 0x310a8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10000000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: performBuy(address[8],uint256[6],uint256,uint256,uint8,bytes32,bytes32), txdata: 0xbdd5be2f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010100000000000000000000000001, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BancorHandler
Function name: performBuy(address[8],uint256[6],uint256,uint256,uint8,bytes32,bytes32)
PC address: 2796
Estimated Gas Usage: 6261 - 88127
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/09dd2d1cbecd5c1de179f030ea9b9432.sol:221

internal {
        require(Token(token).transfer(msg.sender, amount), "BancorHandler - Failed to transfer token to msg.sender");
    }

    fu

--------------------
Initial State:

Account: [CREATOR], balance: 0x90002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x380000010, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: performBuy(address[8],uint256[6],uint256,uint256,uint8,bytes32,bytes32), txdata: 0xbdd5be2f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000010101010101010101010101010101010101010100000000000000000000000008, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BancorHandler
Function name: performBuy(address[8],uint256[6],uint256,uint256,uint8,bytes32,bytes32)
PC address: 3003
Estimated Gas Usage: 6261 - 88127
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/09dd2d1cbecd5c1de179f030ea9b9432.sol:229

nction approveExchange(address exchange, 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000100020041, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: performBuy(address[8],uint256[6],uint256,uint256,uint8,bytes32,bytes32), txdata: 0xbdd5be2f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000001001040402011001010410048001010180020201000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: BancorHandler
Function name: performBuy(address[8],uint256[6],uint256,uint256,uint8,bytes32,bytes32)
PC address: 3003
Estimated Gas Usage: 5826 - 86470
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/09dd2d1cbecd5c1de179f030ea9b9432.sol:229

nction approveExchange(address exchange, 

--------------------
Initial State:

Account: [CREATOR], balance: 0x20c0538, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: performBuy(address[8],uint256[6],uint256,uint256,uint8,bytes32,bytes32), txdata: 0xbdd5be2f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0


