==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: EthercraftFarm
Function name: prep(address,uint8)
PC address: 2170
Estimated Gas Usage: 28924 - 146844
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/fdfdce800f6ee877149b22e861de68e8.sol:138

object] = tokenBalan

--------------------
Initial State:

Account: [CREATOR], balance: 0x331040002a0154000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: prep(address,uint8), txdata: 0xf4a8619a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: EthercraftFarm
Function name: prep(address,uint8)
PC address: 2311
Estimated Gas Usage: 28924 - 146844
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/fdfdce800f6ee877149b22e861de68e8.sol:139

okenBalanceOf

--------------------
Initial State:

Account: [CREATOR], balance: 0x331040002a0154000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: prep(address,uint8), txdata: 0xf4a8619a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EthercraftFarm
Function name: prep(address,uint8)
PC address: 2488
Estimated Gas Usage: 28924 - 146844
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/fdfdce800f6ee877149b22e861de68e8.sol:139

dd(uint256(_len * 1 ether));
    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x20400000000d944a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: prep(address,uint8), txdata: 0xf4a8619a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000c0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EthercraftFarm
Function name: prep(address,uint8)
PC address: 2629
Estimated Gas Usage: 28924 - 146844
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/fdfdce800f6ee877149b22e861de68e8.sol:139

ct] = tokenBalanceOf[owner][object].add(uint256(_len * 1 ether));
    }

    function reap(address _o

--------------------
Initial State:

Account: [CREATOR], balance: 0x20400000000d944a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: prep(address,uint8), txdata: 0xf4a8619a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000c0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EthercraftFarm
Function name: prep(address,uint8)
PC address: 2666
Estimated Gas Usage: 28924 - 146844
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/fdfdce800f6ee877149b22e861de68e8.sol:143

addre

--------------------
Initial State:

Account: [CREATOR], balance: 0x20400000000d944a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: prep(address,uint8), txdata: 0xf4a8619a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000c0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EthercraftFarm
Function name: prep(address,uint8)
PC address: 2815
Estimated Gas Usage: 28924 - 146844
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/fdfdce800f6ee877149b22e861de68e8.sol:143

ire(_object != address(0));
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x20400000000d944a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: prep(address,uint8), txdata: 0xf4a8619a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000c0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EthercraftFarm
Function name: prep(address,uint8)
PC address: 2838
Estimated Gas Usage: 28924 - 146844
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/fdfdce800f6ee877149b22e861de68e8.sol:142

al {


--------------------
Initial State:

Account: [CREATOR], balance: 0x20400000000d944a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: prep(address,uint8), txdata: 0xf4a8619a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000c0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EthercraftFarm
Function name: prep(address,uint8)
PC address: 2989
Estimated Gas Usage: 28924 - 146844
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/fdfdce800f6ee877149b22e861de68e8.sol:142

eentrant external {
        require(_object != address(0));
        require(tokenBalanceOf

--------------------
Initial State:

Account: [CREATOR], balance: 0x20400000000d944a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: prep(address,uint8), txdata: 0xf4a8619a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000c0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EthercraftFarm
Function name: prep(address,uint8)
PC address: 3001
Estimated Gas Usage: 28924 - 146844
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/fdfdce800f6ee877149b22e861de68e8.sol:116

 uint256;

    // TODO:

--------------------
Initial State:

Account: [CREATOR], balance: 0x20400000000d944a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: prep(address,uint8), txdata: 0xf4a8619a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000c0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: EthercraftFarm
Function name: prep(address,uint8)
PC address: 3015
Estimated Gas Usage: 28924 - 146844
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/fdfdce800f6ee877149b22e861de68e8.sol:116

 uint256;

    // TODO:

--------------------
Initial State:

Account: [CREATOR], balance: 0x20400000000d944a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: prep(address,uint8), txdata: 0xf4a8619a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000c0, value: 0x0