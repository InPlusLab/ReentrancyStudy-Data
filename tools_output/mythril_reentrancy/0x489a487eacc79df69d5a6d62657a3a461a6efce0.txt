==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BurnValley
Function name: burnAllTokens(address)
PC address: 286
Estimated Gas Usage: 4247 - 73912
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2bf640b9d40c18277445c8353f90c1e2.sol:443

ritance. It will ma

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: burnAllTokens(address), txdata: 0xa67915680000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: burnAllTokens(address), txdata: 0xa6791568000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: BurnValley
Function name: burnAllTokens(address)
PC address: 286
Estimated Gas Usage: 4247 - 73912
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2bf640b9d40c18277445c8353f90c1e2.sol:443

ritance. It will ma

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: burnAllTokens(address), txdata: 0xa67915680000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Swap
Function name: withdrawUsdc(address,uint256)
PC address: 4358
Estimated Gas Usage: 3748 - 40803
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2bf640b9d40c18277445c8353f90c1e2.sol:145

 up if present
      if (returndata.

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawUsdc(address,uint256), txdata: 0xe58a5e9000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010100000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Swap
Function name: withdrawUsdc(address)
PC address: 4358
Estimated Gas Usage: 5275 - 76892
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2bf640b9d40c18277445c8353f90c1e2.sol:145

 up if present
      if (returndata.

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawUsdc(address), txdata: 0x5cdc48f90000000000000000000000000000000000000000000000000000000001010101, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Swap
Function name: withdrawUsdc(address)
PC address: 4421
Estimated Gas Usage: 5275 - 76892
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2bf640b9d40c18277445c8353f90c1e2.sol:145

 up if present
      if (returndata.

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawUsdc(address), txdata: 0x5cdc48f90000000000000000000000000000000000000000000000000000000001010101, value: 0x0


