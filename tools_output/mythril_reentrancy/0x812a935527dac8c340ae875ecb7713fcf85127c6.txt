with mythril_dir
==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Snip3D
Function name: constructor
PC address: 260
Estimated Gas Usage: 40233 - 218089
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/04d38de36339c0e69e1510fc29ccd2c4.sol:283

nt P3Dcontract_ = HourglassInter

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Snip3D
Function name: constructor
PC address: 266
Estimated Gas Usage: 40233 - 218089
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/04d38de36339c0e69e1510fc29ccd2c4.sol:283

B83F7D12A36E0475aBd

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: Snip3D
Function name: blocksTillSemiShoot(address)
PC address: 2584
Estimated Gas Usage: 1957 - 3232
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/04d38de36339c0e69e1510fc29ccd2c4.sol:367

block.number - lastMove[theplayer] < blocksBeforeTargetShoot)

        {number = blocksBeforeTargetShoot -(block.number - lastMove[theplayer]);}

        ret

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: blocksTillSemiShoot(address), txdata: 0x182a7f72, value: 0x0


