==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenAirdrop
Function name: giftERC20(address,uint256,address,bytes)
PC address: 1319
Estimated Gas Usage: 9798 - 70179
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/e40e8bed7ec7eb4961d07b40f849f7bf.sol:471

;

  }



  function balanceOf(address person, address token

--------------------
Initial State:

Account: [CREATOR], balance: 0xc0000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: giftERC20(address,uint256,address,bytes), txdata: 0x418473da00000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000080000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenAirdrop
Function name: giftERC20(address,uint256,address,bytes)
PC address: 1504
Estimated Gas Usage: 9798 - 70179
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/e40e8bed7ec7eb4961d07b40f849f7bf.sol:479

    return balances

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: giftERC20(address,uint256,address,bytes), txdata: 0x418473da00000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000001000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenAirdrop
Function name: giftERC20(address,uint256,address,bytes)
PC address: 1644
Estimated Gas Usage: 9798 - 70179
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/e40e8bed7ec7eb4961d07b40f849f7bf.sol:477

view returns(uint) {

    return balances[person][tok

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: giftERC20(address,uint256,address,bytes), txdata: 0x418473da00000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000001000002000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0