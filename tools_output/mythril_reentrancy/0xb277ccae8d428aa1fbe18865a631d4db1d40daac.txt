==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PaymentProcessor
Function name: withdrawToken(address,uint256,address)
PC address: 2592
Estimated Gas Usage: 4197 - 39911
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d85277a1c829008f1cbec2ae6d6af786.sol:503

niswapFactory.getExchange(

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawToken(address,uint256,address), txdata: 0x3ccdbb28000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PaymentProcessor
Function name: depositToken(uint64,address,address,uint256)
PC address: 3703
Estimated Gas Usage: 16537 - 226951
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/d85277a1c829008f1cbec2ae6d6af786.sol:519

                   amount /* (input) tokens_sol

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: depositToken(uint64,address,address,uint256), txdata: 0x55d8e6310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101011d62ed3e00000000000000000000000000000000000000000000000000000001, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PaymentProcessor
Function name: depositToken(uint64,address,address,uint256)
PC address: 4304
Estimated Gas Usage: 16537 - 226951
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d85277a1c829008f1cbec2ae6d6af786.sol:525

              UINT256_MAX /* deadline */,

              

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: depositToken(uint64,address,address,uint256), txdata: 0x55d8e63100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef1d62ed3e00000000000000002000808000400400800020401010000104080401, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PaymentProcessor
Function name: depositToken(uint64,address,address,uint256)
PC address: 4396
Estimated Gas Usage: 16537 - 226951
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d85277a1c829008f1cbec2ae6d6af786.sol:529

          } else 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: depositToken(uint64,address,address,uint256), txdata: 0x55d8e63100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef1d62ed3e00000000000000408000008080800080000102000010800080008001, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PaymentProcessor
Function name: depositToken(uint64,address,address,uint256)
PC address: 5141
Estimated Gas Usage: 16537 - 226951
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d85277a1c829008f1cbec2ae6d6af786.sol:559

6 amount);

    event TokenDepositReceived(uint64 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: depositToken(uint64,address,address,uint256), txdata: 0x55d8e63100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef1d62ed3e00000000000000002000808000400400800020401010000104080401, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PaymentProcessor
Function name: depositToken(uint64,address,address,uint256)
PC address: 5141
Estimated Gas Usage: 16537 - 226951
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d85277a1c829008f1cbec2ae6d6af786.sol:559

6 amount);

    event TokenDepositReceived(uint64 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: depositToken(uint64,address,address,uint256), txdata: 0x55d8e63100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef1d62ed3e00000000000000408000008080800080000102000010800080008001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PaymentProcessor
Function name: depositToken(uint64,address,address,uint256)
PC address: 5303
Estimated Gas Usage: 16537 - 226951
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d85277a1c829008f1cbec2ae6d6af786.sol:561

 inputToken, uint256 amount, address intermediaryToken, uint256 amountBought);

    event TokenDepositWithdrawn(address indexed token, address to, uint256 amount)

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: depositToken(uint64,address,address,uint256), txdata: 0x55d8e63100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef1d62ed3e00000000000000408000008080800080000102000010800080008001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: PaymentProcessor
Function name: depositToken(uint64,address,address,uint256)
PC address: 5436
Estimated Gas Usage: 16537 - 226951
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d85277a1c829008f1cbec2ae6d6af786.sol:569

tory.getExchange(

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: depositToken(uint64,address,address,uint256), txdata: 0x55d8e6310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011010401011d62ed3e00000000000000000000000000000000000000000000000000000001, value: 0x0