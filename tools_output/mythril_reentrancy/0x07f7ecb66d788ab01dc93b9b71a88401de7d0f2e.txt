==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: PoCGame
Function name: constructor
PC address: 48
Estimated Gas Usage: 114 - 2887
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:73

ifier  onlyPlayers()

    { 

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: PoCGame
Function name: wager()
PC address: 620
Estimated Gas Usage: 1037 - 1462
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:73

ifier  onlyPlayers()

    { 

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: OpenToThePublic(), txdata: 0x4a376c97, value: 0x0
Caller: [ATTACKER], function: wager(), txdata: 0x667d5d22, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: PoCGame
Function name: play()
PC address: 794
Estimated Gas Usage: 1117 - 1542
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:73

ifier  onlyPlayers()

    { 

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x80000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: OpenToThePublic(), txdata: 0x4a376c97, value: 0x0
Caller: [ATTACKER], function: play(), txdata: 0x93e84cd9, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: PoCGame
Function name: AdjustBetAmounts(uint256)
PC address: 1130
Estimated Gas Usage: 1152 - 1907
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:43

;

    }

    

   modifier 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: OpenToThePublic(), txdata: 0x4a376c97, value: 0x0
Caller: [ATTACKER], function: AdjustBetAmounts(uint256), txdata: 0xd191b336, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: PoCGame
Function name: transferAnyERC20Token(address,address,uint256)
PC address: 1215
Estimated Gas Usage: 1226 - 2311
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:43

;

    }

    

   modifier 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: OpenToThePublic(), txdata: 0x4a376c97, value: 0x0
Caller: [ATTACKER], function: transferAnyERC20Token(address,address,uint256), txdata: 0xd493b9ac, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PoCGame
Function name: transferAnyERC20Token(address,address,uint256)
PC address: 1322
Estimated Gas Usage: 3024 - 40367
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:595
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferAnyERC20Token(address,address,uint256), txdata: 0xd493b9ac, value: 0x0
Caller: [CREATOR], function: transferAnyERC20Token(address,address,uint256), txdata: 0xd493b9ac000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PoCGame
Function name: donate()
PC address: 1908
Estimated Gas Usage: 10491 - 68185
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:431

.sender);

    }

    



    /**

     * ETH balance o

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: OpenToThePublic(), txdata: 0x4a376c97, value: 0x0
Caller: [SOMEGUY], function: donate(), txdata: 0xed88c68e, value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: PoCGame
Function name: donate()
PC address: 1908
Estimated Gas Usage: 10491 - 68185
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:431

.sender);

    }

    



    /**

     * ETH balance o

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: OpenToThePublic(), txdata: 0x4a376c97, value: 0x0
Caller: [ATTACKER], function: donate(), txdata: 0xed88c68e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PoCGame
Function name: donate()
PC address: 1914
Estimated Gas Usage: 10491 - 68185
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:443

    */

    function e

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: OpenToThePublic(), txdata: 0x4a376c97, value: 0x0
Caller: [SOMEGUY], function: donate(), txdata: 0xed88c68e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PoCGame
Function name: donate()
PC address: 1918
Estimated Gas Usage: 10491 - 68185
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:443

    */

    function e

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: OpenToThePublic(), txdata: 0x4a376c97, value: 0x0
Caller: [SOMEGUY], function: donate(), txdata: 0xed88c68e, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PoCGame
Function name: donate()
PC address: 1923
Estimated Gas Usage: 10491 - 68185
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b38050f96cb67489be101eee02183103.sol:449

ew 



--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: OpenToThePublic(), txdata: 0x4a376c97, value: 0x0
Caller: [SOMEGUY], function: donate(), txdata: 0xed88c68e, value: 0x0