==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: CurveSwapStrategy
Function name: estimateSwapAmount(address,address,uint256)
PC address: 1529
Estimated Gas Usage: 15424 - 125207
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1b2485e33a6fd2eab7490a5425e0052c.sol:778

tus = _NOT_ENTERED;
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: estimateSwapAmount(address,address,uint256), txdata: 0x5f2a2518000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CurveSwapStrategy
Function name: estimateSwapAmount(address,address,uint256)
PC address: 3248
Estimated Gas Usage: 15424 - 125207
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1b2485e33a6fd2eab7490a5425e0052c.sol:1266

veRegistryExchange(registry).get_best_rate(_from, _to, _amount);
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x2001080002000d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: estimateSwapAmount(address,address,uint256), txdata: 0x5f2a2518000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0


