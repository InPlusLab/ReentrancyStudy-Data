==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YFFSmicrostaking
Function name: MicroStakeMultiSendToken()
PC address: 4643
Estimated Gas Usage: 21156 - 116473
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c3f7ccfab4ce14cf4eec294534650a77.sol:208

      stakeContractBalance = t

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1d1d1d1d1d1d1d1d1d1d1d1ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: MicroStakeMultiSendToken(), txdata: 0x209a3215, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YFFSmicrostaking
Function name: MicroStakeMultiSendToken()
PC address: 4704
Estimated Gas Usage: 21156 - 116473
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/c3f7ccfab4ce14cf4eec294534650a77.sol:207

thBonus = _EthBonus;
        stakeContractBalance = t

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1d1d1d1d1d1d1d1d1d1d1d1ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: MicroStakeMultiSendToken(), txdata: 0x209a3215, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: YFFSmicrostaking
Function name: WithdrawETH(uint256)
PC address: 8112
Estimated Gas Usage: 2938 - 37549
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/c3f7ccfab4ce14cf4eec294534650a77.sol:294

s(uint){
       

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: WithdrawETH(uint256), txdata: 0x94effa1480, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: YFFSmicrostaking
Function name: WithdrawETH(uint256)
PC address: 8186
Estimated Gas Usage: 2938 - 37549
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/c3f7ccfab4ce14cf4eec294534650a77.sol:295

er];
        ret

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: WithdrawETH(uint256), txdata: 0x94effa1480, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YFFSmicrostaking
Function name: SetEthBonus(uint256)
PC address: 8538
Estimated Gas Usage: 19746 - 115600
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c3f7ccfab4ce14cf4eec294534650a77.sol:216

re(stakeContractBalance > 0);


--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: a0a0a0a0a0a0a0a0a0a0a0a0deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: SetEthBonus(uint256), txdata: 0x9d0981b201, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YFFSmicrostaking
Function name: SetEthBonus(uint256)
PC address: 8599
Estimated Gas Usage: 19746 - 115600
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/c3f7ccfab4ce14cf4eec294534650a77.sol:215

nus > 0);
        require(stakeContractBalance > 0);


--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: a0a0a0a0a0a0a0a0a0a0a0a0deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: SetEthBonus(uint256), txdata: 0x9d0981b201, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YFFSmicrostaking
Function name: SetEthBonus(uint256)
PC address: 8607
Estimated Gas Usage: 19746 - 115600
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/c3f7ccfab4ce14cf4eec294534650a77.sol:217

t p = indexOfEthSe

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: a0a0a0a0a0a0a0a0a0a0a0a0deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: SetEthBonus(uint256), txdata: 0x9d0981b201, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YFFSmicrostaking
Function name: ReturnTokens(address,address,uint256)
PC address: 9207
Estimated Gas Usage: 3221 - 38303
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c3f7ccfab4ce14cf4eec294534650a77.sol:328
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: ReturnTokens(address,address,uint256), txdata: 0xc1486b07000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YFFSmicrostaking
Function name: CheckAllowance()
PC address: 10176
Estimated Gas Usage: 3200 - 38563
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c3f7ccfab4ce14cf4eec294534650a77.sol:299

(uint){
        User memory user = users[m

--------------------
Initial State:

Account: [CREATOR], balance: 0x20000000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: a0a0a0a0a0a0a0a0a0a0a0a0deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: CheckAllowance(), txdata: 0xda4a48f9, value: 0x0