==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AirdropFinal
Function name: recoverTokens(address,uint256)
PC address: 786
Estimated Gas Usage: 2691 - 37961
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/9ba13f8db7a59f6e5ea1b1b3eec23239.sol:54

removeContract() public isCrea

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: startAirdrop(address[],uint256), txdata: 0xe30f7c8bf7, value: 0x0
Caller: [ATTACKER], function: recoverTokens(address,uint256), txdata: 0x069c9fae, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AirdropFinal
Function name: startAirdrop(address[],uint256)
PC address: 999
Estimated Gas Usage: 8761 - 83328
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9ba13f8db7a59f6e5ea1b1b3eec23239.sol:49

 }
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: startAirdrop(address[],uint256), txdata: 0xe30f7c8b98, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AirdropFinal
Function name: startAirdrop(address[],uint256)
PC address: 1204
Estimated Gas Usage: 8761 - 83328
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/9ba13f8db7a59f6e5ea1b1b3eec23239.sol:49

 }
    
    function recoverTok

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: startAirdrop(address[],uint256), txdata: 0xe30f7c8b80, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: AirdropFinal
Function name: startAirdrop(address[],uint256)
PC address: 1204
Estimated Gas Usage: 8761 - 83328
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/9ba13f8db7a59f6e5ea1b1b3eec23239.sol:49

 }
    
    function recoverTok

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: startAirdrop(address[],uint256), txdata: 0xe30f7c8b80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AirdropFinal
Function name: startAirdrop(address[],uint256)
PC address: 1204
Estimated Gas Usage: 8761 - 83328
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/9ba13f8db7a59f6e5ea1b1b3eec23239.sol:49

 }
    
    function recoverTok

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: startAirdrop(address[],uint256), txdata: 0xe30f7c8b98, value: 0x0