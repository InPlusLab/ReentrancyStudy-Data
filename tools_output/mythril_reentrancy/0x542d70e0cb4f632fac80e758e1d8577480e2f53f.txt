==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Minion
Function name: doWithdraw(address,uint256)
PC address: 1667
Estimated Gas Usage: 2718 - 37614
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f1023dd7349a3c291d85bc6e2d30a0b7.sol:52

funds from parent moloch
    }

    f

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000100002bf9, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: doWithdraw(address,uint256), txdata: 0x3381114b0000000000000000000000000000000000000000000000000000000000000000abababababababababababababababababababababababababababababababab, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4128
Estimated Gas Usage: 35201 - 178360
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f1023dd7349a3c291d85bc6e2d30a0b7.sol:67


            0,
            0,
            molochDepositToken,
            0,
            molochDepositToken,
            details
        );

        Action memory action = Action({
            value: actionValue

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d67400000000010101010101010100000001000000000000000000000000000000000000000000000000000000000000001aabababababababababababababababab0000000000000000000000000000000000000000000000000000000000000010abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4380
Estimated Gas Usage: 35201 - 178360
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f1023dd7349a3c291d85bc6e2d30a0b7.sol:87

        return proposalId;
 

--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4397
Estimated Gas Usage: 35201 - 178360
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f1023dd7349a3c291d85bc6e2d30a0b7.sol:87

        return proposalId;
 

--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4450
Estimated Gas Usage: 35201 - 178360
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f1023dd7349a3c291d85bc6e2d30a0b7.sol:87

        return proposalId;
 

--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4468
Estimated Gas Usage: 35201 - 178360
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f1023dd7349a3c291d85bc6e2d30a0b7.sol:87

        return proposalId;
 

--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4521
Estimated Gas Usage: 35201 - 178360
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f1023dd7349a3c291d85bc6e2d30a0b7.sol:87

        return proposalId;
 

--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4539
Estimated Gas Usage: 35201 - 178360
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f1023dd7349a3c291d85bc6e2d30a0b7.sol:87

        return proposalId;
 

--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4553
Estimated Gas Usage: 35201 - 178360
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f1023dd7349a3c291d85bc6e2d30a0b7.sol:87

        return proposalId;
 

--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4815
Estimated Gas Usage: 35201 - 178360
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4861
Estimated Gas Usage: 35201 - 178360
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4886
Estimated Gas Usage: 35201 - 178360
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4899
Estimated Gas Usage: 35201 - 178360
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Minion
Function name: proposeAction(address,uint256,bytes,bytes32)
PC address: 4921
Estimated Gas Usage: 35201 - 178360
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
Initial State:

Account: [CREATOR], balance: 0xc503, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: init(address), txdata: 0x19ab453c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: proposeAction(address,uint256,bytes,bytes32), txdata: 0xeec8d674ea7b6ffd0000000000000000000000000901d12ebe1b195e5aa8748e62bd773400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020abababababababababababababababababababababababababababababababab, value: 0x0