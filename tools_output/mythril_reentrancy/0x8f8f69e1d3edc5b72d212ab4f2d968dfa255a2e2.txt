==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Ownable
Function name: transferOwnership(address) or transferOwnership(address)
PC address: 445
Estimated Gas Usage: 1948 - 2703
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/e48b57de01837178f9ddc9d286c9c449.sol:33

 (tx.origin == owner));
        _;
    }

    function

--------------------
Initial State:

Account: [CREATOR], balance: 0x3f3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferOwnership(address), txdata: 0xf2fde38b, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AssignRevenue
Function name: setContract(address,address)
PC address: 802
Estimated Gas Usage: 1959 - 2714
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/e48b57de01837178f9ddc9d286c9c449.sol:33

 (tx.origin == owner));
        _;
    }

    function

--------------------
Initial State:

Account: [CREATOR], balance: 0xe3e38, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: setContract(address,address), txdata: 0x2bf6e0a5, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AssignRevenue
Function name: transferRevenue(address,uint256)
PC address: 1227
Estimated Gas Usage: 2041 - 2796
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/e48b57de01837178f9ddc9d286c9c449.sol:33

 (tx.origin == owner));
        _;
    }

    function

--------------------
Initial State:

Account: [CREATOR], balance: 0xe3f39, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferRevenue(address,uint256), txdata: 0x96a97252, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AssignRevenue
Function name: transferRevenue(address,uint256)
PC address: 1518
Estimated Gas Usage: 6658 - 43457
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/e48b57de01837178f9ddc9d286c9c449.sol:58

ount);
        emit RevenueAssign(
            msg.sender,
   

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setContract(address,address), txdata: 0x2bf6e0a5000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: transferRevenue(address,uint256), txdata: 0x96a97252, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssignRevenue
Function name: transferRevenue(address,uint256)
PC address: 1637
Estimated Gas Usage: 6658 - 43457
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/e48b57de01837178f9ddc9d286c9c449.sol:65
Initial State:

Account: [CREATOR], balance: 0x10000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setContract(address,address), txdata: 0x2bf6e0a5000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: transferRevenue(address,uint256), txdata: 0x96a97252, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AssignRevenue
Function name: transferOwnership(address) or transferOwnership(address)
PC address: 1916
Estimated Gas Usage: 2036 - 2791
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/e48b57de01837178f9ddc9d286c9c449.sol:33

 (tx.origin == owner));
        _;
    }

    function

--------------------
Initial State:

Account: [CREATOR], balance: 0xe3f38, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: transferOwnership(address), txdata: 0xf2fde38b, value: 0x0