==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Burner
Function name: fallback
PC address: 639
Estimated Gas Usage: 6848 - 77392
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e926ca422dfa0f4f7d34c1b0593be7d.sol:297

eeeeeeeeeeeeeeeeeeeeee),

            

            // Source amount

            ethToConvert,



            // Destination. Downcast BurnableErc20 to ERC20

            ERC20(destErc20),

            

            // destAddress: this contract

            this,

            

            // maxDestAmount

            maxDestAmount,

            

            // minConversionRate 

            minConversionRate,

            

            // walletId

            0

        );



        // Burn the converted ERC20 tokens

        destErc20.burn(erc20ToBurn);



        return erc20ToBurn;

    }



    /**

    * @notice Sets the KyberNet

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000080000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: burn(uint256,uint256,uint256), txdata: 0x05a1002801, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Burner
Function name: fallback
PC address: 684
Estimated Gas Usage: 6848 - 77392
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e926ca422dfa0f4f7d34c1b0593be7d.sol:357

rkContrac

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000080000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: burn(uint256,uint256,uint256), txdata: 0x05a10028c0, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Burner
Function name: fallback
PC address: 789
Estimated Gas Usage: 6848 - 77392
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e926ca422dfa0f4f7d34c1b0593be7d.sol:357

rkContract(address _kyberNe

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: burn(uint256,uint256,uint256), txdata: 0x05a10028e0, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Burner
Function name: fallback
PC address: 789
Estimated Gas Usage: 6848 - 77392
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e926ca422dfa0f4f7d34c1b0593be7d.sol:357

rkContract(address _kyberNe

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000008000000000010000000000004002000200808000000000000000000000000040, value: 0x0
Caller: [SOMEGUY], function: burn(uint256,uint256,uint256), txdata: 0x05a1002801, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Burner
Function name: fallback
PC address: 789
Estimated Gas Usage: 6848 - 77392
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3e926ca422dfa0f4f7d34c1b0593be7d.sol:357

rkContract(address _kyberNe

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000080000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: burn(uint256,uint256,uint256), txdata: 0x05a10028c0, value: 0x0


