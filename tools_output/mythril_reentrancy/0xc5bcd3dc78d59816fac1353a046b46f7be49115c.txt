==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: WalletRegistry
Function name: build()
PC address: 1044
Estimated Gas Usage: 48679 - 130227
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d989eef8d426dc8c9bf9ab69deb9f09e.sol:281
Initial State:

Account: [CREATOR], balance: 0x41000002000081, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: build(), txdata: 0x8e1a55fc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: WalletRegistry
Function name: build()
PC address: 1097
Estimated Gas Usage: 48679 - 130227
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d989eef8d426dc8c9bf9ab69deb9f09e.sol:281
Initial State:

Account: [CREATOR], balance: 0x41000002000081, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: build(), txdata: 0x8e1a55fc, value: 0x0