==== Delegatecall to user-supplied address ====
SWC ID: 112
Severity: High
Contract: CreateAndAddModules
Function name: createAndAddModules(address,bytes)
PC address: 394
Estimated Gas Usage: 3106 - 74631
The contract delegates execution to another contract with a user-supplied address.
The smart contract delegates execution to a user-supplied address.This could allow an attacker to execute arbitrary code in the context of this contract account and manipulate the state of the contract account or execute actions on its behalf.
--------------------
In file: /tmp/b41e2e02834d9fe4936387b6cb86f8b5.sol:302

eBytesLength, 0x1f), 0x20), 0x20)))
            }
            this.enableModu

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: createAndAddModules(address,bytes), txdata: 0x60df7f58000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000200102020202020202020202020202020202026fffffffffffffffffffffffffc1, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: CreateAndAddModules
Function name: createAndAddModules(address,bytes)
PC address: 394
Estimated Gas Usage: 3106 - 74631
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b41e2e02834d9fe4936387b6cb86f8b5.sol:302

eBytesLength, 0x1f), 0x20), 0x20)))
            }
            this.enableModu

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000100002001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: createAndAddModules(address,bytes), txdata: 0x60df7f5800000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: CreateAndAddModules
Function name: createAndAddModules(address,bytes)
PC address: 438
Estimated Gas Usage: 3106 - 74631
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/b41e2e02834d9fe4936387b6cb86f8b5.sol:307
Initial State:

Account: [CREATOR], balance: 0xf2bb1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: createAndAddModules(address,bytes), txdata: 0x60df7f5800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe8, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CreateAndAddModules
Function name: createAndAddModules(address,bytes)
PC address: 580
Estimated Gas Usage: 3106 - 74631
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/b41e2e02834d9fe4936387b6cb86f8b5.sol:307
Initial State:

Account: [CREATOR], balance: 0x40203, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: createAndAddModules(address,bytes), txdata: 0x60df7f5800000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000, value: 0x0