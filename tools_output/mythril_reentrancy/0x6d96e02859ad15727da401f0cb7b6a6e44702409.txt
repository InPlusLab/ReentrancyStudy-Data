==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FeedCrowdsale
Function name: fallback
PC address: 1297
Estimated Gas Usage: 27363 - 158583
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:507

ion to change the rate of tokens



--------------------
Initial State:

Account: [CREATOR], balance: 0x80002080009, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000010000000000100000100010000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: fallback
PC address: 1382
Estimated Gas Usage: 27363 - 158583
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:509

llet


--------------------
Initial State:

Account: [CREATOR], balance: 0x10c0400080029, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400000000000003, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000001000400000000000000100001000000000200001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: fallback
PC address: 1503
Estimated Gas Usage: 27363 - 158583
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:513

blic onlyOw

--------------------
Initial State:

Account: [CREATOR], balance: 0x10c0400080029, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400000000000003, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000001000400000000000000100001000000000200001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: fallback
PC address: 1522
Estimated Gas Usage: 27363 - 158583
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:513

6 newPrice) public onlyOwner {

     

--------------------
Initial State:

Account: [CREATOR], balance: 0x10c0400080029, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400000000000003, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000001000400000000000000100001000000000200001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 1821
Estimated Gas Usage: 6897 - 77531
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:567
Initial State:

Account: [CREATOR], balance: 0xff7a0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 1900
Estimated Gas Usage: 6897 - 77531
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:567
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 1961
Estimated Gas Usage: 6897 - 77531
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:567
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 2127
Estimated Gas Usage: 6897 - 77531
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:567
Initial State:

Account: [CREATOR], balance: 0xff7a0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 2127
Estimated Gas Usage: 6897 - 77531
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:567
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: getUnsoldTokensBack()
PC address: 2127
Estimated Gas Usage: 6897 - 77531
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:567
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getUnsoldTokensBack(), txdata: 0x047fe8b3, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: fallback
PC address: 3962
Estimated Gas Usage: 27363 - 158583
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:525

et

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x10c0400080029, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400000000000003, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000001000400000000000000100001000000000200001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: FeedCrowdsale
Function name: fallback
PC address: 4038
Estimated Gas Usage: 27363 - 158583
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:525

et

     **/

     

    

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: FeedCrowdsale
Function name: fallback
PC address: 4038
Estimated Gas Usage: 27363 - 158583
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/92920645095e44522fa6e07ce559af14.sol:525

et

     **/

     

    

--------------------
Initial State:

Account: [CREATOR], balance: 0x10c0400080029, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400000000000003, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000001000400000000000000100001000000000200001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0xb1a2bc2ec50000