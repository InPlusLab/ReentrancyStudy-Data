==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YeekAirdropper
Function name: constructor
PC address: 326
Estimated Gas Usage: 19668 - 120532
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:46

s # of people that have 

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000024, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: YeekAirdropper
Function name: constructor
PC address: 385
Estimated Gas Usage: 19668 - 120532
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:46

 //Gets # of people that have 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: constructor
PC address: 392
Estimated Gas Usage: 19668 - 120532
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:43

* 10 ** tokenContract.decimals();
    }

    //Gets # of people that have 

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1041
Estimated Gas Usage: 42456 - 230504
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:57

rUser);
        require(tokenContrac

--------------------
Initial State:

Account: [CREATOR], balance: 0x40040060008a12, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 040404040404040404040404deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1113
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:59

msg.sender]);  //Each

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1118
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:58


        requ

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1180
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:59

ppedU

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1338
Estimated Gas Usage: 42456 - 230504
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:58


        require(!airdroppedUs

--------------------
Initial State:

Account: [CREATOR], balance: 0x40040060008a12, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 040404040404040404040404deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1338
Estimated Gas Usage: 42456 - 230504
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:58


        require(!airdroppedUs

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000002000a013, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1338
Estimated Gas Usage: 42456 - 230504
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:58


        require(!airdroppedUs

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1474
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:59

eive the airdrop one time
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1499
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:63

 = true;
        aird

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1506
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:63

dUsers[msg.sender]  = true;
        aird

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1513
Estimated Gas Usage: 42456 - 230504
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:63

dUsers[msg.sender]  = true;
        aird

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1587
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:64

.length++;
        airdropRecipient

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1601
Estimated Gas Usage: 42456 - 230504
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:64

.length++;
        airdropRecipient

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1606
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:65

cipients.length - 1]= msg.

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1632
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:67

 Dispensed(msg.sender, n

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1637
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:66

     
        emit Dispensed(msg.sender, number

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1665
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:66

     
        emit Dispensed(msg.sender, numberOfTokensPerU

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1718
Estimated Gas Usage: 42456 - 230504
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:66

     
        emit Dispensed(msg.sender, numberOfTokensPerU

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1778
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:68

msg.sender, numberOfT

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1804
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:68

);
    }

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1866
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:71

kens 

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 1899
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:71

to be airdropped
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 2086
Estimated Gas Usage: 42456 - 230504
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:68

);
    }

    //How many tokens are remaining to be airdropped
    f

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 040404040404040404040404deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 2086
Estimated Gas Usage: 42456 - 230504
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:68

);
    }

    //How many tokens are remaining to be airdropped
    f

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: YeekAirdropper
Function name: airdropRecipients(uint256)
PC address: 2202
Estimated Gas Usage: 1080 - 1175
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:36


    event Dispensed(address index

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: airdropRecipients(uint256), txdata: 0x646304a1, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: YeekAirdropper
Function name: tokensRemaining()
PC address: 2716
Estimated Gas Usage: 3716 - 39409
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a84142f0b90ec5ba4a1a8ca7944b577a.sol:76

to suicide and send any accidentally

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0
Caller: [CREATOR], function: tokensRemaining(), txdata: 0xc8b08125, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 2798
Estimated Gas Usage: 42456 - 230504
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state. This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: YeekAirdropper
Function name: withdrawAirdropTokens()
PC address: 2801
Estimated Gas Usage: 42456 - 230504
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state. This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 353535353535353535353535deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawAirdropTokens(), txdata: 0x04903592, value: 0x0