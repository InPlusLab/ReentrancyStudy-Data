==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Airdrop
Function name: drop(address[],uint256[])
PC address: 362
Estimated Gas Usage: 7779 - 78996
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/cb845e0faa386ce90c781c616a4f3e32.sol:129

      require(beneficiaries.length == values.length, "Array lengths of parameters unequal");

        for (uint i = 0; i < beneficiaries.length; i++) {
            require(beneficiaries[i] != address(0), "Zero address received");
            require(getBalance() >= values[i], "Insufficient token balance");

            token.transfer(beneficiaries[i], values[i]);

            emit Airdropped(beneficiaries[i], values[i]);
        }

        return true;
    }

    /**
    * @dev Used to check contract's token balance
    */
    function getBalance() public view returns (uint256 balance) {
       

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, value: 0x0
Caller: [CREATOR], function: drop(address[],uint256[]), txdata: 0xc01ae5d3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc80, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Airdrop
Function name: getBalance()
PC address: 777
Estimated Gas Usage: 2691 - 37959
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/cb845e0faa386ce90c781c616a4f3e32.sol:152

ntract
    */
    function set

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 060606060606060606060606deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getBalance(), txdata: 0x12065fe0, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Airdrop
Function name: drop(address[],uint256[])
PC address: 777
Estimated Gas Usage: 7779 - 78996
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/cb845e0faa386ce90c781c616a4f3e32.sol:152

ntract
    */
    function set

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 606060606060606060606060deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: drop(address[],uint256[]), txdata: 0xc01ae5d3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa080, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Airdrop
Function name: drop(address[],uint256[])
PC address: 2141
Estimated Gas Usage: 7779 - 78996
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/cb845e0faa386ce90c781c616a4f3e32.sol:140

;
   

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: drop(address[],uint256[]), txdata: 0xc01ae5d3fffffffffffffffffffffffeffffffffffffffffffffffffffffffffffffff8080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Airdrop
Function name: drop(address[],uint256[])
PC address: 2397
Estimated Gas Usage: 7779 - 78996
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/cb845e0faa386ce90c781c616a4f3e32.sol:140

;
    }

    /**
    * @dev Used to check c

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 606060606060606060606060deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: drop(address[],uint256[]), txdata: 0xc01ae5d3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa080, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Airdrop
Function name: drop(address[],uint256[])
PC address: 2397
Estimated Gas Usage: 7779 - 78996
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/cb845e0faa386ce90c781c616a4f3e32.sol:140

;
    }

    /**
    * @dev Used to check c

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000008002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001, value: 0x0
Caller: [CREATOR], function: drop(address[],uint256[]), txdata: 0xc01ae5d3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Airdrop
Function name: drop(address[],uint256[])
PC address: 2397
Estimated Gas Usage: 7779 - 78996
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/cb845e0faa386ce90c781c616a4f3e32.sol:140

;
    }

    /**
    * @dev Used to check c

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: drop(address[],uint256[]), txdata: 0xc01ae5d3fffffffffffffffffffffffeffffffffffffffffffffffffffffffffffffff8080, value: 0x0