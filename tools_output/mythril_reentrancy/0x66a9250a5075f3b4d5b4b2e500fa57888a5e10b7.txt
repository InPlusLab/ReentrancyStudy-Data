==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: GlobalGoldCashToken
Function name: mintToken(address,uint256)
PC address: 3587
Estimated Gas Usage: 16200 - 57889
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/4958572f44899268ef7dd1e65d5b116b.sol:443

r public {

        frozenAccount

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: mintToken(address,uint256), txdata: 0x79c65068000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffefffffffffffffffffffffffffffffffffffffffffffffffff4, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: GlobalGoldCashToken
Function name: mintToken(address,uint256)
PC address: 3603
Estimated Gas Usage: 16200 - 57889
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/4958572f44899268ef7dd1e65d5b116b.sol:445

eeze;

        emit FrozenF

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000012, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: mintToken(address,uint256), txdata: 0x79c65068000000000000000000000000ae00000000000000000000000000000000010000fffffffffffffffffffffffffffffffffffffffffffffffff4, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: GlobalGoldCashToken
Function name: approveAndCall(address,uint256,bytes) or approveAndCall(address,uint256,bytes)
PC address: 5081
Estimated Gas Usage: 8173 - 67352
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/4958572f44899268ef7dd1e65d5b116b.sol:285

rn

     */

    function burn(uint256 _value) public returns

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000002004008040b2, value: 0x0