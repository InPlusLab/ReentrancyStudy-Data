==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TrueProfileLogic
Function name: fallback
PC address: 1130
Estimated Gas Usage: 2713 - 38311
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6cd726e895167e6832175eeae89c49b3.sol:418
Initial State:

Account: [CREATOR], balance: 0x4c010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getRevocationReasonId(bytes32), txdata: 0x00d2d89e, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TrueProfileLogic
Function name: isValidSignatureTrueProof(bytes32)
PC address: 1278
Estimated Gas Usage: 7650 - 78989
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6cd726e895167e6832175eeae89c49b3.sol:399

_key);

        // needs to be not re

--------------------
Initial State:

Account: [CREATOR], balance: 0x101080000080800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: isValidSignatureTrueProof(bytes32), txdata: 0x39b2a61f, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TrueProfileLogic
Function name: isValidSignatureTrueProof(bytes32)
PC address: 1419
Estimated Gas Usage: 7650 - 78989
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/6cd726e895167e6832175eeae89c49b3.sol:405

(bytes32 _key) external 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: isValidSignatureTrueProof(bytes32), txdata: 0x39b2a61f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TrueProfileLogic
Function name: isValidSignatureTrueProof(bytes32)
PC address: 1472
Estimated Gas Usage: 7650 - 78989
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/6cd726e895167e6832175eeae89c49b3.sol:405

n getSignature(bytes32 _key) external v

--------------------
Initial State:

Account: [CREATOR], balance: 0x101080000080800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: isValidSignatureTrueProof(bytes32), txdata: 0x39b2a61f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TrueProfileLogic
Function name: isNotRevokedTrueProof(bytes32)
PC address: 1579
Estimated Gas Usage: 2763 - 38361
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6cd726e895167e6832175eeae89c49b3.sol:410

8 v;
        bytes32 r;
        bytes

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000006e080, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: isNotRevokedTrueProof(bytes32), txdata: 0x3a44ab56, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TrueProfileStorage
Function name: stringStorage(bytes32)
PC address: 2506
Estimated Gas Usage: 1528 - 2658
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/6cd726e895167e6832175eeae89c49b3.sol:223

tes32 => int256) public intStorage;

    /**** 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: stringStorage(bytes32), txdata: 0x35f7ff63, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TrueProfileLogic
Function name: getSignature(bytes32)
PC address: 2556
Estimated Gas Usage: 3058 - 39220
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/6cd726e895167e6832175eeae89c49b3.sol:418
Initial State:

Account: [CREATOR], balance: 0xf0400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: getSignature(bytes32), txdata: 0xc4b14e0b, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TrueProfileStorage
Function name: bytesStorage(bytes32)
PC address: 2825
Estimated Gas Usage: 1616 - 2746
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/6cd726e895167e6832175eeae89c49b3.sol:226

s32 _key) external view returns (uint8 v, byt

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: bytesStorage(bytes32), txdata: 0x4a3270d7, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TrueProfileStorage
Function name: getString(bytes32)
PC address: 3577
Estimated Gas Usage: 1827 - 2957
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/6cd726e895167e6832175eeae89c49b3.sol:280

Int(bytes32 _key) external

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x800000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: getString(bytes32), txdata: 0x986e791a, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TrueProfileStorage
Function name: getBytes(bytes32)
PC address: 3895
Estimated Gas Usage: 1893 - 3023
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/6cd726e895167e6832175eeae89c49b3.sol:284

dditional storage ****/
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: getBytes(bytes32), txdata: 0xc031a180, value: 0x0