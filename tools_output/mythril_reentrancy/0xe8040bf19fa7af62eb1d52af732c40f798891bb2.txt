==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Airdrop
Function name: sendTokens(address[],uint256[],address)
PC address: 221
Estimated Gas Usage: 4398 - 81565
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/131500e898f5540b0992f225b824085d.sol:16

kens(address[] addresses, uint256[] _amount, address _tokenAddress) public {
    //require(msg.sender == owner);
    uint256 addressCount = addresses.length;
    uint256 amountCount = _amount.length;
    require(addressCount == amountCount);
    TokenContract tkn = TokenContract(_tokenAddress);
    for (uint256 i = 0; i < addressCount; i++) {
      tkn.transferFrom(msg.sender, addresses[i], _amount[i]);
    }
  }

  function destroyMe()

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sendTokens(address[],uint256[],address), txdata: 0x81baf3abffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc80, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Airdrop
Function name: sendTokens(address[],uint256[],address)
PC address: 645
Estimated Gas Usage: 4398 - 81565
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/131500e898f5540b0992f225b824085d.sol:23

ender, addresses[i], _amount[i]);
    }
  }

  functio

--------------------
Initial State:

Account: [CREATOR], balance: 0x101, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: sendTokens(address[],uint256[],address), txdata: 0x81baf3ab8000000000000010000000000000000000000000000000000000000000000002800000000000000000000000000000000000000000000000000000000000000e000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Airdrop
Function name: sendTokens(address[],uint256[],address)
PC address: 645
Estimated Gas Usage: 4398 - 81565
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/131500e898f5540b0992f225b824085d.sol:23

ender, addresses[i], _amount[i]);
    }
  }

  functio

--------------------
Initial State:

Account: [CREATOR], balance: 0x2010842, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: sendTokens(address[],uint256[],address), txdata: 0x81baf3ab800000000000000000000000000000000000000000000000000000000000000080, value: 0x0


