==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 825
Estimated Gas Usage: 14388 - 155347
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:76

uyTokens(msg.sender, msg.value);
        sendRefTVs(refAdd

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000194, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1135
Estimated Gas Usage: 14388 - 155347
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:82

ce(holder,

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000188, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1250
Estimated Gas Usage: 14388 - 155347
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:82

ce(holder, this);
        uint25

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 020202020202020202020202deadbeefdeadbeefdeadbeefdeadbeefdeadbeef02020202020202020202020202020202020202020202020202020202020202040202020202020202020202020202020202020202020202020202020202020280f8, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1250
Estimated Gas Usage: 14388 - 155347
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:82

ce(holder, this);
        uint25

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000009a600, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000181, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1250
Estimated Gas Usage: 14388 - 155347
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:82

ce(holder, this);
        uint25

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000188, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1294
Estimated Gas Usage: 14388 - 155347
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:83

saleContra

--------------------
Initial State:

Account: [CREATOR], balance: 0x180000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000010f1, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1297
Estimated Gas Usage: 14388 - 155347
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:83

ate())

--------------------
Initial State:

Account: [CREATOR], balance: 0x180000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000010f1, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1409
Estimated Gas Usage: 14388 - 155347
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:83

saleContract.currentRate()) * refP

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 020202020202020202020202deadbeefdeadbeefdeadbeefdeadbeefdeadbeef02020202020202020202020202020202020202020202020202020202020202040202020202020202020202020202020202020202020202020202020202020280f8, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1409
Estimated Gas Usage: 14388 - 155347
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:83

saleContract.currentRate()) * refP

--------------------
Initial State:

Account: [CREATOR], balance: 0x180000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000010f1, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1453
Estimated Gas Usage: 14388 - 155347
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:84

shold) && all

--------------------
Initial State:

Account: [CREATOR], balance: 0x180000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000010f1, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1456
Estimated Gas Usage: 14388 - 155347
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:84

sses[refAddress] ||

--------------------
Initial State:

Account: [CREATOR], balance: 0x180000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000010f1, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1558
Estimated Gas Usage: 14388 - 155347
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:84

sses[refAddress] || balance >= TV

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000194, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1558
Estimated Gas Usage: 14388 - 155347
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:84

sses[refAddress] || balance >= TV

--------------------
Initial State:

Account: [CREATOR], balance: 0x180000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000010f1, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1636
Estimated Gas Usage: 14388 - 155347
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:85

          bool successful =

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000188, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TVRefCrowdsale
Function name: buyTokens(address)
PC address: 1653
Estimated Gas Usage: 14388 - 155347
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2d7fd9fdcc7a1ceedd5f0fa8ae9a5a8b.sol:85

nsferFrom(h

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000188, value: 0x0
Caller: [SOMEGUY], function: buyTokens(address), txdata: 0xec8ac4d8, value: 0x0


