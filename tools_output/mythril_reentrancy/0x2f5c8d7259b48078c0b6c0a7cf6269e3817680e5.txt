==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Refund
Function name: fallback
PC address: 186
Estimated Gas Usage: 80 - 175
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/541a017c87aa99a7b86394ea8b0391d4.sol:165

> 0" );

		

		uint256 money = refunds[msg.sender];

		requir

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Refund
Function name: fallback
PC address: 422
Estimated Gas Usage: 2549 - 37536
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/541a017c87aa99a7b86394ea8b0391d4.sol:178


		xcc.originBurn(xcc_amount);

		msg.sende

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Refund
Function name: fallback
PC address: 1187
Estimated Gas Usage: 964 - 1719
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/541a017c87aa99a7b86394ea8b0391d4.sol:97

rship(address _newOwner) public onlyOwner {

		requ

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setRefund(address), txdata: 0x2d806cdd, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Refund
Function name: cancelRefund(address)
PC address: 1337
Estimated Gas Usage: 1013 - 1768
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/541a017c87aa99a7b86394ea8b0391d4.sol:97

rship(address _newOwner) public onlyOwner {

		requ

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: cancelRefund(address), txdata: 0x4ab89400, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Refund
Function name: withdrawTokens(address,address,uint256)
PC address: 1611
Estimated Gas Usage: 1056 - 1811
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/541a017c87aa99a7b86394ea8b0391d4.sol:97

rship(address _newOwner) public onlyOwner {

		requ

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawTokens(address,address,uint256), txdata: 0x5e35359e, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Refund
Function name: withdrawTokens(address,address,uint256)
PC address: 1800
Estimated Gas Usage: 2841 - 39524
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/541a017c87aa99a7b86394ea8b0391d4.sol:227
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdrawTokens(address,address,uint256), txdata: 0x5e35359e000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Refund
Function name: acceptOwnership()
PC address: 1867
Estimated Gas Usage: 1023 - 1448
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/541a017c87aa99a7b86394ea8b0391d4.sol:112


		owner = msg.sender;

		newOwner = address(0);

	}

}



--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: acceptOwnership(), txdata: 0x79ba5097, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Refund
Function name: transferOwnership(address)
PC address: 2129
Estimated Gas Usage: 1164 - 1919
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/541a017c87aa99a7b86394ea8b0391d4.sol:97

rship(address _newOwner) public onlyOwner {

		requ

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38b, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: Refund
Function name: withdraw(address,uint256)
PC address: 2352
Estimated Gas Usage: 1192 - 1947
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/541a017c87aa99a7b86394ea8b0391d4.sol:97

rship(address _newOwner) public onlyOwner {

		requ

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdraw(address,uint256), txdata: 0xf3fef3a3, value: 0x0