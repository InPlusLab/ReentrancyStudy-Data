==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenChanger
Function name: constructor
PC address: 259
Estimated Gas Usage: 38923 - 186115
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/e5eb8fde0d6a1d32c41ae01c85559e3a.sol:588

n address
   

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenRetriever
Function name: retrieveTokens(address) or retrieveTokens(address) or retrieveTokens(address)
PC address: 302
Estimated Gas Usage: 3460 - 73150
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/e5eb8fde0d6a1d32c41ae01c85559e3a.sol:368

  * Called by the observed to

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000400000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: retrieveTokens(address), txdata: 0xac4ddd9f, value: 0x0
Caller: [ATTACKER], function: retrieveTokens(address), txdata: 0xac4ddd9f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenRetriever
Function name: retrieveTokens(address) or retrieveTokens(address) or retrieveTokens(address)
PC address: 511
Estimated Gas Usage: 3460 - 73150
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/e5eb8fde0d6a1d32c41ae01c85559e3a.sol:369

e token observer when tokens are received
     *

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000400000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: retrieveTokens(address), txdata: 0xac4ddd9f, value: 0x0
Caller: [ATTACKER], function: retrieveTokens(address), txdata: 0xac4ddd9f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TokenRetriever
Function name: retrieveTokens(address) or retrieveTokens(address) or retrieveTokens(address)
PC address: 511
Estimated Gas Usage: 3460 - 73150
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/e5eb8fde0d6a1d32c41ae01c85559e3a.sol:369

e token observer when tokens are received
     *

--------------------
Initial State:

Account: [CREATOR], balance: 0x2080000000000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: retrieveTokens(address), txdata: 0xac4ddd9f, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenChanger
Function name: calculateFee(uint256) or calculateFee(uint256) or calculateFee(uint256)
PC address: 1042
Estimated Gas Usage: 2860 - 3236
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/e5eb8fde0d6a1d32c41ae01c85559e3a.sol:692

precision;
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080, value: 0x0
Caller: [SOMEGUY], function: calculateFee(uint256), txdata: 0x99a5d74701, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KATMTokenChanger
Function name: calculateFee(uint256) or calculateFee(uint256) or calculateFee(uint256)
PC address: 2361
Estimated Gas Usage: 2992 - 3368
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/e5eb8fde0d6a1d32c41ae01c85559e3a.sol:692

precision;
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: calculateFee(uint256), txdata: 0x99a5d7475c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: KATMTokenChanger
Function name: retrieveTokens(address) or retrieveTokens(address) or retrieveTokens(address)
PC address: 3867
Estimated Gas Usage: 4717 - 74737
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/e5eb8fde0d6a1d32c41ae01c85559e3a.sol:368

  * Called by the observed to

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: retrieveTokens(address), txdata: 0xac4ddd9f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: KATMTokenChanger
Function name: retrieveTokens(address) or retrieveTokens(address) or retrieveTokens(address)
PC address: 4076
Estimated Gas Usage: 4717 - 74737
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/e5eb8fde0d6a1d32c41ae01c85559e3a.sol:369

e token observer when tokens are received
     *

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: retrieveTokens(address), txdata: 0xac4ddd9f000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: KATMTokenChanger
Function name: retrieveTokens(address) or retrieveTokens(address) or retrieveTokens(address)
PC address: 4076
Estimated Gas Usage: 4717 - 74737
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/e5eb8fde0d6a1d32c41ae01c85559e3a.sol:369

e token observer when tokens are received
     *

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: retrieveTokens(address), txdata: 0xac4ddd9f, value: 0x0