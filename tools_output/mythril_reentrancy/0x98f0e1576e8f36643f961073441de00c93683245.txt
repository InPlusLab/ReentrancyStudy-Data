==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GOKUAirdrop
Function name: airdropAll()
PC address: 1534
Estimated Gas Usage: 9488 - 64954
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/83acff5312b25f4750f64592c7ccfd18.sol:85
Initial State:

Account: [CREATOR], balance: 0x201630ffed, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAirdropSupply(address,uint256), txdata: 0x005b31f7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000008000000000000000000000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: airdropAll(), txdata: 0x660c5075, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GOKUAirdrop
Function name: airdrop(uint256)
PC address: 2275
Estimated Gas Usage: 10748 - 66782
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/83acff5312b25f4750f64592c7ccfd18.sol:79

external
    {
     

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAirdropSupply(address,uint256), txdata: 0x005b31f7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef8000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: airdrop(uint256), txdata: 0x97dc4a130000000000000000000000010000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GOKUAirdrop
Function name: airdrop(uint256)
PC address: 2354
Estimated Gas Usage: 10748 - 66782
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/83acff5312b25f4750f64592c7ccfd18.sol:78

n airdropAll()
        external
    {
        require(

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAirdropSupply(address,uint256), txdata: 0x005b31f7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef8000000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [ATTACKER], function: airdrop(uint256), txdata: 0x97dc4a130000000000000000000000010000000000000000000000000000000000000000, value: 0x0