==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: standardToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 374
Estimated Gas Usage: 10342 - 72888
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/9d624fb42af00d610fd5ea59283d9006.sol:299

ecipient(_spender);              // Cast spender to tokenRecipient contract

        approve(_spender, _value);                                      // Set approval to contract for _value

        spender.receiveApproval(msg.sender, _value, this, _extraData);  // Raise method on _spender contract

        return true;

    }



    /* A contract attempts to get the coins */

    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {

--------------------
Initial State:

Account: [CREATOR], balance: 0x2080000000002004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca5100000000000000000000000001010401010101010101010101010101010140400000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KODB
Function name: approveAndCall(address,uint256,bytes)
PC address: 724
Estimated Gas Usage: 10474 - 73020
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/9d624fb42af00d610fd5ea59283d9006.sol:299

ecipient(_spender);              // Cast spender to tokenRecipient contract

        approve(_spender, _value);                                      // Set approval to contract for _value

        spender.receiveApproval(msg.sender, _value, this, _extraData);  // Raise method on _spender contract

        return true;

    }



    /* A contract attempts to get the coins */

    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {

--------------------
Initial State:

Account: [CREATOR], balance: 0x180000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca5180808080808080808080808004042002080208001010101000040200400404000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: standardToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1373
Estimated Gas Usage: 10342 - 72888
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/9d624fb42af00d610fd5ea59283d9006.sol:311

attempts to get the coins */

    function transferFrom(addre

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000040001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: KODB
Function name: approveAndCall(address,uint256,bytes)
PC address: 2141
Estimated Gas Usage: 10474 - 73020
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/9d624fb42af00d610fd5ea59283d9006.sol:311

attempts to get the coins */

    function transferFrom(addre

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51020202020202020202020202deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0