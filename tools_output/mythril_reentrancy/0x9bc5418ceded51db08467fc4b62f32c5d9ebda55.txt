==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Alice
Function name: initErc20Deal(bytes32,uint256,address,bytes20,bytes20,address)
PC address: 1313
Estimated Gas Usage: 16789 - 128888
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/8bb6262002ddf0f10155403ba7112676.sol:77

h,
      _amount,
      _tokenAddress
    );
    deals[_dealId] = Deal(
      dealHash,
      DealState.Initialized
    );

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initErc20Deal(bytes32,uint256,address,bytes20,bytes20,address), txdata: 0x184db3bf0000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010100000000000000000000000001010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Alice
Function name: initErc20Deal(bytes32,uint256,address,bytes20,bytes20,address)
PC address: 1730
Estimated Gas Usage: 16789 - 128888
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/8bb6262002ddf0f10155403ba7112676.sol:89

ayment(
    bytes32 _dealId,
    uint _amount,
    add

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initErc20Deal(bytes32,uint256,address,bytes20,bytes20,address), txdata: 0x184db3bf00000000000000000000000000000000000000000000000000000000000000000101010101010101010101010101010101010101010101010101010101010101000000000000000000000000010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Alice
Function name: initErc20Deal(bytes32,uint256,address,bytes20,bytes20,address)
PC address: 1730
Estimated Gas Usage: 16789 - 128888
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/8bb6262002ddf0f10155403ba7112676.sol:89

ayment(
    bytes32 _dealId,
    uint _amount,
    add

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: initErc20Deal(bytes32,uint256,address,bytes20,bytes20,address), txdata: 0x184db3bf0000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101010101010101010101010100000000000000000000000001010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Alice
Function name: initEthDeal(bytes32,address,bytes20,bytes20)
PC address: 3317
Estimated Gas Usage: 15022 - 92181
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/8bb6262002ddf0f10155403ba7112676.sol:53

    _bob,
      _bobHash,
      msg.value,
      address(0)
    );
    deals[_dealId] = Deal(
      dealHash,
      DealS

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initEthDeal(bytes32,address,bytes20,bytes20), txdata: 0x47c7b6e2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x1

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Alice
Function name: deals(bytes32)
PC address: 3559
Estimated Gas Usage: 2141 - 3462
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/8bb6262002ddf0f10155403ba7112676.sol:39

;

  function Alice() { }

  function 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: initErc20Deal(bytes32,uint256,address,bytes20,bytes20,address), txdata: 0x184db3bf0000000000000000000000000000000000000000000000000000000000000000010101010101010101010101010101010101010101014001010101010101010100000000000000000000000001010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, value: 0x0
Caller: [CREATOR], function: deals(bytes32), txdata: 0x81cd872a, value: 0x0