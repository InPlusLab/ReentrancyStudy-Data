==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: LotteryToken
Function name: distributeToken(address[],uint256)
PC address: 4534
Estimated Gas Usage: 16889 - 62317
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/64da3f7aa6e791df26c1ef38134a9c2e.sol:127

       }
    }

    func

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distributeToken(address[],uint256), txdata: 0xa9c7648fc7010008600303f00000000001176203ffffffffffffffffffffffffffffffe211, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: LotteryToken
Function name: distributeToken(address[],uint256)
PC address: 4634
Estimated Gas Usage: 16889 - 62317
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/64da3f7aa6e791df26c1ef38134a9c2e.sol:130

payable {
        revert();
   

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distributeToken(address[],uint256), txdata: 0xa9c7648f80a600000020000000000000000000000000000000000000000000000000000090, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: LotteryToken
Function name: transferAnyERC20Token(address,uint256)
PC address: 5830
Estimated Gas Usage: 3992 - 39873
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/64da3f7aa6e791df26c1ef38134a9c2e.sol:137
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferAnyERC20Token(address,uint256), txdata: 0xdc39d06d800000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0