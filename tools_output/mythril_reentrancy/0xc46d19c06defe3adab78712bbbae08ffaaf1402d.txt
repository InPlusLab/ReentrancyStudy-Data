==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: WOMG
Function name: name()
PC address: 770
Estimated Gas Usage: 2350 - 4091
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/59abbc5dfaad22b737385a9a42ad407e.sol:209

drawal(address indexed _tokenHolder, u

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: name(), txdata: 0x06fdde03, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: WOMG
Function name: withdraw(uint256)
PC address: 1613
Estimated Gas Usage: 10805 - 66808
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/59abbc5dfaad22b737385a9a42ad407e.sol:265

unt) public returns (bool) {

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x10004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdraw(uint256), txdata: 0x2e1a7d4d0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: WOMG
Function name: symbol()
PC address: 1742
Estimated Gas Usage: 2371 - 4112
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/59abbc5dfaad22b737385a9a42ad407e.sol:209

nt);



    mapping (address =>

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000002020204, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: WOMG
Function name: deposit(uint256)
PC address: 1960
Estimated Gas Usage: 9949 - 65857
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/59abbc5dfaad22b737385a9a42ad407e.sol:245

equire(balanceOf[msg.sender] >= _amount);

        b

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000100080000a01, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 606060606060606060606060deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: deposit(uint256), txdata: 0xb6b55f25851900e30d5612326c011a10490220480010117023060480812860a110000800, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: WOMG
Function name: deposit(uint256)
PC address: 1995
Estimated Gas Usage: 9949 - 65857
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/59abbc5dfaad22b737385a9a42ad407e.sol:247

sender].sub(_amount);

--------------------
Initial State:

Account: [CREATOR], balance: 0xc0100000842, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d2d2d2d2d2d2d2d2d2d2d2d2deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit(uint256), txdata: 0xb6b55f2585acd240401709254100408000ad86ba77c738f1a14840a104380112410389a1, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: WOMG
Function name: deposit(uint256)
PC address: 2037
Estimated Gas Usage: 9949 - 65857
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/59abbc5dfaad22b737385a9a42ad407e.sol:247

sender] = balanceOf[msg.sender].sub(_amount);

        omg

--------------------
Initial State:

Account: [CREATOR], balance: 0xc0100000842, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d2d2d2d2d2d2d2d2d2d2d2d2deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: deposit(uint256), txdata: 0xb6b55f2585acd240401709254100408000ad86ba77c738f1a14840a104380112410389a1, value: 0x0