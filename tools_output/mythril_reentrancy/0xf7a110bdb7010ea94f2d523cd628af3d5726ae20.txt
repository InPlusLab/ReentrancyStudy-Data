==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenSale
Function name: withdrawTokens(address,uint256)
PC address: 2199
Estimated Gas Usage: 3699 - 39392
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a3eb3949f0515b451a0a079386050451.sol:692

uyer, uint256 _amount) onlyRC pub

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawTokens(address,uint256), txdata: 0x06b091f9, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: addMeByRC()
PC address: 3984
Estimated Gas Usage: 1209 - 1634
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a3eb3949f0515b451a0a079386050451.sol:673

ontract = tokenInterface(_t

--------------------
Initial State:

Account: [CREATOR], balance: 0x40084400000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: addMeByRC(), txdata: 0x66b52b93, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: setRateContract(address)
PC address: 4264
Estimated Gas Usage: 1293 - 1718
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a3eb3949f0515b451a0a079386050451.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setRateContract(address), txdata: 0x6b96668f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenSale
Function name: tokenValueInEther(uint256)
PC address: 4543
Estimated Gas Usage: 3387 - 39175
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a3eb3949f0515b451a0a079386050451.sol:608

 {
        require( rc[msg.s

--------------------
Initial State:

Account: [CREATOR], balance: 0x2024023, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: tokenValueInEther(uint256), txdata: 0x7b4139850000000000000010, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: setTime(uint256,uint256) or setTime(uint256,uint256) or setTime(uint256,uint256)
PC address: 4776
Estimated Gas Usage: 1402 - 1827
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a3eb3949f0515b451a0a079386050451.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTime(uint256,uint256), txdata: 0xa0355eca, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: setWalletAddress(address)
PC address: 5261
Estimated Gas Usage: 1425 - 1850
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a3eb3949f0515b451a0a079386050451.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWalletAddress(address), txdata: 0xac1a386a, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: setTokenContract(address)
PC address: 5420
Estimated Gas Usage: 1447 - 1872
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a3eb3949f0515b451a0a079386050451.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTokenContract(address), txdata: 0xbbcd5bbe, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: setAdvisorFee(uint256)
PC address: 5579
Estimated Gas Usage: 1463 - 1888
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a3eb3949f0515b451a0a079386050451.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAdvisorFee(uint256), txdata: 0xcd1ce6d5, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: transferOwnership(address) or transferOwnership(address)
PC address: 5718
Estimated Gas Usage: 1513 - 1938
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a3eb3949f0515b451a0a079386050451.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38b, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: TokenSale
Function name: withdraw(address,uint256) or withdraw(address,uint256) or withdraw(address,uint256)
PC address: 6059
Estimated Gas Usage: 1562 - 1987
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a3eb3949f0515b451a0a079386050451.sol:61

ev Allows the current owner 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: withdraw(address,uint256), txdata: 0xf3fef3a3, value: 0x0