==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SignalPylon
Function name: sendSignal(bytes32)
PC address: 654
Estimated Gas Usage: 26285 - 143271
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/65af54ddc467209aa933321243c6c98b.sol:58

alValue > 0);

        // Append t

--------------------
Initial State:

Account: [CREATOR], balance: 0x20c104000006292a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 474747474747474747474747deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: sendSignal(bytes32), txdata: 0x66ca2bc0, value: 0x0
Caller: [SOMEGUY], function: sendSignal(bytes32), txdata: 0x66ca2bc0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SignalPylon
Function name: sendSignal(bytes32)
PC address: 753
Estimated Gas Usage: 26285 - 143271
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/65af54ddc467209aa933321243c6c98b.sol:63

          r

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 474747474747474747474747deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: sendSignal(bytes32), txdata: 0x66ca2bc0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SignalPylon
Function name: sendSignal(bytes32)
PC address: 784
Estimated Gas Usage: 26285 - 143271
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/65af54ddc467209aa933321243c6c98b.sol:62

nder,
            register: _register,
            value: signalValue
        });

        // Update signal count index
        signalCount += 1

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 474747474747474747474747deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: sendSignal(bytes32), txdata: 0x66ca2bc0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SignalPylon
Function name: sendSignal(bytes32)
PC address: 837
Estimated Gas Usage: 26285 - 143271
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/65af54ddc467209aa933321243c6c98b.sol:62

nder,
            register: _register,
            value: signalValue
        });

        // Update signal count index
        signalCount += 1

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 474747474747474747474747deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: sendSignal(bytes32), txdata: 0x66ca2bc0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SignalPylon
Function name: sendSignal(bytes32)
PC address: 854
Estimated Gas Usage: 26285 - 143271
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/65af54ddc467209aa933321243c6c98b.sol:62

nder,
            register: _register,
            value: signalValue
        });

        // Update signal count index
        signalCount += 1

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 474747474747474747474747deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: sendSignal(bytes32), txdata: 0x66ca2bc0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SignalPylon
Function name: sendSignal(bytes32)
PC address: 864
Estimated Gas Usage: 26285 - 143271
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/65af54ddc467209aa933321243c6c98b.sol:62

nder,
            register: _register,
            value: signalValue
        });

        // Update signal count index
        signalCount += 1

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 474747474747474747474747deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: sendSignal(bytes32), txdata: 0x66ca2bc0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SignalPylon
Function name: sendSignal(bytes32)
PC address: 876
Estimated Gas Usage: 26285 - 143271
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/65af54ddc467209aa933321243c6c98b.sol:71

SignalOutput(msg

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 474747474747474747474747deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: sendSignal(bytes32), txdata: 0x66ca2bc0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SignalPylon
Function name: sendSignal(bytes32)
PC address: 883
Estimated Gas Usage: 26285 - 143271
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/65af54ddc467209aa933321243c6c98b.sol:71

SignalOutput(msg

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 474747474747474747474747deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: sendSignal(bytes32), txdata: 0x66ca2bc0, value: 0x0