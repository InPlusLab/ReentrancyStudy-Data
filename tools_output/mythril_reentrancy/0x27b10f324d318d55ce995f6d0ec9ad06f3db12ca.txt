==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ExoTokensMarketSimple
Function name: depositERC20Token(uint256)
PC address: 1345
Estimated Gas Usage: 5403 - 75567
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:85

ansferFrom(msg.sender, this, _exo_am

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: depositERC20Token(uint256), txdata: 0x90f10acf, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ExoTokensMarketSimple
Function name: depositERC20Token(uint256)
PC address: 1419
Estimated Gas Usage: 5403 - 75567
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:91

unction


--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: depositERC20Token(uint256), txdata: 0x90f10acf, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ExoTokensMarketSimple
Function name: depositERC20Token(uint256)
PC address: 1665
Estimated Gas Usage: 5403 - 75567
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:91

unction

    // All of the ETH included in the TX is

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: depositERC20Token(uint256), txdata: 0x90f10acf, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ExoTokensMarketSimple
Function name: depositERC20Token(uint256)
PC address: 1665
Estimated Gas Usage: 5403 - 75567
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:91

unction

    // All of the ETH included in the TX is

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487, value: 0x0
Caller: [CREATOR], function: depositERC20Token(uint256), txdata: 0x90f10acf, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ExoTokensMarketSimple
Function name: depositERC20Token(uint256)
PC address: 1665
Estimated Gas Usage: 5403 - 75567
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:91

unction

    // All of the ETH included in the TX is

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: depositERC20Token(uint256), txdata: 0x90f10acf, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ExoTokensMarketSimple
Function name: withdrawERC20Tokens(uint256)
PC address: 2067
Estimated Gas Usage: 3740 - 39152
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:123

   function withdrawEther() public 

--------------------
Initial State:

Account: [CREATOR], balance: 0x801f, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawERC20Tokens(uint256), txdata: 0x9a19276e, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ExoTokensMarketSimple
Function name: getERC20Balance()
PC address: 2435
Estimated Gas Usage: 2845 - 38113
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:81

o_amount) public  {

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getERC20Balance(), txdata: 0xc3736fe6, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ExoTokensMarketSimple
Function name: BuyTokens()
PC address: 2810
Estimated Gas Usage: 6205 - 76179
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:103

re(exo_balance >= tokens

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: BuyTokens(), txdata: 0xd81111ab, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ExoTokensMarketSimple
Function name: BuyTokens()
PC address: 2871
Estimated Gas Usage: 6205 - 76179
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:105

   require(E

--------------------
Initial State:

Account: [CREATOR], balance: 0x203, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: BuyTokens(), txdata: 0xd81111ab, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ExoTokensMarketSimple
Function name: BuyTokens()
PC address: 3000
Estimated Gas Usage: 6205 - 76179
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:111

ens

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x203, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: BuyTokens(), txdata: 0xd81111ab, value: 0x1

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ExoTokensMarketSimple
Function name: BuyTokens()
PC address: 3194
Estimated Gas Usage: 6205 - 76179
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:111

ens

    function withdrawERC20Tokens(uint 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: BuyTokens(), txdata: 0xd81111ab, value: 0x1

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ExoTokensMarketSimple
Function name: BuyTokens()
PC address: 3194
Estimated Gas Usage: 6205 - 76179
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:111

ens

    function withdrawERC20Tokens(uint 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487, value: 0x0
Caller: [SOMEGUY], function: BuyTokens(), txdata: 0xd81111ab, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ExoTokensMarketSimple
Function name: BuyTokens()
PC address: 3194
Estimated Gas Usage: 6205 - 76179
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/94b0db979c59ee5df4c58e67cb72ef5f.sol:111

ens

    function withdrawERC20Tokens(uint 

--------------------
Initial State:

Account: [CREATOR], balance: 0x203, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setERC20Token(address), txdata: 0xde562487000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: BuyTokens(), txdata: 0xd81111ab, value: 0x1