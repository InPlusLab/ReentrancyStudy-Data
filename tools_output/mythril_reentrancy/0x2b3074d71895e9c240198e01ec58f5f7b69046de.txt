==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: RewardsDistribution
Function name: distributeReward(address,uint256)
PC address: 1040
Estimated Gas Usage: 8966 - 117147
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/77485b4796eb2f889c874cfc383c2296.sol:121

h tokens to distribute"
        );

        //

--------------------
Initial State:

Account: [CREATOR], balance: 0x40080000000000081, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101020101010101010101010101010101010101000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: distributeReward(address,uint256), txdata: 0x1ec8bb8c020202020202020202020202014001100101010101040401018001010101011001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: RewardsDistribution
Function name: distributeReward(address,uint256)
PC address: 1246
Estimated Gas Usage: 8966 - 117147
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/77485b4796eb2f889c874cfc383c2296.sol:126

 it how many 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1010000000000a1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010102010101010101010102010101010101010101010101010101010101010101aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: distributeReward(address,uint256), txdata: 0x1ec8bb8c020202020202020202020202014001010180048001010101010101100101020110, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: RewardsDistribution
Function name: distributeReward(address,uint256)
PC address: 1357
Estimated Gas Usage: 8966 - 117147
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/77485b4796eb2f889c874cfc383c2296.sol:126

 inform it how many reward token its received.
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x40080000000000081, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101020101010101010101010101010101010101000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: distributeReward(address,uint256), txdata: 0x1ec8bb8c020202020202020202020202014001100101010101040401018001010101011001, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: RewardsDistribution
Function name: distributeReward(address,uint256)
PC address: 1357
Estimated Gas Usage: 8966 - 117147
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/77485b4796eb2f889c874cfc383c2296.sol:126

 inform it how many reward token its received.
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000000105, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101080101011001040101010101010101010101000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: distributeReward(address,uint256), txdata: 0x1ec8bb8c000000000000000000000000010101010101010101010101010101010101010102, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: RewardsDistribution
Function name: distributeReward(address,uint256)
PC address: 1357
Estimated Gas Usage: 8966 - 117147
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/77485b4796eb2f889c874cfc383c2296.sol:126

 inform it how many reward token its received.
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x1010000000000a1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010102010101010101010102010101010101010101010101010101010101010101aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: distributeReward(address,uint256), txdata: 0x1ec8bb8c020202020202020202020202014001010180048001010101010101100101020110, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: RewardsDistribution
Function name: distributeReward(address,uint256)
PC address: 1615
Estimated Gas Usage: 8966 - 117147
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/77485b4796eb2f889c874cfc383c2296.sol:131

racts that do not impleme

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101010101010101010101010101000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe00000000000000000000000001, value: 0x0
Caller: [CREATOR], function: distributeReward(address,uint256), txdata: 0x1ec8bb8c000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef08, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: RewardsDistribution
Function name: distributeReward(address,uint256)
PC address: 1615
Estimated Gas Usage: 8966 - 117147
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/77485b4796eb2f889c874cfc383c2296.sol:131

racts that do not impleme

--------------------
Initial State:

Account: [CREATOR], balance: 0x1010000000000a1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0101010101010101010101010102010101010101010102010101010101010101010101010101010101010101aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: distributeReward(address,uint256), txdata: 0x1ec8bb8c020202020202020202020202014001010180048001010101010101100101020110, value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: RewardsDistribution
Function name: distributeReward(address,uint256)
PC address: 1615
Estimated Gas Usage: 8966 - 117147
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: /tmp/77485b4796eb2f889c874cfc383c2296.sol:131

racts that do not impleme

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101014001040101010101010101010101000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: distributeReward(address,uint256), txdata: 0x1ec8bb8c000000000000000000000000010101010101010101010101010101010101010101, value: 0x0