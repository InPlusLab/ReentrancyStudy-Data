==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ExoTokensMarketSimple
Function name: depositERC20Token(uint256)
PC address: 781
Estimated Gas Usage: 5190 - 75354
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/84fd94d224ddee4d964954ca718b825c.sol:89

 functio

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: depositERC20Token(uint256), txdata: 0x90f10acf, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ExoTokensMarketSimple
Function name: depositERC20Token(uint256)
PC address: 896
Estimated Gas Usage: 5190 - 75354
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/84fd94d224ddee4d964954ca718b825c.sol:89

 function

    // All of the ETH included in the TX 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: depositERC20Token(uint256), txdata: 0x90f10acf, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ExoTokensMarketSimple
Function name: depositERC20Token(uint256)
PC address: 896
Estimated Gas Usage: 5190 - 75354
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/84fd94d224ddee4d964954ca718b825c.sol:89

 function

    // All of the ETH included in the TX 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: depositERC20Token(uint256), txdata: 0x90f10acf, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: ExoTokensMarketSimple
Function name: BuyTokens()
PC address: 1571
Estimated Gas Usage: 3564 - 38551
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/84fd94d224ddee4d964954ca718b825c.sol:99

ontract");

        uint2

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: BuyTokens(), txdata: 0xd81111ab, value: 0x0