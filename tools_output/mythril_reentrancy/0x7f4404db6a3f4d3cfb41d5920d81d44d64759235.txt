==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenERC20
Function name: fallback
PC address: 829
Estimated Gas Usage: 2330 - 4071
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/4ca7d83c556d3c2439d388cb6b70cdc3.sol:101

ublic decimals = 8;

 

    uint256 p

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: name(), txdata: 0x06fdde03, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Yumerium
Function name: fallback
PC address: 1264
Estimated Gas Usage: 2330 - 4071
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/4ca7d83c556d3c2439d388cb6b70cdc3.sol:101

ublic decimals = 8;

 

    uint256 p

--------------------
Initial State:

Account: [CREATOR], balance: 0x440000082, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: name(), txdata: 0x06fdde03, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenERC20
Function name: symbol()
PC address: 1528
Estimated Gas Usage: 2506 - 4247
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/4ca7d83c556d3c2439d388cb6b70cdc3.sol:105

ply = 808274854 * 10 ** uint

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenERC20
Function name: approveAndCall(address,uint256,bytes)
PC address: 1886
Estimated Gas Usage: 8014 - 69503
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/4ca7d83c556d3c2439d388cb6b70cdc3.sol:546

Of[msg.sender] -= _value;            // Subtract from the sen

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000100050001050a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Yumerium
Function name: mintToken(address,uint256)
PC address: 2080
Estimated Gas Usage: 16203 - 64382
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/4ca7d83c556d3c2439d388cb6b70cdc3.sol:861
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: mintToken(address,uint256), txdata: 0x79c650680000000000000000000000000901d12ebe1b195e5aa8748e62bd7734ae19b51fffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Yumerium
Function name: mintToken(address,uint256)
PC address: 2088
Estimated Gas Usage: 16203 - 64382
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/4ca7d83c556d3c2439d388cb6b70cdc3.sol:861
Initial State:

Account: [CREATOR], balance: 0x1000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: mintToken(address,uint256), txdata: 0x79c650680000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Yumerium
Function name: symbol()
PC address: 2446
Estimated Gas Usage: 2588 - 4329
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/4ca7d83c556d3c2439d388cb6b70cdc3.sol:105

ply = 808274854 * 10 ** uint

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: symbol(), txdata: 0x95d89b41, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Yumerium
Function name: approveAndCall(address,uint256,bytes)
PC address: 2824
Estimated Gas Usage: 8124 - 69613
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/4ca7d83c556d3c2439d388cb6b70cdc3.sol:546

Of[msg.sender] -= _value;            // Subtract from the sen

--------------------
Initial State:

Account: [CREATOR], balance: 0x40100000402040820, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0