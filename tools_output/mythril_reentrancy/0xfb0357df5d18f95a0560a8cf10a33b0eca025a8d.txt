==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: COSHATokenCNY
Function name: TokenERC20(uint256,string,string)
PC address: 3146
Estimated Gas Usage: 31101 - 119294
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/7974b2930dd71833c61b5dfd7c9982d0.sol:59

 + uint256(decimals));  // Update total supply wit

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000007000c37, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: TokenERC20(uint256,string,string), txdata: 0x9dbf008704, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: COSHATokenCNY
Function name: approveAndCall(address,uint256,bytes)
PC address: 4063
Estimated Gas Usage: 8017 - 67196
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
Initial State:

Account: [CREATOR], balance: 0x40101, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000082, value: 0x0