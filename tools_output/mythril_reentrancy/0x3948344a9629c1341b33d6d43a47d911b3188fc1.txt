==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: StandardToken
Function name: multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[])
PC address: 325
Estimated Gas Usage: 791 - 6713
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a01953c55d8bdcef71f30a522a95c8ad.sol:58

eturns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transfer(_to[i], _value[i]))
                return false;
        }

        return true;
    }

    function multiTransferFrom(address _from, address[] _to, uint

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d545fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: StandardToken
Function name: multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[])
PC address: 392
Estimated Gas Usage: 791 - 6713
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a01953c55d8bdcef71f30a522a95c8ad.sol:58

eturns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transfer(_to[i], _value[i]))
                return false;
        }

        return true;
    }

    function multiTransferFrom(address _from, address[] _to, uint

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000809, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8000000000000001, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d5459040140680000000000000000000000000000000000000000000000000000001fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KNDToken
Function name: multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[])
PC address: 537
Estimated Gas Usage: 3794 - 10751
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a01953c55d8bdcef71f30a522a95c8ad.sol:58

eturns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transfer(_to[i], _value[i]))
                return false;
        }

        return true;
    }

    function multiTransferFrom(address _from, address[] _to, uint

--------------------
Initial State:

Account: [CREATOR], balance: 0x81000000002101, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d545ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KNDToken
Function name: multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[])
PC address: 604
Estimated Gas Usage: 3794 - 10751
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a01953c55d8bdcef71f30a522a95c8ad.sol:58

eturns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transfer(_to[i], _value[i]))
                return false;
        }

        return true;
    }

    function multiTransferFrom(address _from, address[] _to, uint

--------------------
Initial State:

Account: [CREATOR], balance: 0x82, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d5458000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: StandardToken
Function name: multiTransferFrom(address,address[],uint256[]) or multiTransferFrom(address,address[],uint256[]) or multiTransferFrom(address,address[],uint256[])
PC address: 871
Estimated Gas Usage: 914 - 6836
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a01953c55d8bdcef71f30a522a95c8ad.sol:70

alue) returns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transferFrom(_from, _to[i], _value[i]))
                return false;
        }

        return true;
    }

    function transfer(address _to, uint256 _value) returns (bool success) {
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000c810402, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransferFrom(address,address[],uint256[]), txdata: 0xcb31b6cd0600000008000008000000000000000000000800000100000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: StandardToken
Function name: multiTransferFrom(address,address[],uint256[]) or multiTransferFrom(address,address[],uint256[]) or multiTransferFrom(address,address[],uint256[])
PC address: 938
Estimated Gas Usage: 914 - 6836
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a01953c55d8bdcef71f30a522a95c8ad.sol:70

alue) returns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transferFrom(_from, _to[i], _value[i]))
                return false;
        }

        return true;
    }

    function transfer(address _to, uint256 _value) returns (bool success) {
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x20080000100, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: multiTransferFrom(address,address[],uint256[]), txdata: 0xcb31b6cd01010101010101010102010100000000000000000000000000000000000000008402000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KNDToken
Function name: multiTransferFrom(address,address[],uint256[]) or multiTransferFrom(address,address[],uint256[]) or multiTransferFrom(address,address[],uint256[])
PC address: 1591
Estimated Gas Usage: 1024 - 6946
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a01953c55d8bdcef71f30a522a95c8ad.sol:70

alue) returns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transferFrom(_from, _to[i], _value[i]))
                return false;
        }

        return true;
    }

    function transfer(address _to, uint256 _value) returns (bool success) {
 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2101000100000102, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransferFrom(address,address[],uint256[]), txdata: 0xcb31b6cd0202010201010201020201020000000000000001000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: KNDToken
Function name: multiTransferFrom(address,address[],uint256[]) or multiTransferFrom(address,address[],uint256[]) or multiTransferFrom(address,address[],uint256[])
PC address: 1658
Estimated Gas Usage: 1024 - 6946
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a01953c55d8bdcef71f30a522a95c8ad.sol:70

alue) returns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transferFrom(_from, _to[i], _value[i]))
                return false;
        }

        return true;
    }

    function transfer(address _to, uint256 _value) returns (bool success) {
 

--------------------
Initial State:

Account: [CREATOR], balance: 0xa183, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransferFrom(address,address[],uint256[]), txdata: 0xcb31b6cd01010101010101010101010100000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: KNDToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 4731
Estimated Gas Usage: 8715 - 67818
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a01953c55d8bdcef71f30a522a95c8ad.sol:174
Initial State:

Account: [CREATOR], balance: 0x80040000030401, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef8000000000002000000000000000000000000000000000000000000000000002ff, value: 0x0