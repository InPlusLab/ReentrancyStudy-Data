==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: grantFounderToken()
PC address: 1540
Estimated Gas Usage: 15068 - 70359
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:263

(!grantTeamSup

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantFounderToken(), txdata: 0x27413437, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: grantFounderToken()
PC address: 1543
Estimated Gas Usage: 15068 - 70359
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:263

y);
        r

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantFounderToken(), txdata: 0x27413437, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: grantFounderToken()
PC address: 1617
Estimated Gas Usage: 15068 - 70359
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:264

eam Suuply is 0")

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantFounderToken(), txdata: 0x27413437, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: grantAdvisorToken()
PC address: 2045
Estimated Gas Usage: 15079 - 70370
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:246

    
        r

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantAdvisorToken(), txdata: 0x288811cb, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: grantAdvisorToken()
PC address: 2048
Estimated Gas Usage: 15079 - 70370
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:247

uire(!grantFo

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantAdvisorToken(), txdata: 0x288811cb, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: grantAdvisorToken()
PC address: 2122
Estimated Gas Usage: 15079 - 70370
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:248

require(founderSu

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantAdvisorToken(), txdata: 0x288811cb, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: reserveFunds()
PC address: 2656
Estimated Gas Usage: 13414 - 68705
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:229

unction grantAdvi

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: reserveFunds(), txdata: 0x72a9e232, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: reserveFunds()
PC address: 2659
Estimated Gas Usage: 13414 - 68705
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:231

        requir

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: reserveFunds(), txdata: 0x72a9e232, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: NanakShahiDistribution
Function name: bountyFunds(address[],uint256[])
PC address: 3026
Estimated Gas Usage: 2622 - 8267
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:207

      Nan

--------------------
Initial State:

Account: [CREATOR], balance: 0x2200010018001312, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: bountyFunds(address[],uint256[]), txdata: 0x9a4714160000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: grantTeamToken()
PC address: 3961
Estimated Gas Usage: 15120 - 70411
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:277

   function

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantTeamToken(), txdata: 0xaecadd53, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: grantTeamToken()
PC address: 3964
Estimated Gas Usage: 15120 - 70411
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:277

ransferTok

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantTeamToken(), txdata: 0xaecadd53, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: NanakShahiDistribution
Function name: grantTeamToken()
PC address: 4038
Estimated Gas Usage: 15120 - 70411
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d2e4b5c0de468bb8ff077e5a7e68c545.sol:277

eneficiary, ui

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantTeamToken(), txdata: 0xaecadd53, value: 0x0