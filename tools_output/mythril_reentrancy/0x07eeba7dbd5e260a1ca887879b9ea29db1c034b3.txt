==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Distributor
Function name: distribute(address[])
PC address: 996
Estimated Gas Usage: 13806 - 107790
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b8f4d760a396e508aa5be89bb47e4a0d.sol:67

p

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWithdrawable(address), txdata: 0xb8f76562000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889bff, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Distributor
Function name: distribute(address[])
PC address: 1203
Estimated Gas Usage: 13806 - 107790
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/b8f4d760a396e508aa5be89bb47e4a0d.sol:67

plete(nonce);
        

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWithdrawable(address), txdata: 0xb8f76562000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889b90, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Distributor
Function name: distribute(address[])
PC address: 1203
Estimated Gas Usage: 13806 - 107790
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/b8f4d760a396e508aa5be89bb47e4a0d.sol:67

plete(nonce);
        

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWithdrawable(address), txdata: 0xb8f76562, value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889b80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Distributor
Function name: distribute(address[])
PC address: 1203
Estimated Gas Usage: 13806 - 107790
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b8f4d760a396e508aa5be89bb47e4a0d.sol:67

plete(nonce);
        

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWithdrawable(address), txdata: 0xb8f76562000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889bff, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Distributor
Function name: distribute(address[])
PC address: 1274
Estimated Gas Usage: 13806 - 107790
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b8f4d760a396e508aa5be89bb47e4a0d.sol:71

n com

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWithdrawable(address), txdata: 0xb8f76562000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889bff, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Distributor
Function name: distribute(address[])
PC address: 1300
Estimated Gas Usage: 13806 - 107790
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b8f4d760a396e508aa5be89bb47e4a0d.sol:72

     

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWithdrawable(address), txdata: 0xb8f76562000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889bff, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Distributor
Function name: distribute(address[])
PC address: 1306
Estimated Gas Usage: 13806 - 107790
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b8f4d760a396e508aa5be89bb47e4a0d.sol:71


               n

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setWithdrawable(address), txdata: 0xb8f76562000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distribute(address[]), txdata: 0x6138889bff, value: 0x0