==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: TokenBatchTransfer
Function name: batchTransfer(address[],uint256[])
PC address: 300
Estimated Gas Usage: 10021 - 124419
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/53f2bc4b90d11c9ae13e90d83691e4e2.sol:281

nt i = 0; i < amounts.length; i++) {

      fundersTotal = fundersTotal.add(amounts[i]);

    }

    require(total >= fundersTotal);



    for (uint j = 0; j < funders.length; j++) {

      token.safeTransfer(funders[j], amounts[j]);

    }

  }

}

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: batchTransfer(address[],uint256[]), txdata: 0x88d695b2ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc80, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenBatchTransfer
Function name: balanceOfToken()
PC address: 720
Estimated Gas Usage: 2662 - 37930
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/53f2bc4b90d11c9ae13e90d83691e4e2.sol:269

equire(funders.length > 0 && f

--------------------
Initial State:

Account: [CREATOR], balance: 0x4d000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: balanceOfToken(), txdata: 0x6b0f1c81, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenBatchTransfer
Function name: batchTransfer(address[],uint256[])
PC address: 930
Estimated Gas Usage: 10021 - 124419
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/53f2bc4b90d11c9ae13e90d83691e4e2.sol:291

+) {

      token.saf

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: batchTransfer(address[],uint256[]), txdata: 0x88d695b2800000000000000000007fffffffffffffffffffffffffffffffffffffffffde80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenBatchTransfer
Function name: batchTransfer(address[],uint256[])
PC address: 1137
Estimated Gas Usage: 10021 - 124419
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/53f2bc4b90d11c9ae13e90d83691e4e2.sol:299
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: batchTransfer(address[],uint256[]), txdata: 0x88d695b2800000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenBatchTransfer
Function name: fallback
PC address: 1480
Estimated Gas Usage: 3614 - 40346
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/53f2bc4b90d11c9ae13e90d83691e4e2.sol:135

    uint256 value

  )

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: safeTransfer(address,uint256), txdata: 0x423f6cef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenBatchTransfer
Function name: batchTransfer(address[],uint256[])
PC address: 1480
Estimated Gas Usage: 10021 - 124419
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/53f2bc4b90d11c9ae13e90d83691e4e2.sol:135

    uint256 value

  )

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: batchTransfer(address[],uint256[]), txdata: 0x88d695b2800000000000000000007fffffffffffffffffffffffffffffffffffffffffde80, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TokenBatchTransfer
Function name: batchTransfer(address[],uint256[])
PC address: 1480
Estimated Gas Usage: 7050 - 84727
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/53f2bc4b90d11c9ae13e90d83691e4e2.sol:135

    uint256 value

  )

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x80200000008000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: batchTransfer(address[],uint256[]), txdata: 0x88d695b2800000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenBatchTransfer
Function name: batchTransfer(address[],uint256[])
PC address: 1480
Estimated Gas Usage: 10021 - 124419
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/53f2bc4b90d11c9ae13e90d83691e4e2.sol:135

    uint256 value

  )

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: batchTransfer(address[],uint256[]), txdata: 0x88d695b2800000000000000000000000000000000000000000000000000000000000000080, value: 0x0