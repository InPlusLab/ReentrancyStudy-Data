==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: StandardToken
Function name: multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[])
PC address: 314
Estimated Gas Usage: 3772 - 10729
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/bb4516a7dff8100aaddee3c6e9505286.sol:51

alue) returns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transfer(_to[i], _value[i]))
                return false;
        }

        return true;
    }

    function transfer(address _to, uint256 _value) returns

--------------------
Initial State:

Account: [CREATOR], balance: 0x1040000040002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d545fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: StandardToken
Function name: multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[])
PC address: 381
Estimated Gas Usage: 3772 - 10729
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/bb4516a7dff8100aaddee3c6e9505286.sol:51

alue) returns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transfer(_to[i], _value[i]))
                return false;
        }

        return true;
    }

    function transfer(address _to, uint256 _value) returns

--------------------
Initial State:

Account: [CREATOR], balance: 0x14c220001960f, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d545fffffffffffffffefffffffffffffffffffff000000000000000000000000000fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ERC20Token
Function name: multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[])
PC address: 526
Estimated Gas Usage: 3794 - 10751
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/bb4516a7dff8100aaddee3c6e9505286.sol:51

alue) returns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transfer(_to[i], _value[i]))
                return false;
        }

        return true;
    }

    function transfer(address _to, uint256 _value) returns

--------------------
Initial State:

Account: [CREATOR], balance: 0x1043, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d545fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ERC20Token
Function name: multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[]) or multiTransfer(address[],uint256[])
PC address: 593
Estimated Gas Usage: 3794 - 10751
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/bb4516a7dff8100aaddee3c6e9505286.sol:51

alue) returns (bool success) {
        if(_to.length <= 0 || _value.length <=0 || _to.length != _value.length){
            return false;
        }
        for(uint i = 0; i < _to.length; i++) {
            if(false == transfer(_to[i], _value[i]))
                return false;
        }

        return true;
    }

    function transfer(address _to, uint256 _value) returns

--------------------
Initial State:

Account: [CREATOR], balance: 0x2001080400020209, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x80, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: multiTransfer(address[],uint256[]), txdata: 0x1e89d545ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ERC20Token
Function name: approveAndCall(address,uint256,bytes)
PC address: 4495
Estimated Gas Usage: 8856 - 68665
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/bb4516a7dff8100aaddee3c6e9505286.sol:153

 true;
    }
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000004723, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51800000000001000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe80, value: 0x0