==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: HelpMeTokenPart2
Function name: fallback
PC address: 346
Estimated Gas Usage: 4507 - 110271
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/57cf7a80b33da368eb954c4ce6d08e54.sol:33

);
        token.thankYou( msg.se

--------------------
Initial State:

Account: [CREATOR], balance: 0x3ff8000008003c33, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x02104004, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: HelpMeTokenPart2
Function name: fallback
PC address: 346
Estimated Gas Usage: 4507 - 110271
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/57cf7a80b33da368eb954c4ce6d08e54.sol:33

);
        token.thankYou( msg.se

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x01010101, value: 0x1

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: HelpMeTokenPart2
Function name: fallback
PC address: 463
Estimated Gas Usage: 4188 - 109622
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/57cf7a80b33da368eb954c4ce6d08e54.sol:35

 }
    
    function stopIt(

--------------------
Initial State:

Account: [CREATOR], balance: 0x1022000000010000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1022000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x1
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: HelpMeTokenPart2
Function name: fallback
PC address: 463
Estimated Gas Usage: 4188 - 109622
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/57cf7a80b33da368eb954c4ce6d08e54.sol:35

 }
    
    function stopIt(

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x, value: 0x1