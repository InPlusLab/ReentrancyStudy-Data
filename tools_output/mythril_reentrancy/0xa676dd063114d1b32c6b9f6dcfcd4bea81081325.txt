==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MultiTransfer
Function name: transfer(address[],uint256[])
PC address: 1349
Estimated Gas Usage: 8525 - 86157
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/7b7e02932ed39edc405147c9e3cb82d9.sol:107
Initial State:

Account: [CREATOR], balance: 0x100000000094, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTKC(address), txdata: 0x7044ce75000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: transfer(address[],uint256[]), txdata: 0xffc3a769ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0ff, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MultiTransfer
Function name: transfer(address[],uint256[])
PC address: 1410
Estimated Gas Usage: 8525 - 86157
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/7b7e02932ed39edc405147c9e3cb82d9.sol:107
Initial State:

Account: [CREATOR], balance: 0x100000000094, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTKC(address), txdata: 0x7044ce75000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: transfer(address[],uint256[]), txdata: 0xffc3a769ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0ff, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MultiTransfer
Function name: transfer(address[],uint256[])
PC address: 1672
Estimated Gas Usage: 8525 - 86157
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/7b7e02932ed39edc405147c9e3cb82d9.sol:107
Initial State:

Account: [CREATOR], balance: 0x200000000010801, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTKC(address), txdata: 0x7044ce75000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: transfer(address[],uint256[]), txdata: 0xffc3a769ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8080, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: MultiTransfer
Function name: transfer(address[],uint256[])
PC address: 1672
Estimated Gas Usage: 8525 - 86157
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/7b7e02932ed39edc405147c9e3cb82d9.sol:107
Initial State:

Account: [CREATOR], balance: 0x4000000010020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTKC(address), txdata: 0x7044ce75, value: 0x0
Caller: [CREATOR], function: transfer(address[],uint256[]), txdata: 0xffc3a769ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9eff, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MultiTransfer
Function name: transfer(address[],uint256[])
PC address: 1672
Estimated Gas Usage: 8525 - 86157
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/7b7e02932ed39edc405147c9e3cb82d9.sol:107
Initial State:

Account: [CREATOR], balance: 0x100000000094, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTKC(address), txdata: 0x7044ce75000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: transfer(address[],uint256[]), txdata: 0xffc3a769ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0ff, value: 0x0