==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MogoToken
Function name: batchTransfer(address[],uint256[])
PC address: 762
Estimated Gas Usage: 10080 - 36998
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/d32b0cd40555ee449a035157e331dc6d.sol:491

[i];

            balanceOf[addrs[i]] += value;

            emit Transfer(owner, addrs[i], value);

            totalValue = SafeMath.add(value,totalValue);

        }

        require(balanceOf[owner]>totalValue);

        balanceOf[owner] -= totalValue;   

    }

    

    /**

     * Destroy tokens

     *

     * Remove `_value` tokens from the system irreversibly

     *

     * @param _value the amount of money to burn

     */

    function burn(uint256 _value) onlyOwner public returns (bool success) {



--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: batchTransfer(address[],uint256[]), txdata: 0x88d695b2ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc08, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MogoToken
Function name: fallback
PC address: 1228
Estimated Gas Usage: 2330 - 4071
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/d32b0cd40555ee449a035157e331dc6d.sol:399

blic totalSupply = 200000000 * 10 **

--------------------
Initial State:

Account: [CREATOR], balance: 0xc00c0442008c84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: name(), txdata: 0x06fdde03, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenERC20
Function name: approveAndCall(address,uint256,bytes)
PC address: 1523
Estimated Gas Usage: 11163 - 72529
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d32b0cd40555ee449a035157e331dc6d.sol:391

   string public name = "Morgan Option";

    string public s

--------------------
Initial State:

Account: [CREATOR], balance: 0x806d0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MogoToken
Function name: symbol()
PC address: 2416
Estimated Gas Usage: 2594 - 4335
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/d32b0cd40555ee449a035157e331dc6d.sol:399

(decimals);



    mapping (a

--------------------
Initial State:

Account: [CREATOR], balance: 0xc00c0442008c84, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: symbol(), txdata: 0x95d89b41, value: 0x0