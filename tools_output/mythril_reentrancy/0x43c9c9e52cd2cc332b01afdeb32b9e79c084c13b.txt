==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: HybridProxy
Function name: constructor
PC address: 316
Estimated Gas Usage: 20612 - 121053
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:107

 != 0);

  }



  function

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: constructor
PC address: 377
Estimated Gas Usage: 20612 - 121053
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:107

re(eth_balance != 0);

  }



  function

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: constructor
PC address: 383
Estimated Gas Usage: 20612 - 121053
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:113

 tokens_thi

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: HybridProxy
Function name: withdraw()
PC address: 1201
Estimated Gas Usage: 7110 - 78118
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:139

 whitelisted) = contr.contribu

--------------------
Initial State:

Account: [CREATOR], balance: 0x400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: withdraw()
PC address: 1264
Estimated Gas Usage: 7110 - 78118
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:141

 < ro

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000010000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: HybridProxy
Function name: withdraw()
PC address: 1450
Estimated Gas Usage: 7110 - 78118
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:141

 < rounds) {

			Snapshot stor

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa200000000000000000000000001, value: 0x0
Caller: [CREATOR], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: HybridProxy
Function name: withdraw()
PC address: 1450
Estimated Gas Usage: 7110 - 78118
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:141

 < rounds) {

			Snapshot stor

--------------------
Initial State:

Account: [CREATOR], balance: 0x220020a02003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa200000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: withdraw()
PC address: 1450
Estimated Gas Usage: 7110 - 78118
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:141

 < rounds) {

			Snapshot stor

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000010000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: withdraw()
PC address: 1550
Estimated Gas Usage: 7110 - 78118
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:143

[msg.s

--------------------
Initial State:

Account: [CREATOR], balance: 0x401c, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa200000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: withdraw()
PC address: 1630
Estimated Gas Usage: 7110 - 78118
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:143

ot = snapshots[contributor_rou

--------------------
Initial State:

Account: [CREATOR], balance: 0x401c, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa200000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: withdraw(), txdata: 0x3ccfd60b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 2766
Estimated Gas Usage: 33249 - 219859
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:189

  tokens_this_round = dev_fee(

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000e483, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 2874
Estimated Gas Usage: 33249 - 219859
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:201

re(msg.send

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 2883
Estimated Gas Usage: 33249 - 219859
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 2887
Estimated Gas Usage: 33249 - 219859
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 2930
Estimated Gas Usage: 33249 - 219859
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:199

_token_address(address _token) {

    require(msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 2940
Estimated Gas Usage: 33249 - 219859
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:199

_token_address(address _token) {

    require(msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 2951
Estimated Gas Usage: 33249 - 219859
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:201

r && _to

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 2976
Estimated Gas Usage: 33249 - 219859
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:201

r && _to

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 2991
Estimated Gas Usage: 33249 - 219859
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:201

r && _to

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: HybridProxy
Function name: emergency_withdraw(address)
PC address: 3410
Estimated Gas Usage: 5463 - 75437
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:173

equire(msg.sender == owner);


--------------------
Initial State:

Account: [CREATOR], balance: 0x9000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: emergency_withdraw(address), txdata: 0xa852d5ba, value: 0x0
Caller: [CREATOR], function: emergency_withdraw(address), txdata: 0xa852d5ba909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: HybridProxy
Function name: emergency_withdraw(address)
PC address: 3602
Estimated Gas Usage: 5463 - 75437
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:171

set_tokens_received() {

    require(msg.sender == owner);



--------------------
Initial State:

Account: [CREATOR], balance: 0x9000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: emergency_withdraw(address), txdata: 0xa852d5ba, value: 0x0
Caller: [CREATOR], function: emergency_withdraw(address), txdata: 0xa852d5ba909090909090909090909090deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: HybridProxy
Function name: emergency_withdraw(address)
PC address: 3602
Estimated Gas Usage: 5463 - 75437
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:171

set_tokens_received() {

    require(msg.sender == owner);



--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: emergency_withdraw(address), txdata: 0xa852d5ba, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: HybridProxy
Function name: snapshots(uint256)
PC address: 3692
Estimated Gas Usage: 1256 - 1351
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:93

;

  uint8 public rounds;



--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: snapshots(uint256), txdata: 0xd6565a2d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 3792
Estimated Gas Usage: 33249 - 219859
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:121

e(tok

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 4006
Estimated Gas Usage: 33249 - 219859
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:121

e(token.transfer(DEVELOPER2, tokens_individua

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000e483, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 4006
Estimated Gas Usage: 33249 - 219859
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:121

e(token.transfer(DEVELOPER2, tokens_individua

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000140180001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa200000000000000000000000001, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 4006
Estimated Gas Usage: 33249 - 219859
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:121

e(token.transfer(DEVELOPER2, tokens_individua

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 4079
Estimated Gas Usage: 33249 - 219859
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:123

this_

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 4293
Estimated Gas Usage: 33249 - 219859
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:123

this_round -= (2*tokens_individual);

    ret

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000e483, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: HybridProxy
Function name: set_tokens_received()
PC address: 4293
Estimated Gas Usage: 33249 - 219859
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eda8b98c7a50e1c9a307b56526a4b710.sol:123

this_round -= (2*tokens_individual);

    ret

--------------------
Initial State:

Account: [CREATOR], balance: 0x1400000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: set_token_address(address), txdata: 0x42263aa2000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: set_tokens_received(), txdata: 0x48103077, value: 0x0