==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SNXLinkTradeSaverV1
Function name: exchange(bytes32,uint256,bytes32,address)
PC address: 599
Estimated Gas Usage: 23885 - 154591
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/7439f49734f3b51c170d668144987a27.sol:45

          _;
        

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: exchange(bytes32,uint256,bytes32,address), txdata: 0x1aa6adf70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000880020101010102080480002002022002020402, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SNXLinkTradeSaverV1
Function name: exchange(bytes32,uint256,bytes32,address)
PC address: 605
Estimated Gas Usage: 23885 - 154591
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/7439f49734f3b51c170d668144987a27.sol:45

          _;
        

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: exchange(bytes32,uint256,bytes32,address), txdata: 0x1aa6adf70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000880020101010102080480002002022002020402, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: SNXLinkTradeSaverV1
Function name: exchange(bytes32,uint256,bytes32,address)
PC address: 941
Estimated Gas Usage: 3825 - 73802
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/7439f49734f3b51c170d668144987a27.sol:75

e: contracts/SNXLinkTradeSaverV1.sol

pragma solidity

--------------------
Initial State:

Account: [CREATOR], balance: 0x10002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: exchange(bytes32,uint256,bytes32,address), txdata: 0x1aa6adf70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SNXLinkTradeSaverV1
Function name: exchange(bytes32,uint256,bytes32,address)
PC address: 941
Estimated Gas Usage: 23885 - 154591
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/7439f49734f3b51c170d668144987a27.sol:75

e: contracts/SNXLinkTradeSaverV1.sol

pragma solidity

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: exchange(bytes32,uint256,bytes32,address), txdata: 0x1aa6adf70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000880020101010102080480002002022002020402, value: 0x0