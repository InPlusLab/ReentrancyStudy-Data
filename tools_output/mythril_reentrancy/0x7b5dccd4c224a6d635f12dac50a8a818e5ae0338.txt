==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SNcoin_Sale
Function name: fallback
PC address: 515
Estimated Gas Usage: 16201 - 141256
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:85

g.sender, tokens));

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x10020000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000002080000000002000000001000000000000080101010101010101010101010101010101010101010101010101010401010101000000000000000000000000000000000000000000000001, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x01010101, value: 0x10000000000000000

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: SNcoin_Sale
Function name: fallback
PC address: 515
Estimated Gas Usage: 16201 - 141256
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:85

g.sender, tokens));

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000008040800420080820011010000400200202800000000000000000000000000040084002040001400402100840200401040401200102404040040040000280010410014020042080100010088080808001408040000000000000000000000000000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x20208000, value: 0x10000000000000000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNcoin_Sale
Function name: fallback
PC address: 597
Estimated Gas Usage: 16201 - 141256
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:90

 This method 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000020000000000000000010001000000200000400101010101010101010101010101010101010101010101010101040101010101000000000000000000000000000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x01010101, value: 0x10000000000000000

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SNcoin_Sale
Function name: fallback
PC address: 791
Estimated Gas Usage: 16201 - 141256
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:90

 This method can be used by the owner to e

--------------------
Initial State:

Account: [CREATOR], balance: 0x10020000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000002080000000002000000001000000000000080101010101010101010101010101010101010101010101010101010401010101000000000000000000000000000000000000000000000001, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x01010101, value: 0x10000000000000000

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNcoin_Sale
Function name: fallback
PC address: 791
Estimated Gas Usage: 15892 - 140947
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:90

 This method can be used by the owner to e

--------------------
Initial State:

Account: [CREATOR], balance: 0x20140000000000200, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000001000008000200020000000000000000020101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000001, value: 0x0
Caller: [CREATOR], function: unknown, txdata: 0x, value: 0x10000000000000000

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SNcoin_Sale
Function name: claimTokens(address)
PC address: 3043
Estimated Gas Usage: 7913 - 78754
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:103

ner, balance);
    }


--------------------
Initial State:

Account: [CREATOR], balance: 0x5, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001010201010108010101020101100101010204010000000000000000000000000420041020010102020208018001082000010101000000000000000000000000000000000000000000000000000000000000000001, value: 0x0
Caller: [CREATOR], function: claimTokens(address), txdata: 0xdf8de3e7808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNcoin_Sale
Function name: claimTokens(address)
PC address: 3134
Estimated Gas Usage: 7913 - 78754
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:106

ns(ad

--------------------
Initial State:

Account: [CREATOR], balance: 0x20800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000040800201010101010101010101020201020101080000000000000000000000000240020101104002100204014004010202021001000000000000000000000000000000000000000000000000000000000000000004, value: 0x0
Caller: [CREATOR], function: claimTokens(address), txdata: 0xdf8de3e7808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: SNcoin_Sale
Function name: claimTokens(address)
PC address: 3300
Estimated Gas Usage: 7913 - 78754
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:106

ent ClaimedTokens(address inde

--------------------
Initial State:

Account: [CREATOR], balance: 0x5, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000001010201010108010101020101100101010204010000000000000000000000000420041020010102020208018001082000010101000000000000000000000000000000000000000000000000000000000000000001, value: 0x0
Caller: [CREATOR], function: claimTokens(address), txdata: 0xdf8de3e7808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: SNcoin_Sale
Function name: claimTokens(address)
PC address: 3300
Estimated Gas Usage: 7913 - 78754
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:106

ent ClaimedTokens(address inde

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000004010101010410010140020810020101010401020000000000000000000000000202010102010801010404100101040102080201000000000000000000000000000000000000000000000000000000000000000004, value: 0x0
Caller: [CREATOR], function: claimTokens(address), txdata: 0xdf8de3e708080808080808080808080801, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNcoin_Sale
Function name: claimTokens(address)
PC address: 3300
Estimated Gas Usage: 7913 - 78754
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:106

ent ClaimedTokens(address inde

--------------------
Initial State:

Account: [CREATOR], balance: 0x20800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000040800201010101010101010101020201020101080000000000000000000000000240020101104002100204014004010202021001000000000000000000000000000000000000000000000000000000000000000004, value: 0x0
Caller: [CREATOR], function: claimTokens(address), txdata: 0xdf8de3e7808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: SNcoin_Sale
Function name: claimTokens(address)
PC address: 3362
Estimated Gas Usage: 7913 - 78754
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/86984bbcf2d31a9c0aa691f3a9f61595.sol:106

r, ui

--------------------
Initial State:

Account: [CREATOR], balance: 0x20800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000040800201010101010101010101020201020101080000000000000000000000000240020101104002100204014004010202021001000000000000000000000000000000000000000000000000000000000000000004, value: 0x0
Caller: [CREATOR], function: claimTokens(address), txdata: 0xdf8de3e7808080808080808080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0