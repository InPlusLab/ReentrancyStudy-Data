==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: IMDEXDexchange
Function name: fallback
PC address: 968
Estimated Gas Usage: 1919 - 2534
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1c681a62dc23ffbeb381f10dedeb599c.sol:124

.sender] > amount);
    tokens[token][msg.sender] = safeSub(tokens[token][msg.sender], amou

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: IMDEXwithdrawToken(address,uint256), txdata: 0x0a4bfa6d, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: IMDEXDexchange
Function name: IMDEXdepositToken(address,uint256)
PC address: 2667
Estimated Gas Usage: 15140 - 93364
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1c681a62dc23ffbeb381f10dedeb599c.sol:113

[msg.sender]);
  }

  function IMDEXdeposit() publi

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000000026, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: IMDEXdepositToken(address,uint256), txdata: 0x91988783000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: IMDEXDexchange
Function name: IMDEXdepositToken(address,uint256)
PC address: 2758
Estimated Gas Usage: 15140 - 93364
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1c681a62dc23ffbeb381f10dedeb599c.sol:117

 safeAdd(tokens[address(0

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: IMDEXdepositToken(address,uint256), txdata: 0x91988783000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 120
Severity: Low
Contract: IMDEXDexchange
Function name: fallback
PC address: 4331
Estimated Gas Usage: 1882 - 2497
A control flow decision is made based on The block.number environment variable.
The block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/1c681a62dc23ffbeb381f10dedeb599c.sol:42


  function sa

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: IMDEXwithdrawToken(address,uint256), txdata: 0x0a4bfa6d, value: 0x0


