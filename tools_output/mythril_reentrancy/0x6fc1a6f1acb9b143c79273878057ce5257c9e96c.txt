==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ERC20MigrationTestable
Function name: withdrawAllTokensFromContract(address)
PC address: 1420
Estimated Gas Usage: 4502 - 74427
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:243
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000100801100401100808080101080402020401020800000000000000000000000001, value: 0x0
Caller: [CREATOR], function: withdrawAllTokensFromContract(address), txdata: 0x428147ee010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ERC20MigrationTestable
Function name: withdrawAllTokensFromContract(address)
PC address: 1612
Estimated Gas Usage: 4502 - 74427
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:243
Initial State:

Account: [CREATOR], balance: 0x10000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000100801100401100808080101080402020401020800000000000000000000000001, value: 0x0
Caller: [CREATOR], function: withdrawAllTokensFromContract(address), txdata: 0x428147ee010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ERC20MigrationTestable
Function name: withdrawAllTokensFromContract(address)
PC address: 1612
Estimated Gas Usage: 4502 - 74427
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:243
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000081002010104010101010102100102100804100800000000000000000000000001, value: 0x0
Caller: [CREATOR], function: withdrawAllTokensFromContract(address), txdata: 0x428147ee, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ERC20MigrationTestable
Function name: migrateAll()
PC address: 1687
Estimated Gas Usage: 8854 - 114823
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:211

sender, 

--------------------
Initial State:

Account: [CREATOR], balance: 0x246000002003810, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000040, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ERC20MigrationTestable
Function name: migrate(uint256)
PC address: 1933
Estimated Gas Usage: 6342 - 77419
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:211

sender, _value);

        return true;

    }



    fun

--------------------
Initial State:

Account: [CREATOR], balance: 0xc0000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrate(uint256), txdata: 0x454b0608, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ERC20MigrationTestable
Function name: migrateAll()
PC address: 1933
Estimated Gas Usage: 8854 - 114823
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:211

sender, _value);

        return true;

    }



    fun

--------------------
Initial State:

Account: [CREATOR], balance: 0x206000002003830, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ERC20MigrationTestable
Function name: migrateAll()
PC address: 1933
Estimated Gas Usage: 8854 - 114823
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:211

sender, _value);

        return true;

    }



    fun

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000010101010120010101010101010101010101080100000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ERC20MigrationTestable
Function name: migrateAll()
PC address: 1933
Estimated Gas Usage: 8854 - 114823
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:211

sender, _value);

        return true;

    }



    fun

--------------------
Initial State:

Account: [CREATOR], balance: 0x246000002003810, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000040, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ERC20MigrationTestable
Function name: migrate(uint256)
PC address: 2036
Estimated Gas Usage: 6342 - 77419
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:221

n migrat

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrate(uint256), txdata: 0x454b0608, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ERC20MigrationTestable
Function name: migrateAll()
PC address: 2036
Estimated Gas Usage: 8854 - 114823
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:221

n migrat

--------------------
Initial State:

Account: [CREATOR], balance: 0x246000002003810, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000040, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ERC20MigrationTestable
Function name: migrate(uint256)
PC address: 2230
Estimated Gas Usage: 6342 - 77419
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:221

n migrate(oldToken.balanceOf(msg.send

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: migrate(uint256), txdata: 0x454b0608, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ERC20MigrationTestable
Function name: migrateAll()
PC address: 2230
Estimated Gas Usage: 8854 - 114823
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:221

n migrate(oldToken.balanceOf(msg.send

--------------------
Initial State:

Account: [CREATOR], balance: 0x140000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000101010101010101010101010101010101010101000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ERC20MigrationTestable
Function name: migrate(uint256)
PC address: 2230
Estimated Gas Usage: 6342 - 77419
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:221

n migrate(oldToken.balanceOf(msg.send

--------------------
Initial State:

Account: [CREATOR], balance: 0x2020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000010101010101010101010101010101010101010100000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrate(uint256), txdata: 0x454b0608, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ERC20MigrationTestable
Function name: migrate(uint256)
PC address: 2230
Estimated Gas Usage: 6342 - 77419
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:221

n migrate(oldToken.balanceOf(msg.send

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrate(uint256), txdata: 0x454b0608, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ERC20MigrationTestable
Function name: migrateAll()
PC address: 2230
Estimated Gas Usage: 8854 - 114823
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:221

n migrate(oldToken.balanceOf(msg.send

--------------------
Initial State:

Account: [CREATOR], balance: 0x246000002003810, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000040, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ERC20MigrationTestable
Function name: migrateAll()
PC address: 2879
Estimated Gas Usage: 8854 - 114823
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/822db95c9d1a2bd75a4852ff8324e7fc.sol:237

unction withdrawAllTokensFromC

--------------------
Initial State:

Account: [CREATOR], balance: 0x206000002003830, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: migrateAll(), txdata: 0x4a77f870, value: 0x0