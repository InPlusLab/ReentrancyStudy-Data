==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ENSConstants
Function name: fallback
PC address: 427
Estimated Gas Usage: 1318 - 5455
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: PUBLIC_RESOLVER_NODE(), txdata: 0x3f82e2c6, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: dwebregistry
Function name: PUBLIC_RESOLVER_NODE()
PC address: 475
Estimated Gas Usage: 1374 - 6171
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: PUBLIC_RESOLVER_NODE(), txdata: 0x3f82e2c6, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ENSConstants
Function name: ETH_TLD_NODE()
PC address: 593
Estimated Gas Usage: 869 - 3172
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x3fe, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: ETH_TLD_NODE(), txdata: 0xfdee38a9, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: dwebregistry
Function name: ETH_TLD_NODE()
PC address: 641
Estimated Gas Usage: 947 - 3910
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: ETH_TLD_NODE(), txdata: 0xfdee38a9, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: ENSConstants
Function name: ETH_TLD_NODE()
PC address: 906
Estimated Gas Usage: 869 - 3172
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: ETH_TLD_NODE(), txdata: 0xfdee38a9, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: dwebregistry
Function name: ETH_TLD_NODE()
PC address: 1029
Estimated Gas Usage: 947 - 3910
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: ETH_TLD_NODE(), txdata: 0xfdee38a9, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: PublicResolver
Function name: ABI(bytes32,uint256)
PC address: 2193
Estimated Gas Usage: 2707 - 4029
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/ea840ddc59a450df0f6629c0f39505ff.sol:367

     * @param node The node to 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: ABI(bytes32,uint256), txdata: 0x2203ab5600000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000006, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PublicResolver
Function name: setPubkey(bytes32,bytes32,bytes32)
PC address: 2475
Estimated Gas Usage: 14097 - 91130
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ea840ddc59a450df0f6629c0f39505ff.sol:149

ct.

     */

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x20002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setPubkey(bytes32,bytes32,bytes32), txdata: 0x29cd62ea0000008080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PublicResolver
Function name: setPubkey(bytes32,bytes32,bytes32)
PC address: 2574
Estimated Gas Usage: 14097 - 91130
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea840ddc59a450df0f6629c0f39505ff.sol:447

;

    }



    /**

     * Sets the t

--------------------
Initial State:

Account: [CREATOR], balance: 0x20002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setPubkey(bytes32,bytes32,bytes32), txdata: 0x29cd62ea0000008080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PublicResolver
Function name: setPubkey(bytes32,bytes32,bytes32)
PC address: 2584
Estimated Gas Usage: 14097 - 91130
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea840ddc59a450df0f6629c0f39505ff.sol:447

;

    }



    /**

     * Sets the t

--------------------
Initial State:

Account: [CREATOR], balance: 0x20002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setPubkey(bytes32,bytes32,bytes32), txdata: 0x29cd62ea0000008080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: PublicResolver
Function name: name(bytes32)
PC address: 3258
Estimated Gas Usage: 1597 - 2727
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/ea840ddc59a450df0f6629c0f39505ff.sol:311

tName(bytes32 node, stri

--------------------
Initial State:

Account: [CREATOR], balance: 0x22621, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: name(bytes32), txdata: 0x691f3431, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PublicResolver
Function name: setContent(bytes32,bytes32)
PC address: 3808
Estimated Gas Usage: 9156 - 65530
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ea840ddc59a450df0f6629c0f39505ff.sol:149

ct.

     */

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setContent(bytes32,bytes32), txdata: 0xc3d014d60000008080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PublicResolver
Function name: setContent(bytes32,bytes32)
PC address: 3892
Estimated Gas Usage: 9156 - 65530
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea840ddc59a450df0f6629c0f39505ff.sol:289

   */

    function name(byt

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setContent(bytes32,bytes32), txdata: 0xc3d014d60000008080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PublicResolver
Function name: setAddr(bytes32,address)
PC address: 4062
Estimated Gas Usage: 10065 - 67099
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ea840ddc59a450df0f6629c0f39505ff.sol:149

ct.

     */

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x100040000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setAddr(bytes32,address), txdata: 0xd5fa2b000000008080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PublicResolver
Function name: setAddr(bytes32,address)
PC address: 4142
Estimated Gas Usage: 10065 - 67099
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea840ddc59a450df0f6629c0f39505ff.sol:236


     * in future to a re

--------------------
Initial State:

Account: [CREATOR], balance: 0x42004210, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setAddr(bytes32,address), txdata: 0xd5fa2b000000008080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: PublicResolver
Function name: setAddr(bytes32,address)
PC address: 4181
Estimated Gas Usage: 10065 - 67099
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea840ddc59a450df0f6629c0f39505ff.sol:236


     * in future to a re

--------------------
Initial State:

Account: [CREATOR], balance: 0x42004210, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setAddr(bytes32,address), txdata: 0xd5fa2b000000008080808080deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0