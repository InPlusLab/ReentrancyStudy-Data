==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ChainBot2000
Function name: updateBalance(bytes32,uint256)
PC address: 859
Estimated Gas Usage: 10815 - 66814
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/b05bdf4f898ec3767fe6063fec115d4d.sol:319

amount));

	    emit Purchase(_address, _amount);

	}

    


--------------------
Initial State:

Account: [CREATOR], balance: 0x1000040084201, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 606060606060606060606060deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: updateBalance(bytes32,uint256), txdata: 0x24de25ac0000000000000000000000000000000000000000000000000000000000000000371e00408028004449000ae417edecc360db8bba00228060000200241c4a8344, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ChainBot2000
Function name: updateBalance(bytes32,uint256)
PC address: 947
Estimated Gas Usage: 10815 - 66814
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b05bdf4f898ec3767fe6063fec115d4d.sol:327
Initial State:

Account: [CREATOR], balance: 0x1000000060041, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 242424242424242424242424deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: updateBalance(bytes32,uint256), txdata: 0x24de25ac0000000000000000000000000000000000000000000000000000000000000000210602488004000c030001625cc1076a2003263c0030084000c00020a54e398d, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ChainBot2000
Function name: updateBalance(bytes32,uint256)
PC address: 983
Estimated Gas Usage: 10815 - 66814
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/b05bdf4f898ec3767fe6063fec115d4d.sol:327
Initial State:

Account: [CREATOR], balance: 0x1000000060041, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 242424242424242424242424deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: updateBalance(bytes32,uint256), txdata: 0x24de25ac0000000000000000000000000000000000000000000000000000000000000000210602488004000c030001625cc1076a2003263c0030084000c00020a54e398d, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ChainBot2000
Function name: purchase(address,uint256)
PC address: 1551
Estimated Gas Usage: 5326 - 41180
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/b05bdf4f898ec3767fe6063fec115d4d.sol:327
Initial State:

Account: [CREATOR], balance: 0x400000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 242424242424242424242424deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: purchase(address,uint256), txdata: 0x8de9322200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, value: 0x0