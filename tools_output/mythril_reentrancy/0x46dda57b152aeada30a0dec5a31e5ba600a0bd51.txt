==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: OysterPearl
Function name: constructor
PC address: 343
Estimated Gas Usage: 71660 - 338207
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/506951401edc2fd694c2a0ce77a40f6f.sol:71

ls) - 1);
        fee

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: OysterPearl
Function name: approveAndCall(address,uint256,bytes)
PC address: 1560
Estimated Gas Usage: 10870 - 73416
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/506951401edc2fd694c2a0ce77a40f6f.sol:399

Remove `_value` tokens from the system irreversibly
     *
     * @param _value the amount of money to burn
     */
    function burn(uint256 _value) public returns (bool success) {
        // Buried addresses cannot be burnt
        require(!buried[msg.sender]);
        
        // Check if the sender has enough
        require(balances[msg.sen

--------------------
Initial State:

Account: [CREATOR], balance: 0x40020009, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca5100000000000000000000000020208010020000000000000110100280024020800000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: OysterPearl
Function name: amendRetention(uint8,uint8)
PC address: 3280
Estimated Gas Usage: 8044 - 29129
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/506951401edc2fd694c2a0ce77a40f6f.sol:165

he sale must be currently op

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendRetention(uint8,uint8), txdata: 0x5f5f2aef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f3, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: OysterPearl
Function name: amendRetention(uint8,uint8)
PC address: 3293
Estimated Gas Usage: 8044 - 29129
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/506951401edc2fd694c2a0ce77a40f6f.sol:164

irector {
        // The sale must be currently ope

--------------------
Initial State:

Account: [CREATOR], balance: 0x38000408400842, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendRetention(uint8,uint8), txdata: 0x5f5f2aef00000000000000000000000000000000000000000000000000000000000000640000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: OysterPearl
Function name: amendClaim(uint8,uint8,uint8,uint8)
PC address: 3902
Estimated Gas Usage: 18247 - 79332
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/506951401edc2fd694c2a0ce77a40f6f.sol:142

10 ** (uint256(decimals) - a

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendClaim(uint8,uint8,uint8,uint8), txdata: 0x7dbc9fba00000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000008800000000000000000000000000000000000000000000000000000000000000f3, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: OysterPearl
Function name: amendClaim(uint8,uint8,uint8,uint8)
PC address: 3910
Estimated Gas Usage: 18247 - 79332
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/506951401edc2fd694c2a0ce77a40f6f.sol:142

Amount = feeAmountSet * 10 ** (uint256(decimals) - ac

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendClaim(uint8,uint8,uint8,uint8), txdata: 0x7dbc9fba00000000000000000000000000000000000000000000000000000000000000ec00000000000000000000000000000000000000000000000000000000000000e400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000002, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: OysterPearl
Function name: amendClaim(uint8,uint8,uint8,uint8)
PC address: 3918
Estimated Gas Usage: 18247 - 79332
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/506951401edc2fd694c2a0ce77a40f6f.sol:145

 /**
     * Director can alter the epoch time
     

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendClaim(uint8,uint8,uint8,uint8), txdata: 0x7dbc9fba0000000000000000000000000000000000000000000000000000000000000094000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000840000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: OysterPearl
Function name: amendClaim(uint8,uint8,uint8,uint8)
PC address: 3923
Estimated Gas Usage: 18247 - 79332
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/506951401edc2fd694c2a0ce77a40f6f.sol:148

och(uint256 epochSet) public onlyDirector {
       

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000004010002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendClaim(uint8,uint8,uint8,uint8), txdata: 0x7dbc9fba000000000000000000000000000000000000000000000000000000000000000f000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000000bf0000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: OysterPearl
Function name: approveAndCall(address,uint256,bytes)
PC address: 4387
Estimated Gas Usage: 10803 - 73161
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0