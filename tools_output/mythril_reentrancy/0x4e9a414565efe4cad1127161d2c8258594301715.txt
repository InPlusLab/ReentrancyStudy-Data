==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AzbitAirdrop
Function name: sendTokensArray(address[],uint256[])
PC address: 264
Estimated Gas Usage: 6745 - 77049
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:369

 0; i < beneficiaries.length; i++) {

            _sendTokens(beneficiaries[i], amounts[i]);

        }

    }





    // ** PUBLIC VIEW FUNCTIONS **



    /**

    * @return total tokens of this contract.

    */

    function contractTokenBalance()

        public 

        view 

        returns(uint256) 

    {

        return azbitToken.balanceOf(this);

    }





    // ** PRIVATE HELPER FUNCTIONS **



    // Helper: Set the address of Azbit Token

    function _setToke

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: sendTokensArray(address[],uint256[]), txdata: 0x684a5181ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc81, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AzbitAirdrop
Function name: sendTokensArray(address[],uint256[])
PC address: 288
Estimated Gas Usage: 6745 - 77049
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:369

 0; i < beneficiaries.length; i++) {

            _sendTokens(beneficiaries[i], amounts[i]);

        }

    }





    // ** PUBLIC VIEW FUNCTIONS **



    /**

    * @return total tokens of this contract.

    */

    function contractTokenBalance()

        public 

        view 

        returns(uint256) 

    {

        return azbitToken.balanceOf(this);

    }





    // ** PRIVATE HELPER FUNCTIONS **



    // Helper: Set the address of Azbit Token

    function _setToke

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: sendTokensArray(address[],uint256[]), txdata: 0x684a5181800100000000000101010101010101010101010800000000000001000000000cffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AzbitAirdrop
Function name: constructor
PC address: 712
Estimated Gas Usage: 17167 - 98475
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:430


    function _sendTokens(

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: efefefefefefefefefefefefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AzbitAirdrop
Function name: contractTokenBalance()
PC address: 1679
Estimated Gas Usage: 2823 - 38091
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:430


    function _sendTokens(

--------------------
Initial State:

Account: [CREATOR], balance: 0x1290, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d5d5d5d5d5d5d5d5d5d5d5d5deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: contractTokenBalance(), txdata: 0x9e9aed62, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AzbitAirdrop
Function name: sendTokens(address,uint256)
PC address: 1679
Estimated Gas Usage: 6339 - 76643
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:430


    function _sendTokens(

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 212121212121212121212121deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: sendTokens(address,uint256), txdata: 0x05ab421d000000000000000000000000010101010101010101010101010101010101010108, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AzbitAirdrop
Function name: sendTokensArray(address[],uint256[])
PC address: 1679
Estimated Gas Usage: 6745 - 77049
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:430


    function _sendTokens(

--------------------
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1d1d1d1d1d1d1d1d1d1d1d1ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: sendTokensArray(address[],uint256[]), txdata: 0x684a5181ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AzbitAirdrop
Function name: sendTokens(address,uint256)
PC address: 2227
Estimated Gas Usage: 6339 - 76643
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:457
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 606060606060606060606060deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: sendTokens(address,uint256), txdata: 0x05ab421d000000000000000000000000010101010101010101010101010101010101010101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AzbitAirdrop
Function name: sendTokensArray(address[],uint256[])
PC address: 2227
Estimated Gas Usage: 6745 - 77049
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:457
Initial State:

Account: [CREATOR], balance: 0x20000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1d1d1d1d1d1d1d1d1d1d1d1ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: sendTokensArray(address[],uint256[]), txdata: 0x684a5181ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AzbitAirdrop
Function name: sendTokens(address,uint256)
PC address: 2421
Estimated Gas Usage: 6339 - 76643
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:457
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 212121212121212121212121deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: sendTokens(address,uint256), txdata: 0x05ab421d000000000000000000000000010101010101010101010101010101010101010108, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AzbitAirdrop
Function name: sendTokensArray(address[],uint256[])
PC address: 2421
Estimated Gas Usage: 6745 - 77049
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:457
Initial State:

Account: [CREATOR], balance: 0x4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1d1d1d1d1d1d1d1d1d1d1d1ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: sendTokensArray(address[],uint256[]), txdata: 0x684a5181ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: AzbitAirdrop
Function name: sendTokens(address,uint256)
PC address: 2421
Estimated Gas Usage: 6339 - 76643
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:457
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: sendTokens(address,uint256), txdata: 0x05ab421d000000000000000000000000010101010101010101010101010101010101010101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AzbitAirdrop
Function name: sendTokens(address,uint256)
PC address: 2421
Estimated Gas Usage: 6339 - 76643
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/524b0b8b77db75d038607a6f93f8eb06.sol:457
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 606060606060606060606060deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: sendTokens(address,uint256), txdata: 0x05ab421d000000000000000000000000010101010101010101010101010101010101010101, value: 0x0