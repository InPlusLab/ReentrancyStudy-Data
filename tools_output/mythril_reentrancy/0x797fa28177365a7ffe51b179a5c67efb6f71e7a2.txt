==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: BYE
Function name: mint(uint256)
PC address: 1794
Estimated Gas Usage: 14640 - 89774
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2f7dacc6808d5765d0fa30d8c421fd9b.sol:200

b(amount);
        _t

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: mint(uint256), txdata: 0xa0712d68064000d005402300100a4028a5481d40048682ab84084128a095870920992c20, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: BYE
Function name: mint(uint256)
PC address: 1820
Estimated Gas Usage: 14640 - 89774
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2f7dacc6808d5765d0fa30d8c421fd9b.sol:200

_balances[msg.sender].sub(amount);
        _totalSupply =

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: mint(uint256), txdata: 0xa0712d68064000d005402300100a4028a5481d40048682ab84084128a095870920992c20, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: BYE
Function name: mint(uint256)
PC address: 1823
Estimated Gas Usage: 14640 - 89774
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2f7dacc6808d5765d0fa30d8c421fd9b.sol:201


        eye

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: mint(uint256), txdata: 0xa0712d68064000d005402300100a4028a5481d40048682ab84084128a095870920992c20, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: BYE
Function name: mint(uint256)
PC address: 1836
Estimated Gas Usage: 14640 - 89774
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2f7dacc6808d5765d0fa30d8c421fd9b.sol:201

ly.sub(amount);
        eye.transfer(ms

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: mint(uint256), txdata: 0xa0712d68064000d005402300100a4028a5481d40048682ab84084128a095870920992c20, value: 0x0


