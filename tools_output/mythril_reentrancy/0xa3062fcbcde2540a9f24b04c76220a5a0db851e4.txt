==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PaymentHandler
Function name: fallback
PC address: 329
Estimated Gas Usage: 5864 - 109838
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/791732254fbcc2e15310e657f3bebaf9.sol:147

g.sender, msg.value);
	}

	/**
	

--------------------
Initial State:

Account: [CREATOR], balance: 0x40289140012000481, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x80108040, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PaymentHandler
Function name: fallback
PC address: 603
Estimated Gas Usage: 5864 - 109838
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/791732254fbcc2e15310e657f3bebaf9.sol:153

epTokens(IERC20 token) public {
		// Get the owner address
		address 

--------------------
Initial State:

Account: [CREATOR], balance: 0xe3f21, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: eeeeeeeeeeeeeeeeeeeeeeeedeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x01010101, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PaymentHandler
Function name: sweepTokens(address) or sweepTokens(address)
PC address: 1312
Estimated Gas Usage: 6072 - 110183
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/791732254fbcc2e15310e657f3bebaf9.sol:168

dity ^0.5.0;




/**
 * The Pa

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: sweepTokens(address), txdata: 0xf5f6d3af0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PaymentHandler
Function name: sweepTokens(address) or sweepTokens(address)
PC address: 1536
Estimated Gas Usage: 6072 - 110183
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/791732254fbcc2e15310e657f3bebaf9.sol:174

handler contracts.
 * It deploys and 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: sweepTokens(address), txdata: 0xf5f6d3af000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: PaymentMaster
Function name: handlerList(uint256)
PC address: 2150
Estimated Gas Usage: 1172 - 1267
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/791732254fbcc2e15310e657f3bebaf9.sol:188

address indexed _addr);
	eve

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: handlerList(uint256), txdata: 0xa453b36a0000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: PaymentMaster
Function name: sweepTokens(address) or sweepTokens(address)
PC address: 3409
Estimated Gas Usage: 5420 - 109201
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/791732254fbcc2e15310e657f3bebaf9.sol:257
Initial State:

Account: [CREATOR], balance: 0x40100009a00060000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: sweepTokens(address), txdata: 0xf5f6d3afbfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcf, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: PaymentMaster
Function name: sweepTokens(address) or sweepTokens(address)
PC address: 3602
Estimated Gas Usage: 5420 - 109201
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/791732254fbcc2e15310e657f3bebaf9.sol:257
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: sweepTokens(address), txdata: 0xf5f6d3af000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0