==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BYToken
Function name: transferAndCall(address,uint256,bytes)
PC address: 623
Estimated Gas Usage: 17133 - 100293
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/daef6b3d12504d632c5bca02ff96a95a.sol:178

veTransfer(address,uint,address,bytes)"))), msg.sender, _value, this, _extraData)) { return true; }
		}
		else {
            return false;
        } 
    }
	
	function approveAndCall(address _spender, uint _value, bytes _extraData) public returns (bool success) {
		if(approve(_spender,_value)){
			if(_spender.call(bytes4(bytes32(keccak

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferAndCall(address,uint256,bytes), txdata: 0x4000aea000000000000000000000000008000000000080080008000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: BYToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 899
Estimated Gas Usage: 8909 - 71312
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/daef6b3d12504d632c5bca02ff96a95a.sol:187

eceiveApproval(address,uint,address,bytes)"))), msg.sender, _value, this, _extraData)) { return true; }
		}
		else {
            return false;
        } 
    }
	
	// transfer balance to owner
	function withdrawEther(uint amount) public {
		if(msg.sender == owner){
			owner.transfer(amount);
		}
	}
	
	// can accept ether
	function() public payable {

--------------------
Initial State:

Account: [CREATOR], balance: 0x40100000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca5100000000000000000000000000000000000000000000000100000000000100000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BYToken
Function name: approveAndCall(address,uint256,bytes)
PC address: 1909
Estimated Gas Usage: 8909 - 71312
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/daef6b3d12504d632c5bca02ff96a95a.sol:181

;
        } 
    }
	
	function approveAndCall(address _spender, uint _value, bytes _extraData) public returns (bool succe

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0