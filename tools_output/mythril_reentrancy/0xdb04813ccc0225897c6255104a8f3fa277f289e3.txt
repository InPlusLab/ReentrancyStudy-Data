==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: GTTAirdrop
Function name: emergencyDrain(uint256)
PC address: 811
Estimated Gas Usage: 4347 - 40089
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/60c55dd952d94bc621b2df744a70738d.sol:64
Initial State:

Account: [CREATOR], balance: 0xc0000000003, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: emergencyDrain(uint256), txdata: 0x70544b74, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GTTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1348
Estimated Gas Usage: 20018 - 135477
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/60c55dd952d94bc621b2df744a70738d.sol:53

mit Tok

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a09f8000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: GTTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1563
Estimated Gas Usage: 20018 - 135477
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/60c55dd952d94bc621b2df744a70738d.sol:53

mit TokenDrop( recipients[i], amount );


--------------------
Initial State:

Account: [CREATOR], balance: 0x80011, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: airDrop(address[],uint256), txdata: 0xfd1fc4a09ffffffffffffffffffffc00000000000000000000000000000000000000000001, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: GTTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1563
Estimated Gas Usage: 20018 - 135477
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/60c55dd952d94bc621b2df744a70738d.sol:53

mit TokenDrop( recipients[i], amount );


--------------------
Initial State:

Account: [CREATOR], balance: 0x40002081093, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0c00000000000000000000000000000180000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GTTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1563
Estimated Gas Usage: 20018 - 135477
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/60c55dd952d94bc621b2df744a70738d.sol:53

mit TokenDrop( recipients[i], amount );


--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a09f8000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GTTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1737
Estimated Gas Usage: 20018 - 135477
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/60c55dd952d94bc621b2df744a70738d.sol:57

ents.length * amount;
  }


 

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a09f8000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GTTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1744
Estimated Gas Usage: 20018 - 135477
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/60c55dd952d94bc621b2df744a70738d.sol:57

ents.length * amount;
  }


 

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a09f8000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: GTTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1749
Estimated Gas Usage: 20018 - 135477
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/60c55dd952d94bc621b2df744a70738d.sol:61

ain( uint amount ) onlyOwn

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0
Caller: [CREATOR], function: airDrop(address[],uint256), txdata: 0xfd1fc4a0fffffe0000000000fe00003fffffcfff80000000004000000000000000000002ff, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GTTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1756
Estimated Gas Usage: 20018 - 135477
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/60c55dd952d94bc621b2df744a70738d.sol:61

on emergencyDrain( uint amount ) onlyOwn

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a09f8000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: GTTAirdrop
Function name: airDrop(address[],uint256)
PC address: 1763
Estimated Gas Usage: 20018 - 135477
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/60c55dd952d94bc621b2df744a70738d.sol:61

on emergencyDrain( uint amount ) onlyOwn

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: airDrop(address[],uint256), txdata: 0xfd1fc4a09f8000000000000000000000000000000000000000000000000000000000000001, value: 0x0