with mythril_dir
==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ExoTokensSwap
Function name: swapERC20Token(uint256)
PC address: 916
Estimated Gas Usage: 10202 - 150526
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3ef1731ec0a4a2f9d1ee52ab9ddcbe60.sol:54

nTo_bal

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: swapERC20Token(uint256), txdata: 0x29b6d53101, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ExoTokensSwap
Function name: swapERC20Token(uint256)
PC address: 1018
Estimated Gas Usage: 10202 - 150526
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3ef1731ec0a4a2f9d1ee52ab9ddcbe60.sol:54

nTo_balance >= fromAmou

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000f3f68, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: swapERC20Token(uint256), txdata: 0x29b6d53101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ExoTokensSwap
Function name: swapERC20Token(uint256)
PC address: 1018
Estimated Gas Usage: 10202 - 150526
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3ef1731ec0a4a2f9d1ee52ab9ddcbe60.sol:54

nTo_balance >= fromAmou

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: swapERC20Token(uint256), txdata: 0x29b6d53101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ExoTokensSwap
Function name: swapERC20Token(uint256)
PC address: 1078
Estimated Gas Usage: 10202 - 150526
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3ef1731ec0a4a2f9d1ee52ab9ddcbe60.sol:55

 // Take 

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: swapERC20Token(uint256), txdata: 0x29b6d53101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ExoTokensSwap
Function name: swapERC20Token(uint256)
PC address: 1193
Estimated Gas Usage: 10202 - 150526
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3ef1731ec0a4a2f9d1ee52ab9ddcbe60.sol:55

 // Take erc20 tokens from sender
        require(To

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: swapERC20Token(uint256), txdata: 0x29b6d53101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ExoTokensSwap
Function name: swapERC20Token(uint256)
PC address: 1248
Estimated Gas Usage: 10202 - 150526
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3ef1731ec0a4a2f9d1ee52ab9ddcbe60.sol:56

0 to se

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: swapERC20Token(uint256), txdata: 0x29b6d53101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: ExoTokensSwap
Function name: swapERC20Token(uint256)
PC address: 1357
Estimated Gas Usage: 10202 - 150526
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3ef1731ec0a4a2f9d1ee52ab9ddcbe60.sol:56

0 to sender
    }

    function moveERC2

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: swapERC20Token(uint256), txdata: 0x29b6d53101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ExoTokensSwap
Function name: moveERC20Tokens(address,address,uint256)
PC address: 1804
Estimated Gas Usage: 2907 - 38649
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3ef1731ec0a4a2f9d1ee52ab9ddcbe60.sol:64

o move any ether on addre

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: moveERC20Tokens(address,address,uint256), txdata: 0xa15cdbf7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


