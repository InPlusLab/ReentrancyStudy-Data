==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CupExchange
Function name: safeWithdrawal(address) or safeWithdrawal(address)
PC address: 1103
Estimated Gas Usage: 6205 - 76509
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:123

ForThisCoin
    */
    function 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: safeWithdrawal(address), txdata: 0x6fd42b3200000000000000000000000001, value: 0x0
Caller: [CREATOR], function: safeWithdrawal(address), txdata: 0x6fd42b328e8e8e8e8e8e8e8e8e8e8e8e01, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CupExchange
Function name: safeWithdrawal(address) or safeWithdrawal(address)
PC address: 1167
Estimated Gas Usage: 6205 - 76509
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:125

Price(i

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: safeWithdrawal(address), txdata: 0x6fd42b3200000000000000000000000001, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CupExchange
Function name: safeWithdrawal(address) or safeWithdrawal(address)
PC address: 1361
Estimated Gas Usage: 6205 - 76509
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:125

Price(int256 price) public onlyOwner {

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8e8edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: safeWithdrawal(address), txdata: 0x6fd42b3200000000000000000000000001, value: 0x0
Caller: [CREATOR], function: safeWithdrawal(address), txdata: 0x6fd42b328e8e8e8e8e8e8e8e8e8e8e8e01, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CupExchange
Function name: safeWithdrawal(address) or safeWithdrawal(address)
PC address: 1361
Estimated Gas Usage: 6205 - 76509
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:125

Price(int256 price) public onlyOwner {

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: safeWithdrawal(address), txdata: 0x6fd42b3200000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CupExchange
Function name: safeWithdrawal(address) or safeWithdrawal(address)
PC address: 1361
Estimated Gas Usage: 6205 - 76509
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:125

Price(int256 price) public onlyOwner {

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1d1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: safeWithdrawal(address), txdata: 0x6fd42b3200000000000000000000000001, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 2189
Estimated Gas Usage: 13105 - 154205
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:100

(msg.sender, this, allowance));

--------------------
Initial State:

Account: [CREATOR], balance: 0x80, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 2268
Estimated Gas Usage: 13105 - 154205
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:103

 te

--------------------
Initial State:

Account: [CREATOR], balance: 0x400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 2514
Estimated Gas Usage: 13105 - 154205
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:103

 teamCupBalance = teamCup.balanceOf(address(t

--------------------
Initial State:

Account: [CREATOR], balance: 0x80, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 2514
Estimated Gas Usage: 13105 - 154205
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:103

 teamCupBalance = teamCup.balanceOf(address(t

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 2514
Estimated Gas Usage: 13105 - 154205
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:103

 teamCupBalance = teamCup.balanceOf(address(t

--------------------
Initial State:

Account: [CREATOR], balance: 0x400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 2587
Estimated Gas Usage: 13105 - 154205
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:105

equire(

--------------------
Initial State:

Account: [CREATOR], balance: 0x400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 2773
Estimated Gas Usage: 13105 - 154205
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:105

equire(teamCupAmount <= teamCupB

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 2773
Estimated Gas Usage: 13105 - 154205
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:105

equire(teamCupAmount <= teamCupB

--------------------
Initial State:

Account: [CREATOR], balance: 0x400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 2834
Estimated Gas Usage: 13105 - 154205
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:106

ender, teamCu

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 2859
Estimated Gas Usage: 13105 - 154205
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:108

);
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 3053
Estimated Gas Usage: 13105 - 154205
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:108

);
    }

    /**
     * Withdraw the funds

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: CupExchange
Function name: exchange() or exchange()
PC address: 3053
Estimated Gas Usage: 13105 - 154205
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/eed72ba6169a05e56be10197913550a4.sol:108

);
    }

    /**
     * Withdraw the funds

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: unhalt(), txdata: 0xcb3e64fd, value: 0x0
Caller: [SOMEGUY], function: exchange(), txdata: 0xd2f7265a, value: 0x0