==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GiftOfCompound
Function name: constructor
PC address: 166
Estimated Gas Usage: 61241 - 390939
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23f30c47f6b654e1fbd6d6a9ec2b1a0e.sol:135

roup  returns(bool)  {
       

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064, value: 0x1

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: GiftOfCompound
Function name: constructor
PC address: 191
Estimated Gas Usage: 21921 - 105447
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23f30c47f6b654e1fbd6d6a9ec2b1a0e.sol:60

RC20 {
    fun

--------------------
Initial State:

Account: [CREATOR], balance: 0x3230e3007b06100c, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000adea5c4304555b22514d517831a842520012a7014231ed9f612109ba02c88a2093, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GiftOfCompound
Function name: constructor
PC address: 829
Estimated Gas Usage: 61241 - 390939
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23f30c47f6b654e1fbd6d6a9ec2b1a0e.sol:205

    

--------------------
Initial State:

Account: [CREATOR], balance: 0x190260505300000f, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064, value: 0x1

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: GiftOfCompound
Function name: constructor
PC address: 966
Estimated Gas Usage: 61241 - 390939
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23f30c47f6b654e1fbd6d6a9ec2b1a0e.sol:204

mount = cdaiAmount;
        return cdaiAmount;
    }
    
    function amountEntitl

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GiftOfCompound
Function name: constructor
PC address: 966
Estimated Gas Usage: 61241 - 390939
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23f30c47f6b654e1fbd6d6a9ec2b1a0e.sol:204

mount = cdaiAmount;
        return cdaiAmount;
    }
    
    function amountEntitl

--------------------
Initial State:

Account: [CREATOR], balance: 0x190260505300000f, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GiftOfCompound
Function name: constructor
PC address: 1012
Estimated Gas Usage: 61241 - 390939
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23f30c47f6b654e1fbd6d6a9ec2b1a0e.sol:208

s qA

--------------------
Initial State:

Account: [CREATOR], balance: 0x10040000000010017, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GiftOfCompound
Function name: constructor
PC address: 1116
Estimated Gas Usage: 61241 - 390939
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23f30c47f6b654e1fbd6d6a9ec2b1a0e.sol:208

s qAddress) constant

--------------------
Initial State:

Account: [CREATOR], balance: 0x10040000000010017, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GiftOfCompound
Function name: constructor
PC address: 1162
Estimated Gas Usage: 61241 - 390939
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23f30c47f6b654e1fbd6d6a9ec2b1a0e.sol:209

int2

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GiftOfCompound
Function name: constructor
PC address: 1265
Estimated Gas Usage: 61241 - 390939
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23f30c47f6b654e1fbd6d6a9ec2b1a0e.sol:209

int256 usersPercenta

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064, value: 0x1

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: GiftOfCompound
Function name: constructor
PC address: 1313
Estimated Gas Usage: 61241 - 390939
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/23f30c47f6b654e1fbd6d6a9ec2b1a0e.sol:210

     if(qAddress== theRecipient){


--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064, value: 0x1


