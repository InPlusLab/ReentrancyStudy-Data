==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLottery
Function name: kill()
PC address: 526
Estimated Gas Usage: 1006 - 1431
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a868ae3d6d0bea179a87da5e4767ef82.sol:36

    _;
    }
  
    modifier

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: kill(), txdata: 0x41c0e1b5, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLottery
Function name: forceReseed()
PC address: 693
Estimated Gas Usage: 1053 - 1478
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a868ae3d6d0bea179a87da5e4767ef82.sol:36

    _;
    }
  
    modifier

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AddressLottery
Function name: forceReseed()
PC address: 733
Estimated Gas Usage: 34812 - 156743
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a868ae3d6d0bea179a87da5e4767ef82.sol:81

onent4 = tx.gasp

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AddressLottery
Function name: forceReseed()
PC address: 751
Estimated Gas Usage: 34812 - 156743
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a868ae3d6d0bea179a87da5e4767ef82.sol:82


    }
    
    fun

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AddressLottery
Function name: forceReseed()
PC address: 763
Estimated Gas Usage: 34812 - 156743
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/a868ae3d6d0bea179a87da5e4767ef82.sol:87

   // DEBUG, DE

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLottery
Function name: participate()
PC address: 888
Estimated Gas Usage: 216 - 311
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a868ae3d6d0bea179a87da5e4767ef82.sol:41

   _;
    }
    
    function pa

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: participate(), txdata: 0xd11711a2, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLottery
Function name: participate()
PC address: 1022
Estimated Gas Usage: 3071 - 4062
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/a868ae3d6d0bea179a87da5e4767ef82.sol:50

ckyNumber)
        {
            participated[msg.sender] = true;
            require(msg.sender.call.value(this.balance)());
        }
    }
    
    function luckyNumberOfAddress(address

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x180000000000002, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: participate(), txdata: 0xd11711a2, value: 0x16345785d8a0000

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AddressLottery
Function name: participate()
PC address: 1177
Estimated Gas Usage: 10533 - 66230
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/a868ae3d6d0bea179a87da5e4767ef82.sol:55

  }
    
    function luckyNumberOfAd

--------------------
Initial State:

Account: [CREATOR], balance: 0x400010008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8000000000000001, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: participate(), txdata: 0xd11711a2, value: 0x16345785d8a0000