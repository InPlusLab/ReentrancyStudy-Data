==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AirDropperCore
Function name: triggerAirDrops(address[])
PC address: 245
Estimated Gas Usage: 35911 - 121470
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:357

oken

     */

    function triggerAirDrop(address recipient)

        public

        onlyOwner

    {

        numOfCitizensWhoReceivedDrops = numOfCitizensWhoReceivedDrops.add(1);



        require(

            numOfCiti

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 256
Estimated Gas Usage: 40903 - 196250
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:357

oken

     */

    function triggerAirDrop(address recipient)

        public

        onlyOwner

    {

        numOfCitizensWhoReceivedDrops = numOfCitizensWhoReceivedDrops.add(1);



        require(

            numOfCiti

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000001, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1322
Estimated Gas Usage: 40903 - 196250
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:83

inqui

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1345
Estimated Gas Usage: 40903 - 196250
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:389

// eligible citizens for aird

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1367
Estimated Gas Usage: 40903 - 196250
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:385

s[recipient] = true;



        // eligible citizens for airdrop rec

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1370
Estimated Gas Usage: 40903 - 196250
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:391

mountPerUser);

     

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1404
Estimated Gas Usage: 40903 - 196250
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:393

cipient, tokenAmountPerUser);



--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1661
Estimated Gas Usage: 40903 - 196250
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:403

ensure the chain is

     * executed e

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1670
Estimated Gas Usage: 40903 - 196250
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:403

ensure the chain is

     * executed e

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1673
Estimated Gas Usage: 40903 - 196250
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:409

ve

     */

    f

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrop(address)
PC address: 1687
Estimated Gas Usage: 20118 - 97674
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:413

nt, uint256 tokenA

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000008000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrop(address), txdata: 0xd304380b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1687
Estimated Gas Usage: 40903 - 196250
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:413

nt, uint256 tokenA

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1815
Estimated Gas Usage: 40903 - 196250
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:511

nsf

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MintableAirDropper
Function name: triggerAirDrop(address)
PC address: 1926
Estimated Gas Usage: 20118 - 97674
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:511

nsferOwnership(newZuluOwner);

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrop(address), txdata: 0xd304380b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1926
Estimated Gas Usage: 40903 - 196250
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:511

nsferOwnership(newZuluOwner);

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1926
Estimated Gas Usage: 40903 - 196250
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:511

nsferOwnership(newZuluOwner);

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000001, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MintableAirDropper
Function name: triggerAirDrops(address[])
PC address: 1926
Estimated Gas Usage: 40903 - 196250
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/07109637074436cb360ca2a89d2bb9d0.sol:511

nsferOwnership(newZuluOwner);

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 00000000000000000040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: triggerAirDrops(address[]), txdata: 0x47faffcb80, value: 0x0


