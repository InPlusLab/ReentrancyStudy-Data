==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Owned
Function name: execute(address,uint256,bytes) or execute(address,uint256,bytes)
PC address: 1105
Estimated Gas Usage: 2453 - 40638
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/b5d779808529cc226352a0ae03a9e8f4.sol:53

ract WedIndex 

contract WedIn

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: execute(address,uint256,bytes), txdata: 0xb61d27f6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: Owned
Function name: execute(address,uint256,bytes) or execute(address,uint256,bytes)
PC address: 1105
Estimated Gas Usage: 2453 - 40638
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: /tmp/b5d779808529cc226352a0ae03a9e8f4.sol:53

ract WedIndex 

contract WedIn

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: execute(address,uint256,bytes), txdata: 0xb61d27f6000000000000000000000000000000000000000000000000000000000000003d, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: WedIndex
Function name: indexarray(uint256)
PC address: 2761
Estimated Gas Usage: 1163 - 1258
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/b5d779808529cc226352a0ae03a9e8f4.sol:67

  uint indexdate;
        stri

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: indexarray(uint256), txdata: 0xb394c794, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: WedIndex
Function name: execute(address,uint256,bytes) or execute(address,uint256,bytes)
PC address: 3041
Estimated Gas Usage: 2585 - 40770
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/b5d779808529cc226352a0ae03a9e8f4.sol:53

ract WedIndex 

contract WedIn

--------------------
Initial State:

Account: [CREATOR], balance: 0x182fd0edd7debc17, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: execute(address,uint256,bytes), txdata: 0xb61d27f6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: WedIndex
Function name: execute(address,uint256,bytes) or execute(address,uint256,bytes)
PC address: 3041
Estimated Gas Usage: 2585 - 40770
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: /tmp/b5d779808529cc226352a0ae03a9e8f4.sol:53

ract WedIndex 

contract WedIn

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: execute(address,uint256,bytes), txdata: 0xb61d27f6000000000000000000000000000000000000000000000000000000000000003d, value: 0x0