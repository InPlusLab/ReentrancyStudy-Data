==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: MetadollarCurrencyGateway
Function name: transferFee()
PC address: 4915
Estimated Gas Usage: 17290 - 126747
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:189

Token(_tokenAddress);
      retu

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferFee(), txdata: 0xacb2ad6f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MetadollarCurrencyGateway
Function name: balanceOfToken(address,address)
PC address: 5649
Estimated Gas Usage: 2411 - 37349
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:196

er] > 0);
      uint valu

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: balanceOfToken(address,address), txdata: 0xf59e38b7000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MetadollarCurrencyGateway
Function name: payToken(address,address,uint256,uint256)
PC address: 6066
Estimated Gas Usage: 27343 - 179438
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:167

nder, _sellerAddress, _value, _to

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: payToken(address,address,uint256,uint256), txdata: 0xf64ccca6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef020801200080800210040010deadbeefdeadbeefdeadbeefdeadbeefdeadbeef020801200080800210040010deadbeefdeadbeefdeadbeefdeadbeefdeadbeef22, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MetadollarCurrencyGateway
Function name: payToken(address,address,uint256,uint256)
PC address: 6353
Estimated Gas Usage: 27343 - 179438
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:168

uccess = true;
    }
    function payEth(address _sell

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: payToken(address,address,uint256,uint256), txdata: 0xf64ccca6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef020801200080800210040010deadbeefdeadbeefdeadbeefdeadbeefdeadbeef020801200080800210040010deadbeefdeadbeefdeadbeefdeadbeefdeadbeef22, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: MetadollarCurrencyGateway
Function name: payToken(address,address,uint256,uint256)
PC address: 6353
Estimated Gas Usage: 27343 - 179438
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:168

uccess = true;
    }
    function payEth(address _sell

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x40, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: payToken(address,address,uint256,uint256), txdata: 0xf64ccca600000000000000000000000000000000000000000000000000000000000000020010404010000180400020800000000000000004000000000000000000000000001000100020010000102000002004801080400000000210804000010040408022, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MetadollarCurrencyGateway
Function name: payToken(address,address,uint256,uint256)
PC address: 6607
Estimated Gas Usage: 27343 - 179438
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:170

, uint _orderId, uint _value) public returns  (bool success){
      require(_sellerAddress != 

--------------------
Initial State:

Account: [CREATOR], balance: 0x88222034, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: payToken(address,address,uint256,uint256), txdata: 0xf64ccca6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MetadollarCurrencyGateway
Function name: payToken(address,address,uint256,uint256)
PC address: 6660
Estimated Gas Usage: 27343 - 179438
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:170

, uint _orderId, uint _value) public returns  (bool success){
      require(_sellerAddress != 

--------------------
Initial State:

Account: [CREATOR], balance: 0x88222034, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: payToken(address,address,uint256,uint256), txdata: 0xf64ccca6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MetadollarCurrencyGateway
Function name: payToken(address,address,uint256,uint256)
PC address: 6678
Estimated Gas Usage: 27343 - 179438
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:170

, uint _orderId, uint _value) public returns  (bool success){
      require(_sellerAddress != 

--------------------
Initial State:

Account: [CREATOR], balance: 0x88222034, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: payToken(address,address,uint256,uint256), txdata: 0xf64ccca6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MetadollarCurrencyGateway
Function name: payToken(address,address,uint256,uint256)
PC address: 6731
Estimated Gas Usage: 27343 - 179438
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:170

, uint _orderId, uint _value) public returns  (bool success){
      require(_sellerAddress != 

--------------------
Initial State:

Account: [CREATOR], balance: 0x88222034, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: payToken(address,address,uint256,uint256), txdata: 0xf64ccca6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MetadollarCurrencyGateway
Function name: payToken(address,address,uint256,uint256)
PC address: 6742
Estimated Gas Usage: 27343 - 179438
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:170

, uint _orderId, uint _value) public returns  (bool success){
      require(_sellerAddress != 

--------------------
Initial State:

Account: [CREATOR], balance: 0x88222034, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: payToken(address,address,uint256,uint256), txdata: 0xf64ccca6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MetadollarCurrencyGateway
Function name: payToken(address,address,uint256,uint256)
PC address: 6759
Estimated Gas Usage: 27343 - 179438
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:170

, uint _orderId, uint _value) public returns  (bool success){
      require(_sellerAddress != 

--------------------
Initial State:

Account: [CREATOR], balance: 0x88222034, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: payToken(address,address,uint256,uint256), txdata: 0xf64ccca6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MetadollarCurrencyGateway
Function name: payToken(address,address,uint256,uint256)
PC address: 6812
Estimated Gas Usage: 27343 - 179438
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/902d4d04a782d26c15dbfc0298a321a5.sol:170

, uint _orderId, uint _value) public returns  (bool success){
      require(_sellerAddress != 

--------------------
Initial State:

Account: [CREATOR], balance: 0x88222034, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: payToken(address,address,uint256,uint256), txdata: 0xf64ccca6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001, value: 0x0