==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DSAuth
Function name: setOwner(address) or setOwner(address)
PC address: 479
Estimated Gas Usage: 12497 - 69436
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:45

ner);
    }

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x13, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setOwner(address), txdata: 0x13af4035, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DSAuth
Function name: setOwner(address) or setOwner(address)
PC address: 532
Estimated Gas Usage: 12497 - 69436
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:45

ner);
    }

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x13, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setOwner(address), txdata: 0x13af4035, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DSAuth
Function name: setOwner(address) or setOwner(address)
PC address: 539
Estimated Gas Usage: 12497 - 69436
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:48

uthor

--------------------
Initial State:

Account: [CREATOR], balance: 0x13, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setOwner(address), txdata: 0x13af4035, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DSAuth
Function name: setAuthority(address) or setAuthority(address)
PC address: 704
Estimated Gas Usage: 12519 - 69458
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:53

y(authority);
    }

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x902a0002070010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: setAuthority(address), txdata: 0x7a9e5e4b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DSAuth
Function name: setAuthority(address) or setAuthority(address)
PC address: 757
Estimated Gas Usage: 12519 - 69458
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:53

y(authority);
    }

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x902a0002070010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: setAuthority(address), txdata: 0x7a9e5e4b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: DSAuth
Function name: setAuthority(address) or setAuthority(address)
PC address: 763
Estimated Gas Usage: 12519 - 69458
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:57

re(isAuth

--------------------
Initial State:

Account: [CREATOR], balance: 0x902a0002070010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: setAuthority(address), txdata: 0x7a9e5e4b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetPriceOracle
Function name: setOwner(address) or setOwner(address)
PC address: 946
Estimated Gas Usage: 12497 - 69436
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:45

ner);
    }

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setOwner(address), txdata: 0x13af4035, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetPriceOracle
Function name: setOwner(address) or setOwner(address)
PC address: 999
Estimated Gas Usage: 12497 - 69436
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:45

ner);
    }

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setOwner(address), txdata: 0x13af4035, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetPriceOracle
Function name: setOwner(address) or setOwner(address)
PC address: 1006
Estimated Gas Usage: 12497 - 69436
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:48

uthor

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setOwner(address), txdata: 0x13af4035, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetPriceOracle
Function name: recordAssetPrice(uint128,uint128,uint128)
PC address: 1281
Estimated Gas Usage: 18760 - 96459
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:99

mber].isRecord = true;
        emit AssetPriceRecorde

--------------------
Initial State:

Account: [CREATOR], balance: 0x109a000000100, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: recordAssetPrice(uint128,uint128,uint128), txdata: 0x4b9ce83c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetPriceOracle
Function name: recordAssetPrice(uint128,uint128,uint128)
PC address: 1326
Estimated Gas Usage: 18760 - 96459
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:99

mber].isRecord = true;
        emit AssetPriceRecorde

--------------------
Initial State:

Account: [CREATOR], balance: 0x109a000000100, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: recordAssetPrice(uint128,uint128,uint128), txdata: 0x4b9ce83c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetPriceOracle
Function name: recordAssetPrice(uint128,uint128,uint128)
PC address: 1448
Estimated Gas Usage: 18760 - 96459
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:100

blockNumber, price);
    }

    function getAssetPrice(

--------------------
Initial State:

Account: [CREATOR], balance: 0x109a000000100, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: recordAssetPrice(uint128,uint128,uint128), txdata: 0x4b9ce83c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetPriceOracle
Function name: recordAssetPrice(uint128,uint128,uint128)
PC address: 1462
Estimated Gas Usage: 18760 - 96459
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:100

blockNumber, price);
    }

    function getAssetPrice(

--------------------
Initial State:

Account: [CREATOR], balance: 0x109a000000100, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: recordAssetPrice(uint128,uint128,uint128), txdata: 0x4b9ce83c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DSAuth
Function name: setOwner(address) or setOwner(address)
PC address: 1502
Estimated Gas Usage: 12497 - 69436
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:74

acts/AssetPriceOracle.sol

contra

--------------------
Initial State:

Account: [CREATOR], balance: 0x40104000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x20000000000000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setOwner(address), txdata: 0x13af4035, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DSAuth
Function name: setAuthority(address) or setAuthority(address)
PC address: 1502
Estimated Gas Usage: 12519 - 69458
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:74

acts/AssetPriceOracle.sol

contra

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setAuthority(address), txdata: 0x7a9e5e4b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetPriceOracle
Function name: setAuthority(address) or setAuthority(address)
PC address: 1636
Estimated Gas Usage: 12541 - 69480
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:53

y(authority);
    }

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000004002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setAuthority(address), txdata: 0x7a9e5e4b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetPriceOracle
Function name: setAuthority(address) or setAuthority(address)
PC address: 1689
Estimated Gas Usage: 12541 - 69480
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:53

y(authority);
    }

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000004002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setAuthority(address), txdata: 0x7a9e5e4b, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: AssetPriceOracle
Function name: setAuthority(address) or setAuthority(address)
PC address: 1695
Estimated Gas Usage: 12541 - 69480
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:57

re(isAuth

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000004002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x10, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: setAuthority(address), txdata: 0x7a9e5e4b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AssetPriceOracle
Function name: recordAssetPrice(uint128,uint128,uint128)
PC address: 2708
Estimated Gas Usage: 18760 - 96459
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:74

acts/AssetPriceOracle.sol

contra

--------------------
Initial State:

Account: [CREATOR], balance: 0x10498003e00, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: recordAssetPrice(uint128,uint128,uint128), txdata: 0x4b9ce83c, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AssetPriceOracle
Function name: setOwner(address) or setOwner(address)
PC address: 2708
Estimated Gas Usage: 12497 - 69436
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:74

acts/AssetPriceOracle.sol

contra

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000000000080004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: setOwner(address), txdata: 0x13af4035, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AssetPriceOracle
Function name: setAuthority(address) or setAuthority(address)
PC address: 2708
Estimated Gas Usage: 12541 - 69480
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/bdde927ab1915dde3985f1502ec4351e.sol:74

acts/AssetPriceOracle.sol

contra

--------------------
Initial State:

Account: [CREATOR], balance: 0x800, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setAuthority(address), txdata: 0x7a9e5e4b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: setAuthority(address), txdata: 0x7a9e5e4b, value: 0x0