==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Blocktorial
Function name: mintToken(address,uint256)
PC address: 3023
Estimated Gas Usage: 12912 - 53527
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/8a6baf11efa8759966580ddfbbf8039c.sol:125
Initial State:

Account: [CREATOR], balance: 0x83000000000404, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: mintToken(address,uint256), txdata: 0x79c65068000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffeffffffffffffffffffffffffffffffffffffffffffc0000001000000c0000001, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Blocktorial
Function name: mintToken(address,uint256)
PC address: 3039
Estimated Gas Usage: 12912 - 53527
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/8a6baf11efa8759966580ddfbbf8039c.sol:125
Initial State:

Account: [CREATOR], balance: 0x1000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: mintToken(address,uint256), txdata: 0x79c650680000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffb9c90e162a75d0e4005000, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Blocktorial
Function name: approveAndCall(address,uint256,bytes)
PC address: 4073
Estimated Gas Usage: 9490 - 68595
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/8a6baf11efa8759966580ddfbbf8039c.sol:94

    }
  }

// To allow only the owner to burn add the 'onlyOwner'
// f

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000089001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020, value: 0x0