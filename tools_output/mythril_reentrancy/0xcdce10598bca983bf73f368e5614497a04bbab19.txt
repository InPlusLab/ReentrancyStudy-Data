==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenVesting
Function name: killVesting()
PC address: 1337
Estimated Gas Usage: 12661 - 68845
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:507
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0a0a0a0a0a0a0a0a0a0a0a0adeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: killVesting(), txdata: 0x0a0a2876, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenVesting
Function name: killVesting()
PC address: 1397
Estimated Gas Usage: 12661 - 68845
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:507
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0a0a0a0a0a0a0a0a0a0a0a0adeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: killVesting(), txdata: 0x0a0a2876, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenVesting
Function name: killVesting()
PC address: 1402
Estimated Gas Usage: 12661 - 68845
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:507
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0a0a0a0a0a0a0a0a0a0a0a0adeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: killVesting(), txdata: 0x0a0a2876, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenVesting
Function name: fundVesting(uint256)
PC address: 3389
Estimated Gas Usage: 15402 - 107093
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:435

wReceiver != address(0));

    receiv

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: dddddddddddddddddddddddddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: fundVesting(uint256), txdata: 0x73913545dd62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenVesting
Function name: fundVesting(uint256)
PC address: 3463
Estimated Gas Usage: 15402 - 107093
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:443

  /**

  *@dev function th

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: dddddddddddddddddddddddddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: fundVesting(uint256), txdata: 0x73913545dd62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenVesting
Function name: fundVesting(uint256)
PC address: 3470
Estimated Gas Usage: 15402 - 107093
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:445

 rece

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: dddddddddddddddddddddddddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: fundVesting(uint256), txdata: 0x73913545dd62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenVesting
Function name: fundVesting(uint256)
PC address: 3531
Estimated Gas Usage: 15402 - 107093
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:445

token

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: dddddddddddddddddddddddddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: fundVesting(uint256), txdata: 0x73913545dd62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenVesting
Function name: fundVesting(uint256)
PC address: 3564
Estimated Gas Usage: 15402 - 107093
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:445

only by

  

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: dddddddddddddddddddddddddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: fundVesting(uint256), txdata: 0x73913545dd62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: TokenVesting
Function name: fundVesting(uint256)
PC address: 3751
Estimated Gas Usage: 15402 - 107093
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:445

 receiver to claim tokens, can be called only by

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: dddddddddddddddddddddddddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: fundVesting(uint256), txdata: 0x73913545dd62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: TokenVesting
Function name: fundVesting(uint256)
PC address: 3751
Estimated Gas Usage: 15402 - 107093
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:445

 receiver to claim tokens, can be called only by

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: fundVesting(uint256), txdata: 0x73913545dd62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffe, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: TokenVesting
Function name: fundVesting(uint256)
PC address: 3751
Estimated Gas Usage: 15402 - 107093
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ea5772387f2ac112f7835eb2bf257333.sol:445

 receiver to claim tokens, can be called only by

   

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: dddddddddddddddddddddddddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: fundVesting(uint256), txdata: 0x73913545dd62ed3e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffe, value: 0x0