==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ReenterableMinter
Function name: mint(bytes32,address,uint256)
PC address: 895
Estimated Gas Usage: 11687 - 68395
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/e0ef113c8a8f7547468e098b9af2ee70.sol:71

true;
        }
        

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000020000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d4d4d4d4d4d4d4d4d4d4d4d4deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: mint(bytes32,address,uint256), txdata: 0x7ed9db59, value: 0x0
Caller: [CREATOR], function: mint(bytes32,address,uint256), txdata: 0x7ed9db5920, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ReenterableMinter
Function name: mint(bytes32,address,uint256)
PC address: 953
Estimated Gas Usage: 11687 - 68395
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/e0ef113c8a8f7547468e098b9af2ee70.sol:73

t_id);
    }

    IMintableToken pu

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: mint(bytes32,address,uint256), txdata: 0x7ed9db59, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ReenterableMinter
Function name: mint(bytes32,address,uint256)
PC address: 967
Estimated Gas Usage: 11687 - 68395
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/e0ef113c8a8f7547468e098b9af2ee70.sol:73

t_id);
    }

    IMintableToken pu

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 010101010101010101010101deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: mint(bytes32,address,uint256), txdata: 0x7ed9db59, value: 0x0