==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Weko
Function name: constructor
PC address: 327
Estimated Gas Usage: 71630 - 338177
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/de4e35f9788bb5a1bf0947ea37c299ab.sol:45

 10 * 10 ** (uint256(

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Weko
Function name: approveAndCall(address,uint256,bytes)
PC address: 1560
Estimated Gas Usage: 10802 - 73160
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/de4e35f9788bb5a1bf0947ea37c299ab.sol:191

spender, _value)) {
            spender.receiveApproval(msg.sender, _value, this, _extraData);
            return true;
        }
    }

    function burn(uint256 _value) public returns (bool success) {
        require(!buried[msg.sender]);
        require(balances[msg.sender] >= _value);
        balances[msg.sender] -= _value;

--------------------
Initial State:

Account: [CREATOR], balance: 0x200, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca5100000000000000000000000000000000010000000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Weko
Function name: amendRetention(uint8,uint8)
PC address: 3298
Estimated Gas Usage: 8106 - 29472
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/de4e35f9788bb5a1bf0947ea37c299ab.sol:102

lyDirector returns (bool suc

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendRetention(uint8,uint8), txdata: 0x5f5f2aef00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000081, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Weko
Function name: amendRetention(uint8,uint8)
PC address: 3311
Estimated Gas Usage: 8106 - 29472
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/de4e35f9788bb5a1bf0947ea37c299ab.sol:102

 closeSale() public onlyDirector returns (bool succ

--------------------
Initial State:

Account: [CREATOR], balance: 0xc1100000001041, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendRetention(uint8,uint8), txdata: 0x5f5f2aef000000000000000000000000000000000000000000000000000000000000004c0000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Weko
Function name: amendClaim(uint8,uint8,uint8,uint8)
PC address: 3927
Estimated Gas Usage: 18309 - 79675
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/de4e35f9788bb5a1bf0947ea37c299ab.sol:87

mals) - accuracy);
        f

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendClaim(uint8,uint8,uint8,uint8), txdata: 0x7dbc9fba00000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000088000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000f9, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Weko
Function name: amendClaim(uint8,uint8,uint8,uint8)
PC address: 3935
Estimated Gas Usage: 18309 - 79675
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/de4e35f9788bb5a1bf0947ea37c299ab.sol:87

et * 10 ** (uint256(decimals) - accuracy);
        fe

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendClaim(uint8,uint8,uint8,uint8), txdata: 0x7dbc9fba00000000000000000000000000000000000000000000000000000000000000ea000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000e20000000000000000000000000000000000000000000000000000000000000008, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Weko
Function name: amendClaim(uint8,uint8,uint8,uint8)
PC address: 3943
Estimated Gas Usage: 18309 - 79675
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/de4e35f9788bb5a1bf0947ea37c299ab.sol:88

* 10 ** (uint256(decimals) - accuracy);
        ret

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000e201, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendClaim(uint8,uint8,uint8,uint8), txdata: 0x7dbc9fba0000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000002600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Weko
Function name: amendClaim(uint8,uint8,uint8,uint8)
PC address: 3948
Estimated Gas Usage: 18309 - 79675
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/de4e35f9788bb5a1bf0947ea37c299ab.sol:92

  function amendEpoch(uint256 epochSet) public only

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: amendClaim(uint8,uint8,uint8,uint8), txdata: 0x7dbc9fba0000000000000000000000000000000000000000000000000000000000000059000000000000000000000000000000000000000000000000000000000000009c00000000000000000000000000000000000000000000000000000000000000bd0000000000000000000000000000000000000000000000000000000000000080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Weko
Function name: approveAndCall(address,uint256,bytes)
PC address: 4415
Estimated Gas Usage: 10803 - 72831
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000482, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: approveAndCall(address,uint256,bytes), txdata: 0xcae9ca51000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000080, value: 0x0