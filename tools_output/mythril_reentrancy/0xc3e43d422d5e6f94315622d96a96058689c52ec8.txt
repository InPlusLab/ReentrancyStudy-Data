==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantAdvisorsTokens(address)
PC address: 1999
Estimated Gas Usage: 10284 - 65696
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:174

erSupply > 0);

        token.mint(ben

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 4e4e4e4e4e4e4e4e4e4e4e4edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantAdvisorsTokens(address), txdata: 0x079caa14, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantAdvisorsTokens(address)
PC address: 2063
Estimated Gas Usage: 10284 - 65696
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:176

ounderSupply);
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x400000000000010, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 4e4e4e4e4e4e4e4e4e4e4e4edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantAdvisorsTokens(address), txdata: 0x079caa14, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: transferTokenOwnership(address)
PC address: 2352
Estimated Gas Usage: 3713 - 39311
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:153

 0);

        token.mint(beneficiary, 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 030303030303030303030303deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: transferTokenOwnership(address), txdata: 0x21e6b53d, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantFoundersTokens(address)
PC address: 2731
Estimated Gas Usage: 10350 - 65762
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:181



        token.mint(beneficiary, team

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 030303030303030303030303deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantFoundersTokens(address), txdata: 0x3814253f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantFoundersTokens(address)
PC address: 2795
Estimated Gas Usage: 10350 - 65762
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:184

      teamSupply 

--------------------
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 030303030303030303030303deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantFoundersTokens(address), txdata: 0x3814253f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3084
Estimated Gas Usage: 17399 - 178478
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:142

 assert(token.mint(contributor,

--------------------
Initial State:

Account: [CREATOR], balance: 0x62f1a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1e1e1e1e1e1e1e1e1e1e1e1e00000000000000000000000000000000000000001e1e1e1e1e1e1e1e1e1e1e1e00000000000000000000000000000000000000001e1e1e1e1e1e1e1e1e1e1e1edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3084
Estimated Gas Usage: 17550 - 178629
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:142

 assert(token.mint(contributor,

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 49494949494949494949494900000000000000000000000000000000000000004949494949494949494949490000000000000000000000000000000000000000494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3158
Estimated Gas Usage: 17399 - 178478
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:142

ributor))

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3f00000000000000000000000000000000000000003f3f3f3f3f3f3f3f3f3f3f3f00000000000000000000000000000000000000003f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3158
Estimated Gas Usage: 17550 - 178629
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:142

ributor))

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 49494949494949494949494900000000000000000000000000000000000000004949494949494949494949490000000000000000000000000000000000000000494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3344
Estimated Gas Usage: 17399 - 178478
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:142

ributor)));
        hasClaimedTokens[

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1e1e1e1e1e1e1e1e1e1e1e1e00000000010000000000000000010101010101401e1e1e1e1e1e1e1e1e1e1e1edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3344
Estimated Gas Usage: 17550 - 178629
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:142

ributor)));
        hasClaimedTokens[

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 4949494949494949494949490000000000000000000000000000000000000000494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3344
Estimated Gas Usage: 17399 - 178478
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:142

ributor)));
        hasClaimedTokens[

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3344
Estimated Gas Usage: 17550 - 178629
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:142

ributor)));
        hasClaimedTokens[

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3344
Estimated Gas Usage: 17399 - 178478
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:142

ributor)));
        hasClaimedTokens[

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3f00000000000000000000000000000000000000003f3f3f3f3f3f3f3f3f3f3f3f00000000000000000000000000000000000000003f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3344
Estimated Gas Usage: 17550 - 178629
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:142

ributor)));
        hasClaimedTokens[

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 49494949494949494949494900000000000000000000000000000000000000004949494949494949494949490000000000000000000000000000000000000000494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3424
Estimated Gas Usage: 6325 - 76724
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:143

 = true;

        return 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3435
Estimated Gas Usage: 17399 - 178478
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ction

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3f00000000010000000000000000010101010101403f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3435
Estimated Gas Usage: 17550 - 178629
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ction

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 4949494949494949494949490000000000000000000000000000000000000000494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3498
Estimated Gas Usage: 17399 - 178478
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ship(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3f00000000010000000000000000010101010101403f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3498
Estimated Gas Usage: 17550 - 178629
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ship(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 4949494949494949494949490000000000000000000000000000000000000000494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3684
Estimated Gas Usage: 17399 - 178478
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ship(address newTokenOwner) onl

--------------------
Initial State:

Account: [CREATOR], balance: 0x62f1a, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1e1e1e1e1e1e1e1e1e1e1e1e00000000000000000000000000000000000000001e1e1e1e1e1e1e1e1e1e1e1e00000000000000000000000000000000000000001e1e1e1e1e1e1e1e1e1e1e1edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3684
Estimated Gas Usage: 17550 - 178629
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ship(address newTokenOwner) onl

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 49494949494949494949494900000000000000000000000000000000000000004949494949494949494949490000000000000000000000000000000000000000494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3684
Estimated Gas Usage: 17399 - 178478
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ship(address newTokenOwner) onl

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3f00000000010000000000000000010101010101403f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3684
Estimated Gas Usage: 17550 - 178629
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ship(address newTokenOwner) onl

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 4949494949494949494949490000000000000000000000000000000000000000494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3876
Estimated Gas Usage: 17399 - 178478
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ction transferTokenOwnership(address newTokenOwner) only

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3876
Estimated Gas Usage: 17550 - 178629
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ction transferTokenOwnership(address newTokenOwner) only

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 3876
Estimated Gas Usage: 17399 - 178478
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ction transferTokenOwnership(address newTokenOwner) only

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3f00000000010000000000000000010101010101403f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 3876
Estimated Gas Usage: 17550 - 178629
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

ction transferTokenOwnership(address newTokenOwner) only

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 4949494949494949494949490000000000000000000000000000000000000000494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 4013
Estimated Gas Usage: 17399 - 178478
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

 returns (bool) {
        return tok

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000010000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1e1e1e1e1e1e1e1e1e1e1e1edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 4013
Estimated Gas Usage: 17550 - 178629
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

 returns (bool) {
        return tok

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantContributorTokens(address)
PC address: 4027
Estimated Gas Usage: 17399 - 178478
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

 returns (bool) {
        return tok

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000010000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1e1e1e1e1e1e1e1e1e1e1e1edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantContributorTokens(address), txdata: 0x56e8596f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: claimBitNauticTokens()
PC address: 4027
Estimated Gas Usage: 17550 - 178629
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:148

 returns (bool) {
        return tok

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 494949494949494949494949deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: claimBitNauticTokens(), txdata: 0xa85b13b9, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantReserveTokens(address)
PC address: 4441
Estimated Gas Usage: 10504 - 65916
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:167

e(advisorSupply > 0);

        token.m

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 1e1e1e1e1e1e1e1e1e1e1e1edeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantReserveTokens(address), txdata: 0x9d8d22f4, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantReserveTokens(address)
PC address: 4505
Estimated Gas Usage: 10504 - 65916
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:169

iary, advisorSupp

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 3f3f3f3f3f3f3f3f3f3f3f3fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantReserveTokens(address), txdata: 0x9d8d22f4, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantBountyTokens(address)
PC address: 4843
Estimated Gas Usage: 10570 - 65982
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:160

quire(reserveSupply > 0);

        to

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d1d1d1d1d1d1d1d1d1d1d1d1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantBountyTokens(address), txdata: 0xd1f4df47, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantBountyTokens(address)
PC address: 4907
Estimated Gas Usage: 10570 - 65982
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:162

neficiary, reser

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d1d1d1d1d1d1d1d1d1d1d1d1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantBountyTokens(address), txdata: 0xd1f4df47, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: privateSale(address,uint256)
PC address: 5240
Estimated Gas Usage: 4034 - 39446
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:130

t the end of the ICO
    function cl

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d1d1d1d1d1d1d1d1d1d1d1d1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: privateSale(address,uint256), txdata: 0xd50a3d2c00000000000000000000000001, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantTeamTokens(address)
PC address: 5618
Estimated Gas Usage: 10614 - 66026
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:186
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d1d1d1d1d1d1d1d1d1d1d1d1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantTeamTokens(address), txdata: 0xe40a955c, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: BitNauticCrowdsaleTokenDistributor
Function name: grantTeamTokens(address)
PC address: 5682
Estimated Gas Usage: 10614 - 66026
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/ff7c39257b4f74058627b8b895a27144.sol:186
Initial State:

Account: [CREATOR], balance: 0x8, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d1d1d1d1d1d1d1d1d1d1d1d1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: grantTeamTokens(address), txdata: 0xe40a955c, value: 0x0