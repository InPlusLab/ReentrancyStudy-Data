==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: AlphaPerpetualStaking
Function name: stakeForever(uint256)
PC address: 489
Estimated Gas Usage: 9319 - 98639
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/c13cc62fc8aa082d6014326f2570756e.sol:31

unt);
        stakedAmount[msg.sen

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: stakeForever(uint256), txdata: 0x8dc8ad220000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AlphaPerpetualStaking
Function name: stakeForever(uint256)
PC address: 525
Estimated Gas Usage: 9319 - 98639
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/c13cc62fc8aa082d6014326f2570756e.sol:32

unt;
    }
    
    function getSt

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: stakeForever(uint256), txdata: 0x8dc8ad220000000000000000000000000000000000000000000000000000000000000000, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AlphaPerpetualStaking
Function name: stakeForever(uint256)
PC address: 528
Estimated Gas Usage: 9319 - 98639
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/c13cc62fc8aa082d6014326f2570756e.sol:32

unt;
    }
    
    function getSt

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x200000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: stakeForever(uint256), txdata: 0x8dc8ad220200000000000000000000000000000000000000000000000000000000000000, value: 0x0
Caller: [CREATOR], function: stakeForever(uint256), txdata: 0x8dc8ad22fe000000500810f5c0000204061000a455000460100000000040000000000000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: AlphaPerpetualStaking
Function name: stakeForever(uint256)
PC address: 531
Estimated Gas Usage: 9319 - 98639
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/c13cc62fc8aa082d6014326f2570756e.sol:32

unt;
    }
    
    function getSt

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: stakeForever(uint256), txdata: 0x8dc8ad220000000000000000000000000000000000000000000000000000000000000000, value: 0x0