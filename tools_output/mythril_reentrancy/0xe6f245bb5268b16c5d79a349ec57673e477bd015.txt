==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: setTicketPrice(uint256)
PC address: 342
Estimated Gas Usage: 1862 - 2617
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:32

g.sender==owner2);
        _;
    }
  
    modif

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: setTicketPrice(uint256), txdata: 0x15981650, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: kill()
PC address: 504
Estimated Gas Usage: 1033 - 1458
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:32

==owner2);
        _;
    }
  
    modi

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: kill(), txdata: 0x41c0e1b5, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: kill()
PC address: 530
Estimated Gas Usage: 1053 - 1478
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:32

g.sender==owner2);
        _;
    }
  
    modif

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: kill(), txdata: 0x41c0e1b5, value: 0x0

==== Unprotected Selfdestruct ====
SWC ID: 106
Severity: High
Contract: AddressLotteryV2
Function name: kill()
PC address: 548
Estimated Gas Usage: 2739 - 3824
Any sender can cause the contract to self-destruct.
Any sender can trigger execution of the SELFDESTRUCT instruction to destroy this contract account. Review the transaction trace generated for this issue and make sure that appropriate security controls are in place to prevent unrestricted access.
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:86

onents s;
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: adadadadadadadadadadadaddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: kill(), txdata: 0x41c0e1b5, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: forceReseed()
PC address: 589
Estimated Gas Usage: 1080 - 1505
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:32

==owner2);
        _;
    }
  
    modi

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: forceReseed()
PC address: 615
Estimated Gas Usage: 1100 - 1525
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:32

g.sender==owner2);
        _;
    }
  
    modif

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AddressLotteryV2
Function name: forceReseed()
PC address: 640
Estimated Gas Usage: 36444 - 159035
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:90

tx.gasprice * 7;

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [SOMEGUY], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AddressLotteryV2
Function name: forceReseed()
PC address: 650
Estimated Gas Usage: 36444 - 159035
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:93

  
    function () 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2100080100002080, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [SOMEGUY], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: AddressLotteryV2
Function name: forceReseed()
PC address: 659
Estimated Gas Usage: 36444 - 159035
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:96

UG, DELETE BEFO

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [SOMEGUY], function: forceReseed(), txdata: 0x80ca7aec, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: participate()
PC address: 750
Estimated Gas Usage: 295 - 1050
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:38

      _;
    }
    
    function

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000020000020, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: participate(), txdata: 0xd11711a2, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: AddressLotteryV2
Function name: participate()
PC address: 822
Estimated Gas Usage: 3898 - 5879
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:57

er)
        {
            participated[msg.sender] = true;
            require(msg.sender.call.value(this.balance)());
        }
            
        }
    }
    
    function luckyNumberO

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: participate(), txdata: 0xd11711a2, value: 0xde0b6b3a7640000

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: AddressLotteryV2
Function name: participate()
PC address: 884
Estimated Gas Usage: 11324 - 68011
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: os_smart_contract_deduplicated/62b5ecf7dd62129ad9060c9bb61e8dfd.sol:62

   
        }
    }
    
    function

--------------------
Initial State:

Account: [CREATOR], balance: 0x100000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x21002414e0400000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: participate(), txdata: 0xd11711a2, value: 0xde0b6b3a7640000


