==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: P3DRaffle
Function name: changevanity(string)
PC address: 626
Estimated Gas Usage: 12664 - 56054
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3f89341187b68e7ad19a6081c2a2b444.sol:401

enr].ticketssold = nextlotnr;

    nextrafflenr++;

}

function validateraffle () public{

    uint256 rafnr = nextrafflenr - 1;

    bool val = Raffles[rafnr].validation;

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x100040000023080, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x400e6f3f8a001ad0c, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: changevanity(string), txdata: 0x61df829880, value: 0x16345785d8a0000

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: P3DRaffle
Function name: changevanity(string)
PC address: 633
Estimated Gas Usage: 12664 - 56054
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3f89341187b68e7ad19a6081c2a2b444.sol:401

enr].ticketssold = nextlotnr;

    nextrafflenr++;

}

function validateraffle () public{

    uint256 rafnr = nextrafflenr - 1;

    bool val = Raffles[rafnr].validation;

 

--------------------
Initial State:

Account: [CREATOR], balance: 0xd90, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x443017f8df1c00a4, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: changevanity(string), txdata: 0x61df829880, value: 0x16345785d8a0000

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: P3DRaffle
Function name: changevanity(string)
PC address: 655
Estimated Gas Usage: 12632 - 56115
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3f89341187b68e7ad19a6081c2a2b444.sol:401

enr].ticketssold = nextlotnr;

    nextrafflenr++;

}

function validateraffle () public{

    uint256 rafnr = nextrafflenr - 1;

    bool val = Raffles[rafnr].validation;

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x810010000000000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: changevanity(string), txdata: 0x61df8298ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc, value: 0x16345785d8a0000

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: P3DRaffle
Function name: devfeetodev()
PC address: 1752
Estimated Gas Usage: 7769 - 63135
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3f89341187b68e7ad19a6081c2a2b444.sol:401

   Raffles

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: devfeetodev(), txdata: 0x735dcc8b, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: P3DRaffle
Function name: Vanity(address)
PC address: 2348
Estimated Gas Usage: 1786 - 3576
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/3f89341187b68e7ad19a6081c2a2b444.sol:315

n = true;

    nextrafflenr++;    

}

 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: Vanity(address), txdata: 0x92100265, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: P3DRaffle
Function name: changevanity(string)
PC address: 3830
Estimated Gas Usage: 12664 - 56054
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x2102100000940000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: changevanity(string), txdata: 0x61df829880, value: 0x16345785d8a0000

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: Low
Contract: P3DRaffle
Function name: changevanity(string)
PC address: 3844
Estimated Gas Usage: 12664 - 56054
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.
--------------------
Initial State:

Account: [CREATOR], balance: 0x40800080903, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: changevanity(string), txdata: 0x61df829880, value: 0x16345785d8a0000


