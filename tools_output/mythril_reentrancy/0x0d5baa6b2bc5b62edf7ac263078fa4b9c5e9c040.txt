==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 793
Estimated Gas Usage: 20125 - 146283
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:365

 if (token

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x01010101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 979
Estimated Gas Usage: 20125 - 146283
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:365

 if (tokensToSend == 0) {


--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000003ff1bf4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 242424242424242424242424deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x01010101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 979
Estimated Gas Usage: 19926 - 146084
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:365

 if (tokensToSend == 0) {


--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 242424242424242424242424deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: OneYearDreamTokensVestingAdvisors
Function name: getAvailableTokensToWithdraw()
PC address: 1317
Estimated Gas Usage: 6446 - 41714
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:317

= 1545696000; // December 

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 242424242424242424242424deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0
Caller: [ATTACKER], function: getAvailableTokensToWithdraw(), txdata: 0x045e240f, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 1317
Estimated Gas Usage: 20125 - 146283
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:317

= 1545696000; // December 

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000003ff1bf4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 242424242424242424242424deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x01010101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: OneYearDreamTokensVestingAdvisors
Function name: initializeVestingFor(address)
PC address: 1799
Estimated Gas Usage: 36516 - 192493
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:281

e sent.

     */

    func

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: initializeVestingFor(address)
PC address: 1860
Estimated Gas Usage: 36516 - 192493
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:281

nt of tokens that can be sent.

     */

    func

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: initializeVestingFor(address)
PC address: 1866
Estimated Gas Usage: 36516 - 192493
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:285

nsToWithdraw () publ

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: initializeVestingFor(address)
PC address: 1890
Estimated Gas Usage: 36516 - 192493
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:285

nt256) {

        uint256 t

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: initializeVestingFor(address)
PC address: 1943
Estimated Gas Usage: 36516 - 192493
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:285

nt256) {

        uint256 t

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: stages(uint256)
PC address: 1969
Estimated Gas Usage: 324 - 419
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:183

ns already sent.

     */

  

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: stages(uint256), txdata: 0x845ddcb280, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 2093
Estimated Gas Usage: 20125 - 146283
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:385

nsUnlocked

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x01010101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 2112
Estimated Gas Usage: 20125 - 146283
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:385

* @param tokensUnlockedPercentage Percent

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x01010101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 2118
Estimated Gas Usage: 20125 - 146283
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:387

 that can 

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x01010101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 2180
Estimated Gas Usage: 20125 - 146283
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:387

cording to provid

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x01010101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 2346
Estimated Gas Usage: 20125 - 146283
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:387

 that can be sent according to provided percentage.


--------------------
Initial State:

Account: [CREATOR], balance: 0x40000000003ff1bf4, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 242424242424242424242424deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: unknown, txdata: 0x01010101, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 2346
Estimated Gas Usage: 20125 - 146283
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they’re part of your own codebase).
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:387

 that can be sent according to provided percentage.


--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x01010101, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: fallback
PC address: 2346
Estimated Gas Usage: 20125 - 146283
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:387

 that can be sent according to provided percentage.


--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe000000000000000000000000001, value: 0x0
Caller: [ATTACKER], function: unknown, txdata: 0x01010101, value: 0x0

==== Dependence on predictable environment variable ====
SWC ID: 116
Severity: Low
Contract: OneYearDreamTokensVestingAdvisors
Function name: getAvailableTokensToWithdraw()
PC address: 2525
Estimated Gas Usage: 1066 - 1161
A control flow decision is made based on The block.timestamp environment variable.
The block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:439
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: getAvailableTokensToWithdraw(), txdata: 0x045e240f, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: initializeVestingFor(address)
PC address: 2686
Estimated Gas Usage: 36516 - 192493
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:335

he fallback function.

    

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: initializeVestingFor(address)
PC address: 2718
Estimated Gas Usage: 36516 - 192493
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:339

) private whenInitialized {

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: initializeVestingFor(address)
PC address: 2747
Estimated Gas Usage: 36516 - 192493
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:341

etAvailableTokensToWithdraw();

       

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: OneYearDreamTokensVestingAdvisors
Function name: initializeVestingFor(address)
PC address: 2776
Estimated Gas Usage: 36516 - 192493
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/be7061dc66d8ec1c7a649b636434dc07.sol:343

okensToSend);

        if (dreamToken.ba

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0f0f0f0f0f0f0f0f0f0f0f0fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: initializeVestingFor(address), txdata: 0x420b5fe0, value: 0x0