==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Future1Exchange
Function name: tokenTransfer(address,uint256)
PC address: 1680
Estimated Gas Usage: 8206 - 63813
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:118


    /// @param  token Token contract

    /// @param  to R

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: tokenTransfer(address,uint256), txdata: 0x68cdafe6000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Future1Exchange
Function name: tokenWithdraw(address,address,uint256)
PC address: 1985
Estimated Gas Usage: 10782 - 101186
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:137

r][token] , tokens) ;   

           

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: tokenWithdraw(address,address,uint256), txdata: 0x97d870c8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Future1Exchange
Function name: tokenWithdraw(address,address,uint256)
PC address: 2176
Estimated Gas Usage: 10782 - 101186
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:149

 ///@notice Token balance

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: tokenWithdraw(address,address,uint256), txdata: 0x97d870c8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Future1Exchange
Function name: tokenWithdraw(address,address,uint256)
PC address: 2309
Estimated Gas Usage: 10782 - 101186
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:141

      }

        }

    }

    

    ///@notice Token balance

    ///@

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: tokenWithdraw(address,address,uint256), txdata: 0x97d870c8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Future1Exchange
Function name: tokenWithdraw(address,address,uint256)
PC address: 2476
Estimated Gas Usage: 10782 - 101186
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:151

t

    function contract_bal(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: tokenWithdraw(address,address,uint256), txdata: 0x97d870c8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: Future1Exchange
Function name: tokenWithdraw(address,address,uint256)
PC address: 2476
Estimated Gas Usage: 10782 - 101186
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:151

t

    function contract_bal(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000088, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: tokenWithdraw(address,address,uint256), txdata: 0x97d870c8, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Future1Exchange
Function name: tokenWithdraw(address,address,uint256)
PC address: 2476
Estimated Gas Usage: 10782 - 101186
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:151

t

    function contract_bal(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: tokenWithdraw(address,address,uint256), txdata: 0x97d870c8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Future1Exchange
Function name: safeSub(uint256,uint256)
PC address: 2546
Estimated Gas Usage: 399 - 775
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:77

tice View balan

--------------------
Initial State:

Account: [CREATOR], balance: 0x10, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: safeSub(uint256,uint256), txdata: 0xa293d1e8000000000000000000000000000000000000000000000000000000000000002002, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Future1Exchange
Function name: contract_bal(address)
PC address: 2755
Estimated Gas Usage: 2054 - 36992
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:165

                     

    { 

      

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: contract_bal(address), txdata: 0xcde34c0a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: Future1Exchange
Function name: safeAdd(uint256,uint256)
PC address: 2824
Estimated Gas Usage: 465 - 841
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:64


    function s

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000c, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: safeAdd(uint256,uint256), txdata: 0xe6cb901384c51f67204f9df5858652e4010000000000000000000000000000624002000cf8, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Future1Exchange
Function name: balanceOf(address,address)
PC address: 2998
Estimated Gas Usage: 2156 - 37094
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/f7a05b19595c1720feabc888d910a287.sol:97

@param  token Token contract

--------------------
Initial State:

Account: [CREATOR], balance: 0x3, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: balanceOf(address,address), txdata: 0xf7888aec000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0