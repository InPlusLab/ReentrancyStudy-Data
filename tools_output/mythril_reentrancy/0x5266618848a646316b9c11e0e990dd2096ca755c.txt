==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ZenswapDistributionTest
Function name: distributeToken(address[],uint256[])
PC address: 930
Estimated Gas Usage: 6830 - 83621
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d60fa8ae4495334c1f0be2f8341949ae.sol:95

nt);

    }

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000059, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTokenReward(address), txdata: 0x2e1dc4b8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distributeToken(address[],uint256[]), txdata: 0x659de63bffffffffffffffffffffffffffffffbfffffffffffffffffffffffffffffffc080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ZenswapDistributionTest
Function name: distributeToken(address[],uint256[])
PC address: 1147
Estimated Gas Usage: 6830 - 83621
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d60fa8ae4495334c1f0be2f8341949ae.sol:95

nt);

    }

  }



    /**

     * Withdraw an "a

--------------------
Initial State:

Account: [CREATOR], balance: 0x80000000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTokenReward(address), txdata: 0x2e1dc4b8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distributeToken(address[],uint256[]), txdata: 0x659de63bffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0080, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: ZenswapDistributionTest
Function name: distributeToken(address[],uint256[])
PC address: 1147
Estimated Gas Usage: 6830 - 83621
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/d60fa8ae4495334c1f0be2f8341949ae.sol:95

nt);

    }

  }



    /**

     * Withdraw an "a

--------------------
Initial State:

Account: [CREATOR], balance: 0x40000001200000428, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTokenReward(address), txdata: 0x2e1dc4b8, value: 0x0
Caller: [CREATOR], function: distributeToken(address[],uint256[]), txdata: 0x659de63bffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: ZenswapDistributionTest
Function name: distributeToken(address[],uint256[])
PC address: 1147
Estimated Gas Usage: 6830 - 83621
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d60fa8ae4495334c1f0be2f8341949ae.sol:95

nt);

    }

  }



    /**

     * Withdraw an "a

--------------------
Initial State:

Account: [CREATOR], balance: 0x200000000059, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTokenReward(address), txdata: 0x2e1dc4b8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distributeToken(address[],uint256[]), txdata: 0x659de63bffffffffffffffffffffffffffffffbfffffffffffffffffffffffffffffffc080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: ZenswapDistributionTest
Function name: withdrawToken(address,uint256)
PC address: 1566
Estimated Gas Usage: 3667 - 39223
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d60fa8ae4495334c1f0be2f8341949ae.sol:121

 

    /**

     * Set a token contract addre

--------------------
Initial State:

Account: [CREATOR], balance: 0x8000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: setTokenReward(address), txdata: 0x2e1dc4b8000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawToken(address,uint256), txdata: 0x9e281a98, value: 0x0