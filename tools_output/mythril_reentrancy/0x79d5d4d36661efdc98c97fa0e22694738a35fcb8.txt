==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MobaBase
Function name: transferToOwner()
PC address: 554
Estimated Gas Usage: 1734 - 2159
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/ad5e4285c656bf12fe4d52173c0e9306.sol:59

x.origin");

        _;

    }

    

    function transferOwnership

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferToOwner(), txdata: 0x2d90ae94, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BRBasketballConfig
Function name: transferToOwner()
PC address: 1079
Estimated Gas Usage: 1778 - 2203
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/ad5e4285c656bf12fe4d52173c0e9306.sol:59

x.origin");

        _;

    }

    

    function transferOwnership

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferToOwner(), txdata: 0x2d90ae94, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: MobaBase
Function name: transferOwnership(address)
PC address: 1144
Estimated Gas Usage: 1076 - 1831
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/ad5e4285c656bf12fe4d52173c0e9306.sol:31

nly owner can call this function");

        _;

    }

    

  

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: transferOwnership(address), txdata: 0xf2fde38b, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BRBasketballConfig
Function name: updateLock(bool)
PC address: 1383
Estimated Gas Usage: 1189 - 1614
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/ad5e4285c656bf12fe4d52173c0e9306.sol:31

nly owner can call this function");

        _;

    }

    

  

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: updateLock(bool), txdata: 0xa1f91057, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BRBasketballConfig
Function name: getRandom(bytes32)
PC address: 1845
Estimated Gas Usage: 2905 - 38173
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ad5e4285c656bf12fe4d52173c0e9306.sol:265

() public view returns (uint

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef00000000000000000000000001, value: 0x0
Caller: [SOMEGUY], function: GetAddressByName(bytes32), txdata: 0xba9d407a, value: 0x0
Caller: [CREATOR], function: getRandom(bytes32), txdata: 0xb737ed1b, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: BRBasketballConfig
Function name: GetAddressByName(bytes32)
PC address: 2018
Estimated Gas Usage: 3812 - 39740
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/ad5e4285c656bf12fe4d52173c0e9306.sol:275
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: getRandom(bytes32), txdata: 0xb737ed1b, value: 0x0
Caller: [CREATOR], function: GetAddressByName(bytes32), txdata: 0xba9d407a, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: BRBasketballConfig
Function name: transferOwnership(address)
PC address: 2084
Estimated Gas Usage: 1296 - 2051
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: /tmp/ad5e4285c656bf12fe4d52173c0e9306.sol:31

nly owner can call this function");

        _;

    }

    

  

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferOwnership(address), txdata: 0xf2fde38b, value: 0x0