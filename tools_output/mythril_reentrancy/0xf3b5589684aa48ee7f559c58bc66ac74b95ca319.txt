==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Escrow
Function name: withdrawToken(address,uint256)
PC address: 3930
Estimated Gas Usage: 5120 - 41350
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:527

ken);

        emit Toke

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: withdrawToken(address,uint256), txdata: 0x9e281a98000000000000000000000000000000000000000001010101010101010101010101, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Escrow
Function name: startEscrow(bytes20,address,uint256)
PC address: 4482
Estimated Gas Usage: 28319 - 147522
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:407

 emit EscrowStarted(escrow_id, escrow_element);




--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: startEscrow(bytes20,address,uint256), txdata: 0x9f6822b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: startEscrow(bytes20,address,uint256)
PC address: 4689
Estimated Gas Usage: 28319 - 147522
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:417

nlyOwner returns (bool) {

        

--------------------
Initial State:

Account: [CREATOR], balance: 0x80001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: startEscrow(bytes20,address,uint256), txdata: 0x9f6822b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: startEscrow(bytes20,address,uint256)
PC address: 4703
Estimated Gas Usage: 28319 - 147522
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:417

nlyOwner returns (bool) {

        

--------------------
Initial State:

Account: [CREATOR], balance: 0x80001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: startEscrow(bytes20,address,uint256), txdata: 0x9f6822b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: startEscrow(bytes20,address,uint256)
PC address: 4721
Estimated Gas Usage: 28319 - 147522
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:417

nlyOwner returns (bool) {

        

--------------------
Initial State:

Account: [CREATOR], balance: 0x80001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: startEscrow(bytes20,address,uint256), txdata: 0x9f6822b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: startEscrow(bytes20,address,uint256)
PC address: 4774
Estimated Gas Usage: 28319 - 147522
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:417

nlyOwner returns (bool) {

        

--------------------
Initial State:

Account: [CREATOR], balance: 0x80001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: startEscrow(bytes20,address,uint256), txdata: 0x9f6822b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: startEscrow(bytes20,address,uint256)
PC address: 4792
Estimated Gas Usage: 28319 - 147522
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:417

nlyOwner returns (bool) {

        

--------------------
Initial State:

Account: [CREATOR], balance: 0x80001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: startEscrow(bytes20,address,uint256), txdata: 0x9f6822b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: startEscrow(bytes20,address,uint256)
PC address: 4845
Estimated Gas Usage: 28319 - 147522
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:417

nlyOwner returns (bool) {

        

--------------------
Initial State:

Account: [CREATOR], balance: 0x80001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: startEscrow(bytes20,address,uint256), txdata: 0x9f6822b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: startEscrow(bytes20,address,uint256)
PC address: 4856
Estimated Gas Usage: 28319 - 147522
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:417

nlyOwner returns (bool) {

        

--------------------
Initial State:

Account: [CREATOR], balance: 0x80001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: startEscrow(bytes20,address,uint256), txdata: 0x9f6822b4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5335
Estimated Gas Usage: 33102 - 153158
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:485

   emit EscrowCancelled(escrow_id, _escrow_element);



--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5414
Estimated Gas Usage: 33102 - 153158
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:499

alue) onlyOwner returns (bool){

        require(dst 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5441
Estimated Gas Usage: 33102 - 153158
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:499

alue) onlyOwner returns (bool){

        require(dst 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5527
Estimated Gas Usage: 33102 - 153158
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:499

alue) onlyOwner returns (bool){

        require(dst 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5610
Estimated Gas Usage: 33102 - 153158
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:499

alue) onlyOwner returns (bool){

        require(dst 

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5749
Estimated Gas Usage: 33102 - 153158
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:505



        tok.transfer(ds

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5757
Estimated Gas Usage: 33102 - 153158
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:505



        tok.transfer(ds

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5769
Estimated Gas Usage: 33102 - 153158
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:505



        tok.transfer(ds

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5796
Estimated Gas Usage: 33102 - 153158
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:505



        tok.transfer(ds

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5808
Estimated Gas Usage: 33102 - 153158
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:505



        tok.transfer(ds

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5835
Estimated Gas Usage: 33102 - 153158
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:505



        tok.transfer(ds

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: Escrow
Function name: cancelEscrow(bytes20)
PC address: 5843
Estimated Gas Usage: 33102 - 153158
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/d64d2878ce1bbdbbd074fe5e70cfe2f8.sol:505



        tok.transfer(ds

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 8d8d8d8d8d8d8d8d8d8d8d8ddeadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: cancelEscrow(bytes20), txdata: 0xd9da0142, value: 0x0