==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DepositProxy
Function name: fallback
PC address: 403
Estimated Gas Usage: 110 - 205
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/187a5d4f2774219a3efac0182cfa83f0.sol:18

 tx.origin) {
            Owner = msg.sender;
            deposit();
        }
    }
    
    func

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: Vault(), txdata: 0x2d2c44f2, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: Proxy
Function name: proxy(address,bytes)
PC address: 449
Estimated Gas Usage: 1448 - 39303
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/187a5d4f2774219a3efac0182cfa83f0.sol:7

.call.value(msg.value)(data);
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x100, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: proxy(address,bytes), txdata: 0xbe6d055a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef80, value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: Proxy
Function name: proxy(address,bytes)
PC address: 449
Estimated Gas Usage: 1448 - 39303
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/187a5d4f2774219a3efac0182cfa83f0.sol:7

.call.value(msg.value)(data);
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: proxy(address,bytes), txdata: 0xbe6d055a000000000000000000000000000000000000000000000000000000000000003f, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DepositProxy
Function name: withdraw(uint256)
PC address: 463
Estimated Gas Usage: 988 - 1413
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/187a5d4f2774219a3efac0182cfa83f0.sol:4

(msg.sender == Owner) _; }

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: withdraw(uint256), txdata: 0x2e1a7d4d, value: 0x0

==== Dependence on tx.origin ====
SWC ID: 115
Severity: Low
Contract: DepositProxy
Function name: transferOwner(address)
PC address: 586
Estimated Gas Usage: 1057 - 1812
Use of tx.origin as a part of authorization control.
The tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/187a5d4f2774219a3efac0182cfa83f0.sol:4

(msg.sender == Owner) _; }

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: transferOwner(address), txdata: 0x4fb2e45d, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: DepositProxy
Function name: proxy(address,bytes)
PC address: 762
Estimated Gas Usage: 1574 - 40089
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/187a5d4f2774219a3efac0182cfa83f0.sol:7

.call.value(msg.value)(data);
    

--------------------
Initial State:

Account: [CREATOR], balance: 0xe2718, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: proxy(address,bytes), txdata: 0xbe6d055a000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef80, value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: DepositProxy
Function name: proxy(address,bytes)
PC address: 762
Estimated Gas Usage: 1574 - 40089
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/187a5d4f2774219a3efac0182cfa83f0.sol:7

.call.value(msg.value)(data);
    

--------------------
Initial State:

Account: [CREATOR], balance: 0xffc133ed3f41, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: proxy(address,bytes), txdata: 0xbe6d055a000000000000000000000000000000000000000000000000000000000000003f, value: 0x0


