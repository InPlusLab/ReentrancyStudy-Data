==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiAssetProxy
Function name: fallback
PC address: 344
Estimated Gas Usage: 1483 - 4497
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:1069

a` contents, we must add

--------------------
Initial State:

Account: [CREATOR], balance: 0xc010000000110022, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [SOMEGUY], function: transferFrom(bytes,address,address,uint256), txdata: 0xa85e59e4fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiAssetProxy
Function name: fallback
PC address: 349
Estimated Gas Usage: 1483 - 4497
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:1086


                // Load

--------------------
Initial State:

Account: [CREATOR], balance: 0x4000, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x4000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0
Caller: [CREATOR], function: transferFrom(bytes,address,address,uint256), txdata: 0xa85e59e4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd9, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiAssetProxy
Function name: fallback
PC address: 356
Estimated Gas Usage: 1483 - 4497
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:1099

          mstore(0, 0x08c379a000000000000000

--------------------
Initial State:

Account: [CREATOR], balance: 0xdb080000008006, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e000000000000000000000000aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, value: 0x0
Caller: [SOMEGUY], function: transferFrom(bytes,address,address,uint256), txdata: 0xa85e59e4c0, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiAssetProxy
Function name: fallback
PC address: 360
Estimated Gas Usage: 1483 - 4497
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:1101

0000000000000000000000000000)

--------------------
Initial State:

Account: [CREATOR], balance: 0x10000000000000004, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0
Caller: [CREATOR], function: transferFrom(bytes,address,address,uint256), txdata: 0xa85e59e4a5, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiAssetProxy
Function name: fallback
PC address: 365
Estimated Gas Usage: 1483 - 4497
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:1119

tart of calldata

            

--------------------
Initial State:

Account: [CREATOR], balance: 0x8400000dfbfdf04, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: transferFrom(bytes,address,address,uint256), txdata: 0xa85e59e480, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiAssetProxy
Function name: fallback
PC address: 367
Estimated Gas Usage: 1483 - 4497
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:1119

            0,   // start of calldata

             

--------------------
Initial State:

Account: [CREATOR], balance: 0xc2000000000400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0
Caller: [CREATOR], function: transferFrom(bytes,address,address,uint256), txdata: 0xa85e59e4c0, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MultiAssetProxy
Function name: fallback
PC address: 371
Estimated Gas Usage: 1483 - 4497
The arithmetic operator can underflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:1127

`assetData` with our own

           

--------------------
Initial State:

Account: [CREATOR], balance: 0x880000002008, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e000000000000000000000000affeaffeaffeaffeaffeaffeaffeaffeaffeaffe, value: 0x0
Caller: [CREATOR], function: transferFrom(bytes,address,address,uint256), txdata: 0xa85e59e481, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MixinAssetProxyDispatcher
Function name: registerAssetProxy(address)
PC address: 596
Estimated Gas Usage: 10454 - 68338
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:615

. Returns 0x0 if no proxy is re

--------------------
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: registerAssetProxy(address), txdata: 0xc585bb93, value: 0x0
Caller: [CREATOR], function: registerAssetProxy(address), txdata: 0xc585bb93000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MixinAssetProxyDispatcher
Function name: registerAssetProxy(address)
PC address: 663
Estimated Gas Usage: 10454 - 68338
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:617

es4 assetProxyId)

       

--------------------
Initial State:

Account: [CREATOR], balance: 0x400100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: registerAssetProxy(address), txdata: 0xc585bb93000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MixinAssetProxyDispatcher
Function name: registerAssetProxy(address)
PC address: 817
Estimated Gas Usage: 10454 - 68338
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:633

eeds or throws.

    /// @param assetData Byte 

--------------------
Initial State:

Account: [CREATOR], balance: 0x400100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: registerAssetProxy(address), txdata: 0xc585bb93000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MixinAssetProxyDispatcher
Function name: registerAssetProxy(address)
PC address: 858
Estimated Gas Usage: 10454 - 68338
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:633

eeds or throws.

    /// @param assetData Byte 

--------------------
Initial State:

Account: [CREATOR], balance: 0x400100000002, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: registerAssetProxy(address), txdata: 0xc585bb93000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MixinAuthorizable
Function name: authorities(uint256)
PC address: 871
Estimated Gas Usage: 980 - 1075
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:273

rget],

            "TARGET_

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: authorities(uint256), txdata: 0x494503d4, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MixinAuthorizable
Function name: removeAuthorizedAddress(address)
PC address: 1198
Estimated Gas Usage: 32431 - 116605
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:339

Index of target in aut

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e, value: 0x0
Caller: [CREATOR], function: removeAuthorizedAddress(address), txdata: 0x70712939, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MixinAuthorizable
Function name: removeAuthorizedAddress(address)
PC address: 1307
Estimated Gas Usage: 32431 - 116605
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:341

unction removeAuthorize

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e, value: 0x0
Caller: [CREATOR], function: removeAuthorizedAddress(address), txdata: 0x70712939, value: 0x0

==== Exception State ====
SWC ID: 110
Severity: Medium
Contract: MultiAssetProxy
Function name: authorities(uint256)
PC address: 1766
Estimated Gas Usage: 1002 - 1097
An assertion violation was triggered.
It is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:273

rget],

            "TARGET_

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [ATTACKER], function: authorities(uint256), txdata: 0x494503d4, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MixinAuthorizable
Function name: removeAuthorizedAddressAtIndex(address,uint256)
PC address: 1860
Estimated Gas Usage: 32459 - 116633
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:415

act IAssetProxy is

  

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e, value: 0x0
Caller: [CREATOR], function: removeAuthorizedAddressAtIndex(address,uint256), txdata: 0x9ad26744, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: MixinAuthorizable
Function name: removeAuthorizedAddressAtIndex(address,uint256)
PC address: 1969
Estimated Gas Usage: 32459 - 116633
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:417

e

{

    /// @dev Tran

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: addAuthorizedAddress(address), txdata: 0x42f1181e, value: 0x0
Caller: [CREATOR], function: removeAuthorizedAddressAtIndex(address,uint256), txdata: 0x9ad26744, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: MultiAssetProxy
Function name: registerAssetProxy(address)
PC address: 3224
Estimated Gas Usage: 10586 - 68470
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:615

. Returns 0x0 if no proxy is re

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: registerAssetProxy(address), txdata: 0xc585bb93000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MultiAssetProxy
Function name: registerAssetProxy(address)
PC address: 3291
Estimated Gas Usage: 10586 - 68470
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:617

es4 assetProxyId)

       

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: registerAssetProxy(address), txdata: 0xc585bb93000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MultiAssetProxy
Function name: registerAssetProxy(address)
PC address: 3422
Estimated Gas Usage: 10586 - 68470
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:633

eeds or throws.

    /// @param assetData Byte 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: registerAssetProxy(address), txdata: 0xc585bb93000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: MultiAssetProxy
Function name: registerAssetProxy(address)
PC address: 3463
Estimated Gas Usage: 10586 - 68470
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: data/kongqp/os_smart_contract_deduplicated/2e07c1aa86032d53a533d4a927bda759.sol:633

eeds or throws.

    /// @param assetData Byte 

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: registerAssetProxy(address), txdata: 0xc585bb93000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0


