==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2290
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:257

           

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2324
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:258

take
      

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2370
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:264

lDividends;
        stakers[msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2374
Estimated Gas Usage: 55285 - 234457
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:264

lDividends;
        stakers[msg.sender

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2375
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:267

e));
        
        emit STAKE

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2416
Estimated Gas Usage: 55285 - 234457
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:266

     
        totalStakes = totalStakes.add(tokens.sub(_stakingFee));
        
        emit STAKED

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2423
Estimated Gas Usage: 55285 - 234457
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:269

, tokens.sub(_stakingFee), _stakingFee);


--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2426
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:272

--------------

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2431
Estimated Gas Usage: 55285 - 234457
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:272

    // ----------------------------------------------

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2434
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:273

 can 

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2440
Estimated Gas Usage: 55285 - 234457
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:272

---------------
    // Owners can 

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2456
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:273

 stakers us

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2465
Estimated Gas Usage: 55285 - 234457
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:273

distributed to stakers using this function
    // @par

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2948
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:329

ub(payo

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2977
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:329

int256 amount =  ((totalDivi

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2983
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:328

nt256 _pendingReward)

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 2997
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:328

turns(uint256 _pendingReward) {
  

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 3000
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:328

ker) public vi

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 3027
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:330

[staker

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 3056
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:330

otalDividends.sub(payouts[st

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 3062
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:329

v(scaling);
        a

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 3077
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:329

ens)).div(scaling);
        amount

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 3080
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:329

s[staker].stak

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 3137
Estimated Gas Usage: 55285 - 234457
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:329

staker].round - 1])).mul(stakers[staker].stakedTokens)).div(scaling);
        amount += ((totalDividends.sub(payouts[stakers[staker

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: Stake
Function name: STAKE(uint256)
PC address: 3145
Estimated Gas Usage: 55285 - 234457
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/982273d67b9f2f6b595ae07b5f3dc0bb.sol:329

staker].round - 1])).mul(stakers[staker].stakedTokens)).div(scaling);
        amount += ((totalDividends.sub(payouts[stakers[staker

--------------------
Initial State:

Account: [CREATOR], balance: 0x800000a1d02, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: STAKE(uint256), txdata: 0xca84d591a4be4040004594e7f3b020e110089b4f6406032022648040103800b982600486, value: 0x0