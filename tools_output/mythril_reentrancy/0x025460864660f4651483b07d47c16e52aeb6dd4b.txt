==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: RewardDistributor
Function name: distributeToAddressesAndAmounts(address[],uint256[])
PC address: 220
Estimated Gas Usage: 6574 - 77349
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/fa3bac4af763bb7af6db7b9bfddc943e.sol:59

es, uint256[] amounts) external onlyOwner {
        require(addresses.length == amounts.length);
        for (uint i = 0; i < addresses.length; i++) {
            require(token.transfer(addresses[i], amounts[i]));
        }
    }
}

--------------------
Initial State:

Account: [CREATOR], balance: 0x2000000000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distributeToAddressesAndAmounts(address[],uint256[]), txdata: 0xd184adf6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc80, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: RewardDistributor
Function name: distributeToAddressesAndAmounts(address[],uint256[])
PC address: 568
Estimated Gas Usage: 6574 - 77349
Read of persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/fa3bac4af763bb7af6db7b9bfddc943e.sol:65
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d1d1d1d1d1d1d1d1d1d1d1d1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distributeToAddressesAndAmounts(address[],uint256[]), txdata: 0xd184adf6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa080, value: 0x0

==== Integer Arithmetic Bugs ====
SWC ID: 101
Severity: High
Contract: RewardDistributor
Function name: distributeToAddressesAndAmounts(address[],uint256[])
PC address: 644
Estimated Gas Usage: 6574 - 77349
The arithmetic operator can overflow.
It is possible to cause an integer overflow or underflow in the arithmetic operation. 
--------------------
In file: /tmp/fa3bac4af763bb7af6db7b9bfddc943e.sol:65
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distributeToAddressesAndAmounts(address[],uint256[]), txdata: 0xd184adf6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080, value: 0x0

==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: RewardDistributor
Function name: distributeToAddressesAndAmounts(address[],uint256[])
PC address: 835
Estimated Gas Usage: 6574 - 77349
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/fa3bac4af763bb7af6db7b9bfddc943e.sol:65
Initial State:

Account: [CREATOR], balance: 0x2, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d1d1d1d1d1d1d1d1d1d1d1d1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distributeToAddressesAndAmounts(address[],uint256[]), txdata: 0xd184adf6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc080, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: RewardDistributor
Function name: distributeToAddressesAndAmounts(address[],uint256[])
PC address: 835
Estimated Gas Usage: 6574 - 77349
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/fa3bac4af763bb7af6db7b9bfddc943e.sol:65
Initial State:

Account: [CREATOR], balance: 0x80000000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: distributeToAddressesAndAmounts(address[],uint256[]), txdata: 0xd184adf6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb0ff, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: RewardDistributor
Function name: distributeToAddressesAndAmounts(address[],uint256[])
PC address: 835
Estimated Gas Usage: 6574 - 77349
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/fa3bac4af763bb7af6db7b9bfddc943e.sol:65
Initial State:

Account: [CREATOR], balance: 0x20, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: d1d1d1d1d1d1d1d1d1d1d1d1deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [CREATOR], function: distributeToAddressesAndAmounts(address[],uint256[]), txdata: 0xd184adf6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa080, value: 0x0