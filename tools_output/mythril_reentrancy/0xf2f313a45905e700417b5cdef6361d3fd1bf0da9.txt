==== External Call To User-Supplied Address ====
SWC ID: 107
Severity: Low
Contract: UserWallet
Function name: sweepAll(address)
PC address: 386
Estimated Gas Usage: 3482 - 74910
A call to a user-supplied address is executed.
An external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.
--------------------
In file: /tmp/c4431990af676a8b09789ba3ffbb3aa3.sol:74

ct AbstractSweeperList {
    

--------------------
Initial State:

Account: [CREATOR], balance: 0x1, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [SOMEGUY], function: sweepAll(address), txdata: 0xc18cfe86, value: 0x0
Caller: [ATTACKER], function: sweepAll(address), txdata: 0xc18cfe86, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: UserWallet
Function name: sweepAll(address)
PC address: 488
Estimated Gas Usage: 3482 - 74910
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/c4431990af676a8b09789ba3ffbb3aa3.sol:74

ct AbstractSweeperList {
    function sweeperOf(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x0, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [CREATOR], function: sweepAll(address), txdata: 0xc18cfe86, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Medium
Contract: UserWallet
Function name: sweepAll(address)
PC address: 488
Estimated Gas Usage: 3482 - 74910
Write to persistent state following external call
The contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/c4431990af676a8b09789ba3ffbb3aa3.sol:74

ct AbstractSweeperList {
    function sweeperOf(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x400, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x1, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: 000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef, value: 0x0
Caller: [ATTACKER], function: sweepAll(address), txdata: 0xc18cfe86, value: 0x0

==== Unchecked return value from external call. ====
SWC ID: 104
Severity: Medium
Contract: UserWallet
Function name: sweepAll(address)
PC address: 488
Estimated Gas Usage: 3482 - 74910
The return value of a message call is not checked.
External calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.
--------------------
In file: /tmp/c4431990af676a8b09789ba3ffbb3aa3.sol:74

ct AbstractSweeperList {
    function sweeperOf(addr

--------------------
Initial State:

Account: [CREATOR], balance: 0x101010c0503000001, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x0, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: sweepAll(address), txdata: 0xc18cfe86, value: 0x0
Caller: [ATTACKER], function: sweepAll(address), txdata: 0xc18cfe86, value: 0x0