==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SoloMiner
Function name: burnMyTokens(uint256)
PC address: 2757
Estimated Gas Usage: 39138 - 216553
Read of persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/df5121b4b8700cf4d433d51811a7e805.sol:378

act(address newRouterAddr

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000101028a88, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: burnMyTokens(uint256), txdata: 0x6764765d0000000000000000000000000000000000000000000004001000012000004000, value: 0x0

==== State access after external call ====
SWC ID: 107
Severity: Low
Contract: SoloMiner
Function name: burnMyTokens(uint256)
PC address: 2763
Estimated Gas Usage: 39138 - 216553
Write to persistent state following external call
The contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.
--------------------
In file: /tmp/df5121b4b8700cf4d433d51811a7e805.sol:378

act(address newRouterAddr

--------------------
Initial State:

Account: [CREATOR], balance: 0x1000101028a88, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x2, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: burnMyTokens(uint256), txdata: 0x6764765d0000000000000000000000000000000000000000000004001000012000004000, value: 0x0

==== Multiple Calls in a Single Transaction ====
SWC ID: 113
Severity: Low
Contract: SoloMiner
Function name: burnMyTokens(uint256)
PC address: 5144
Estimated Gas Usage: 39138 - 216553
Multiple calls are executed in the same transaction.
This call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. theyâ€™re part of your own codebase).
--------------------
In file: /tmp/df5121b4b8700cf4d433d51811a7e805.sol:475
Initial State:

Account: [CREATOR], balance: 0x40814, nonce:0, storage:{}
Account: [ATTACKER], balance: 0x8000, nonce:0, storage:{}
Account: [SOMEGUY], balance: 0x0, nonce:0, storage:{}

Transaction Sequence:

Caller: [CREATOR], calldata: , value: 0x0
Caller: [SOMEGUY], function: burnMyTokens(uint256), txdata: 0x6764765d000000000000000000000000000000000000000000000ee00000000000000810, value: 0x0