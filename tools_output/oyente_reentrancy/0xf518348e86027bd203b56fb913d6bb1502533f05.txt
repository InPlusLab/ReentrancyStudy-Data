WARNING:root:You are using evm version 1.8.2. The supported version is 1.7.3
WARNING:root:You are using solc version 0.4.25, The latest supported version is 0.4.19
INFO:root:contract /tmp/a1fadde08526699101e562398cfb8a8a.sol:Escrow:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 25.4%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/tmp/a1fadde08526699101e562398cfb8a8a.sol:1233:9: Warning: Integer Overflow.
        require(deal != 0x0, "deal can not be 0x0")
Integer Overflow occurs if:
    deal = 0
/tmp/a1fadde08526699101e562398cfb8a8a.sol:1585:9: Warning: Integer Overflow.
        require(
        ^
Spanning multiple lines.
/tmp/a1fadde08526699101e562398cfb8a8a.sol:1229:9: Warning: Integer Overflow.
        require(addresses[1] != address(0), "Beneficiary can not be 0x0 address")
/tmp/a1fadde08526699101e562398cfb8a8a.sol:1235:9: Warning: Integer Overflow.
        require(amount != 0, "amount can not be 0")
Integer Overflow occurs if:
    deal = 115792089237316195423570985008687907853269984665640564039457584007913129639935
    amount = 0
/tmp/a1fadde08526699101e562398cfb8a8a.sol:1227:9: Warning: Integer Overflow.
        require(addresses[0] != address(0), "Depositor can not be 0x0 address")
/tmp/a1fadde08526699101e562398cfb8a8a.sol:1679:43: Warning: Integer Overflow.
    public pure returns (bytes32) {return PaymentLib.getPaymentId(addresses, deal, amount)
/tmp/a1fadde08526699101e562398cfb8a8a.sol:1231:9: Warning: Integer Overflow.
        require(addresses[0] != addresses[1], "Depositor and beneficiary can not be the same")
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /tmp/a1fadde08526699101e562398cfb8a8a.sol:EscrowConfig:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 95.2%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /tmp/a1fadde08526699101e562398cfb8a8a.sol:EscrowConfigLib:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 89.1%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/tmp/a1fadde08526699101e562398cfb8a8a.sol:591:5: Warning: Integer Overflow.
    function getPaymentFee(address storageAddress) public view returns (uint8) {
    ^
Spanning multiple lines.
/tmp/a1fadde08526699101e562398cfb8a8a.sol:593:16: Warning: Integer Overflow.
        return EternalStorage(storageAddress).getUint8(keccak256(abi.encodePacked("escrow.config.payment.fee")))
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /tmp/a1fadde08526699101e562398cfb8a8a.sol:EternalStorage:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 88.0%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/tmp/a1fadde08526699101e562398cfb8a8a.sol:151:32: Warning: Integer Underflow.
        require(addressStorage[keccak256(abi.encodePacked("contract.address", msg.sender))
/tmp/a1fadde08526699101e562398cfb8a8a.sol:175:24: Warning: Integer Underflow.
        addressStorage[keccak256(abi.encodePacked("contract.address", owner))
Integer Underflow occurs if:
    owner = 0
/tmp/a1fadde08526699101e562398cfb8a8a.sol:111:1: Warning: Integer Underflow.
contract EternalStorage {
^
Spanning multiple lines.
Integer Underflow occurs if:
    addressStorage[keccak256(abi.encodePacked("contract.address", msg.sender))] = 1461501637330902918203684832716283019655932542975
/tmp/a1fadde08526699101e562398cfb8a8a.sol:235:9: Warning: Integer Underflow.
        return bytesStorage[_key]
Integer Underflow occurs if:
    return bytesStorage[_key] = 1
/tmp/a1fadde08526699101e562398cfb8a8a.sol:225:9: Warning: Integer Underflow.
        return stringStorage[_key]
Integer Underflow occurs if:
    return stringStorage[_key] = 1
INFO:symExec:/tmp/a1fadde08526699101e562398cfb8a8a.sol:179:34: Warning: Integer Overflow.
        addressStorage[keccak256(abi.encodePacked("contract.address", msg.sender)
Integer Overflow occurs if:
    owner = 0
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /tmp/a1fadde08526699101e562398cfb8a8a.sol:Ownable:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 99.5%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /tmp/a1fadde08526699101e562398cfb8a8a.sol:PaymentHolder:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 90.6%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): True
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 True
INFO:symExec:/tmp/a1fadde08526699101e562398cfb8a8a.sol:515:21: Warning: Integer Overflow.
            allowed[_allowed[i]
Integer Overflow occurs if:
    _allowed = 115792089237316195423570985008687907853269984665640564039457584007913129639899
    updater = 0
INFO:symExec:Flow1
/tmp/a1fadde08526699101e562398cfb8a8a.sol:563:9: Warning: Transaction-Ordering Dependency.
        to.transfer(amount)
Flow2
/tmp/a1fadde08526699101e562398cfb8a8a.sol:489:17: Warning: Transaction-Ordering Dependency.
        require(PaymentHolder(newHolder).update.value(address(this).balance)(_allowed)
INFO:symExec:/tmp/a1fadde08526699101e562398cfb8a8a.sol:495:31: Warning: Re-Entrancy Vulnerability.
            uint256 balance = Token(token).balanceOf(this)
/tmp/a1fadde08526699101e562398cfb8a8a.sol:489:17: Warning: Re-Entrancy Vulnerability.
        require(PaymentHolder(newHolder).update.value(address(this).balance)(_allowed)
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /tmp/a1fadde08526699101e562398cfb8a8a.sol:PaymentLib:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 93.3%
INFO:symExec:	  Integer Underflow: 			 True
INFO:symExec:	  Integer Overflow: 			 True
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:/tmp/a1fadde08526699101e562398cfb8a8a.sol:3:20: Warning: Integer Underflow.
 *Submitted for verification at Ethersca
INFO:symExec:/tmp/a1fadde08526699101e562398cfb8a8a.sol:789:65: Warning: Integer Overflow.
        return EternalStorage(storageAddress).getBool(keccak256(abi.encodePacked("payment.fee.payed", paymentId)
/tmp/a1fadde08526699101e562398cfb8a8a.sol:769:16: Warning: Integer Overflow.
        return EternalStorage(storageAddress).getUint8(keccak256(abi.encodePacked("payment.fee", paymentId)))
/tmp/a1fadde08526699101e562398cfb8a8a.sol:905:5: Warning: Integer Overflow.
    function isWithdrawn(address storageAddress, bytes32 paymentId, address user)
    ^
Spanning multiple lines.
/tmp/a1fadde08526699101e562398cfb8a8a.sol:889:16: Warning: Integer Overflow.
        return EternalStorage(storageAddress).getUint(keccak256(abi.encodePacked("payment.amount.withdraw", paymentId, user)))
/tmp/a1fadde08526699101e562398cfb8a8a.sol:885:5: Warning: Integer Overflow.
    function getWithdrawAmount(address storageAddress, bytes32 paymentId, address user)
    ^
Spanning multiple lines.
/tmp/a1fadde08526699101e562398cfb8a8a.sol:809:16: Warning: Integer Overflow.
        return EternalStorage(storageAddress).getBool(keccak256(abi.encodePacked("payment.deposited", paymentId)))
/tmp/a1fadde08526699101e562398cfb8a8a.sol:779:59: Warning: Integer Overflow.
        EternalStorage(storageAddress).setUint8(keccak256(abi.encodePacked("payment.fee", paymentId)
/tmp/a1fadde08526699101e562398cfb8a8a.sol:765:5: Warning: Integer Overflow.
    function getPaymentFee(address storageAddress, bytes32 paymentId)
    ^
Spanning multiple lines.
/tmp/a1fadde08526699101e562398cfb8a8a.sol:805:5: Warning: Integer Overflow.
    function isDeposited(address storageAddress, bytes32 paymentId)
    ^
Spanning multiple lines.
/tmp/a1fadde08526699101e562398cfb8a8a.sol:869:16: Warning: Integer Overflow.
        return EternalStorage(storageAddress).getUint(keccak256(abi.encodePacked("payment.amount.refund", paymentId, user)))
/tmp/a1fadde08526699101e562398cfb8a8a.sol:825:5: Warning: Integer Overflow.
    function isSigned(address storageAddress, bytes32 paymentId)
    ^
Spanning multiple lines.
/tmp/a1fadde08526699101e562398cfb8a8a.sol:909:16: Warning: Integer Overflow.
        return EternalStorage(storageAddress).getBool(keccak256(abi.encodePacked("payment.withdrawed", paymentId, user)))
/tmp/a1fadde08526699101e562398cfb8a8a.sol:829:16: Warning: Integer Overflow.
        return EternalStorage(storageAddress).getBool(keccak256(abi.encodePacked("payment.signed", paymentId)))
/tmp/a1fadde08526699101e562398cfb8a8a.sol:799:58: Warning: Integer Overflow.
        EternalStorage(storageAddress).setBool(keccak256(abi.encodePacked("payment.fee.payed", paymentId)
Integer Overflow occurs if:
    feePayed = 115792089237316195423570985008687907853269984665640564039457584007913129639935
/tmp/a1fadde08526699101e562398cfb8a8a.sol:719:26: Warning: Integer Overflow.
        return keccak256(abi.encodePacked(addresses[0], addresses[1], addresses[2], deal, amount)
/tmp/a1fadde08526699101e562398cfb8a8a.sol:779:49: Warning: Integer Overflow.
        EternalStorage(storageAddress).setUint8(keccak256(abi.encodePacked("payment.fee", paymentId))
/tmp/a1fadde08526699101e562398cfb8a8a.sol:865:5: Warning: Integer Overflow.
    function getOfferAmount(address storageAddress, bytes32 paymentId, address user)
    ^
Spanning multiple lines.
/tmp/a1fadde08526699101e562398cfb8a8a.sol:789:16: Warning: Integer Overflow.
        return EternalStorage(storageAddress).getBool(keccak256(abi.encodePacked("payment.fee.payed", paymentId)))
/tmp/a1fadde08526699101e562398cfb8a8a.sol:745:5: Warning: Integer Overflow.
    function isCancelRequested(address storageAddress, bytes32 paymentId, address party)
    ^
Spanning multiple lines.
/tmp/a1fadde08526699101e562398cfb8a8a.sol:749:16: Warning: Integer Overflow.
        return EternalStorage(storageAddress).getBool(keccak256(abi.encodePacked("payment.cance", paymentId, party)))
/tmp/a1fadde08526699101e562398cfb8a8a.sol:785:5: Warning: Integer Overflow.
    function isFeePayed(address storageAddress, bytes32 paymentId)
    ^
Spanning multiple lines.
/tmp/a1fadde08526699101e562398cfb8a8a.sol:845:5: Warning: Integer Overflow.
    function getPaymentStatus(address storageAddress, bytes32 paymentId)
    ^
Spanning multiple lines.
INFO:symExec:	====== Analysis Completed ======
INFO:root:contract /tmp/a1fadde08526699101e562398cfb8a8a.sol:Withdrawable:
INFO:symExec:	============ Results ===========
INFO:symExec:	  EVM Code Coverage: 			 95.8%
INFO:symExec:	  Integer Underflow: 			 False
INFO:symExec:	  Integer Overflow: 			 False
INFO:symExec:	  Parity Multisig Bug 2: 		 False
INFO:symExec:	  Callstack Depth Attack Vulnerability:  False
INFO:symExec:	  Transaction-Ordering Dependence (TOD): False
INFO:symExec:	  Timestamp Dependency: 		 False
INFO:symExec:	  Re-Entrancy Vulnerability: 		 False
INFO:symExec:	====== Analysis Completed ======