{
    "dao_symex_path_1.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 97\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 134\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 176,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_2.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 140\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 177\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 196,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_3.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 183\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 220\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 176,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_4.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 226\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 263\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 196,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_5.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 269\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 308\nCall context: \nTrue\nTMP_29 = tokens_to_withdraw - fee\nTMP_30(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_29']  \""
        ],
        "executable_instructions": 181,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_6.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 312\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 351\nCall context: \nTrue\nTMP_29 = tokens_to_withdraw - fee\nTMP_30(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_29']  \""
        ],
        "executable_instructions": 201,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_7.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 355\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 392\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 204,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_8.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 398\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 435\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 176,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_9.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 441\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 478\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 196,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_10.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 484\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 521\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 196,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_11.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 527\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 564\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 196,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_12.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 570\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 607\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 196,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_13.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 613\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 652\nCall context: \nTrue\nTMP_29 = tokens_to_withdraw - fee\nTMP_30(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_29']  \""
        ],
        "executable_instructions": 201,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_14.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 656\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 693\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 196,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_15.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 699\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 736\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 196,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_16.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 742\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 781\nCall context: \nTrue\nTMP_29 = tokens_to_withdraw - fee\nTMP_30(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_29']  \""
        ],
        "executable_instructions": 181,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_17.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 785\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 824\nCall context: \nTrue\nTMP_29 = tokens_to_withdraw - fee\nTMP_30(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_29']  \""
        ],
        "executable_instructions": 201,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_18.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 828\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 866\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 186,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_19.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 872\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 910\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 186,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_20.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 916\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 956\nCall context: \nTrue\nTMP_29 = tokens_to_withdraw - fee\nTMP_30(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_29']  \""
        ],
        "executable_instructions": 191,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_21.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 960\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 998\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 182,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_22.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 1004\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 1042\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 182,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_23.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 1048\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 1088\nCall context: \nTrue\nTMP_29 = tokens_to_withdraw - fee\nTMP_30(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_29']  \""
        ],
        "executable_instructions": 187,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_24.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 1092\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 1130\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_24 = REF_6 * contract_token_balance\nTMP_25 = TMP_24 \/ contract_eth_value\ntokens_to_withdraw := TMP_25\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_26 = tokens_to_withdraw \/ 100\nfee := TMP_26\nTMP_27(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 182,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_25.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 1136\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 1176\nCall context: \nTrue\nTMP_29 = tokens_to_withdraw - fee\nTMP_30(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_29']  \""
        ],
        "executable_instructions": 191,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    }
}