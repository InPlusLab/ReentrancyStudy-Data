{
    "dao_symex_path_1.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 91\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 128\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 173,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_2.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 134\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 171\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 193,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_3.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 177\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 214\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 173,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_4.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 220\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 257\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 193,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_5.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 263\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 302\nCall context: \nTrue\nTMP_21 = tokens_to_withdraw - fee\nTMP_22(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_21']  \""
        ],
        "executable_instructions": 178,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_6.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 306\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 345\nCall context: \nTrue\nTMP_21 = tokens_to_withdraw - fee\nTMP_22(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_21']  \""
        ],
        "executable_instructions": 198,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_7.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 349\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 386\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 201,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_8.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 392\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 429\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 173,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_9.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 435\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 472\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 193,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_10.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 478\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 515\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 193,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_11.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 521\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 558\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 193,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_12.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 564\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 601\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 193,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_13.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 607\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 646\nCall context: \nTrue\nTMP_21 = tokens_to_withdraw - fee\nTMP_22(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_21']  \""
        ],
        "executable_instructions": 198,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_14.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 650\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 687\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 193,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_15.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 693\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 730\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 193,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_16.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 736\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 775\nCall context: \nTrue\nTMP_21 = tokens_to_withdraw - fee\nTMP_22(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_21']  \""
        ],
        "executable_instructions": 178,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_17.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "withdraw_token",
        "bug_type": "dao",
        "src_node": "\"BlockID: 779\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 818\nCall context: \nTrue\nTMP_21 = tokens_to_withdraw - fee\nTMP_22(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_21']  \""
        ],
        "executable_instructions": 198,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_18.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 822\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 860\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 183,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_19.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 866\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 904\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 183,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_20.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 910\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 950\nCall context: \nTrue\nTMP_21 = tokens_to_withdraw - fee\nTMP_22(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_21']  \""
        ],
        "executable_instructions": 188,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_21.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 954\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 992\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 179,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_22.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 998\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 1036\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 179,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_23.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 1042\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 1082\nCall context: \nTrue\nTMP_21 = tokens_to_withdraw - fee\nTMP_22(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_21']  \""
        ],
        "executable_instructions": 184,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_24.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 1086\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 1124\nCall context: \nTrue\nREF_6 -> balances[msg.sender]\nTMP_16 = REF_6 * contract_token_balance\nTMP_17 = TMP_16 \/ contract_eth_value\ntokens_to_withdraw := TMP_17\nREF_7 -> balances[msg.sender]\ncontract_eth_value = contract_eth_value - REF_7\nREF_8 -> balances[msg.sender]\nREF_8 := 0\nTMP_18 = tokens_to_withdraw \/ 100\nfee := TMP_18\nTMP_19(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['developer', 'fee']  \""
        ],
        "executable_instructions": 179,
        "state_variable": "contract_eth_value",
        "error": "",
        "result": "",
        "execution_details": ""
    },
    "dao_symex_path_25.json": {
        "file_name": "",
        "from_function": "withdraw_token",
        "to_function": "fallback",
        "bug_type": "dao",
        "src_node": "\"BlockID: 1130\nCall context: \nNone\nENTRY_POINT None\"",
        "dest_node": [
            "\"BlockID: 1170\nCall context: \nTrue\nTMP_21 = tokens_to_withdraw - fee\nTMP_22(bool) = HIGH_LEVEL_CALL, dest:myToken(ERC20), function:transfer, arguments:['msg.sender', 'TMP_21']  \""
        ],
        "executable_instructions": 188,
        "state_variable": "balances",
        "error": "",
        "result": "",
        "execution_details": ""
    }
}