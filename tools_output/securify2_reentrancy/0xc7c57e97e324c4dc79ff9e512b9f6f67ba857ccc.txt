Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Sale
Line:        79
Source: 
> 
>    uint256 public totalTokenForSell=5200000000000000000000000; //52,00,000 SWG for sell
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Sale
Line:        213
Source: 
>     function getPrice()public view returns(uint256){
>         if(startDate==0)
>            ^^^^^^^^^^^^
>         {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Sale
Line:        267
Source: 
>     function startSale()public onlyOwner{
>         require(startDate==0);
>                 ^^^^^^^^^^^^
>         startDate=now;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        203
Source: 
>     //function to claim tokens bought during the sale.
>     function claimTokens()public distributionStarted{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(tokensBought[msg.sender]>0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        212
Source: 
>     
>     function getPrice()public view returns(uint256){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if(startDate==0)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        248
Source: 
>      
>     function withdrawCollectedETH()public onlyOwner{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(collectedETH>0 && address(this).balance>=collectedETH);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        258
Source: 
>      
>     function withdrawUnsoldSWG()public onlyOwner{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(unsoldTokens()>0 && availableSWG()>=unsoldTokens());

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        266
Source: 
>      
>     function startSale()public onlyOwner{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(startDate==0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        272
Source: 
>     //only owner can call this function
>     function startTokenDistribution()public onlyOwner{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(startDistribution==false,"Distribution is already started");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Sale
Line:        207
Source: 
>         tokensBought[msg.sender]=0;
>         Token.transfer(msg.sender,amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Sale
Line:        82
Source: 
>     uint256 public totalTokensSold;
>     ERC20 public Token;
>     ^^^^^^^^^^^^^^^^^^
>     address payable public owner;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        79
Source: 
> 
>    uint256 public totalTokenForSell=5200000000000000000000000; //52,00,000 SWG for sell
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
>   

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    Sale
Line:        252
Source: 
>         collectedETH=0;
>         owner.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Sale
Line:        252
Source: 
>         collectedETH=0;
>         owner.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Sale
Line:        252
Source: 
>         collectedETH=0;
>         owner.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Sale
Line:        279
Source: 
>     function availableSWG()public view returns(uint256){
>         return Token.balanceOf(address(this));
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Sale
Line:        207
Source: 
>         tokensBought[msg.sender]=0;
>         Token.transfer(msg.sender,amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Sale
Line:        260
Source: 
>         require(unsoldTokens()>0 && availableSWG()>=unsoldTokens());
>         Token.transfer(owner,unsoldTokens());
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Sale
Line:        81
Source: 
>   
>     uint256 public totalTokensSold;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ERC20 public Token;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Sale
Line:        85
Source: 
>   
>     uint256 public collectedETH;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public startDate;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Sale
Line:        86
Source: 
>     uint256 public collectedETH;
>     uint256 public startDate;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     bool public startDistribution;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Sale
Line:        87
Source: 
>     uint256 public startDate;
>     bool public startDistribution;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address=>uint256)public tokensBought;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Sale
Line:        151
Source: 
>         require(amount<=unsoldTokens() && amount<=availableSWG());
>         totalTokensSold =totalTokensSold.add(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         collectedETH=collectedETH.add(msg.value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Sale
Line:        152
Source: 
>         totalTokensSold =totalTokensSold.add(amount);
>         collectedETH=collectedETH.add(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         tokensBought[msg.sender]=tokensBought[msg.sender].add(amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Sale
Line:        196
Source: 
>        require(amount<=unsoldTokens()  && amount<=availableSWG());
>        totalTokensSold =totalTokensSold.add(amount);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        collectedETH=collectedETH.add(msg.value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Sale
Line:        197
Source: 
>        totalTokensSold =totalTokensSold.add(amount);
>        collectedETH=collectedETH.add(msg.value);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        tokensBought[msg.sender]=tokensBought[msg.sender].add(amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Sale
Line:        207
Source: 
>         tokensBought[msg.sender]=0;
>         Token.transfer(msg.sender,amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Sale
Line:        260
Source: 
>         require(unsoldTokens()>0 && availableSWG()>=unsoldTokens());
>         Token.transfer(owner,unsoldTokens());
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
