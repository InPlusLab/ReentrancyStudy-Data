Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AffiliateEscrow
Line:        89
Source: 
> 
>     function deposit(address affiliate) external payable onlyNetworkContracts {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (msg.value > 0, "Not a valid deposit");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AffiliateEscrow
Line:        96
Source: 
> 
>     function getAffiliatePayment(address affiliate) external view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return payments[affiliate];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AffiliateEscrow
Line:        82
Source: 
>     modifier onlyNetworkContracts {
>         if (data.allowOnlyDappContracts(msg.sender)) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AffiliateEscrow
Line:        93
Source: 
>         payments[affiliate] = payments[affiliate].add(amount);
>         eventLogger.emitAffiliateDeposit(affiliate, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AffiliateEscrow
Line:        82
Source: 
>     modifier onlyNetworkContracts {
>         if (data.allowOnlyDappContracts(msg.sender)) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AffiliateEscrow
Line:        108
Source: 
>         to.transfer(amount);
>         eventLogger.emitAffiliateWithdraw(to, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    AffiliateEscrow
Line:        107
Source: 
>         require(amount > 0, "No funds");
>         to.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^
>         eventLogger.emitAffiliateWithdraw(to, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.5.7;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AffiliateEscrow
Line:        71
Source: 
> 
>     Storage data;
>     ^^^^^^^^^^^^
>     Logger eventLogger;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AffiliateEscrow
Line:        72
Source: 
>     Storage data;
>     Logger eventLogger;
>     ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    AffiliateEscrow
Line:        107
Source: 
>         require(amount > 0, "No funds");
>         to.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^
>         eventLogger.emitAffiliateWithdraw(to, amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    AffiliateEscrow
Line:        107
Source: 
>         require(amount > 0, "No funds");
>         to.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^
>         eventLogger.emitAffiliateWithdraw(to, amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    AffiliateEscrow
Line:        107
Source: 
>         require(amount > 0, "No funds");
>         to.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^
>         eventLogger.emitAffiliateWithdraw(to, amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AffiliateEscrow
Line:        82
Source: 
>     modifier onlyNetworkContracts {
>         if (data.allowOnlyDappContracts(msg.sender)) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AffiliateEscrow
Line:        93
Source: 
>         payments[affiliate] = payments[affiliate].add(amount);
>         eventLogger.emitAffiliateDeposit(affiliate, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AffiliateEscrow
Line:        108
Source: 
>         to.transfer(amount);
>         eventLogger.emitAffiliateWithdraw(to, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    AffiliateEscrow
Line:        107
Source: 
>         require(amount > 0, "No funds");
>         to.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^
>         eventLogger.emitAffiliateWithdraw(to, amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    AffiliateEscrow
Line:        92
Source: 
>         uint256 amount = msg.value;
>         payments[affiliate] = payments[affiliate].add(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         eventLogger.emitAffiliateDeposit(affiliate, amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    AffiliateEscrow
Line:        105
Source: 
>         uint256 amount = payments[to];
>         payments[to] = 0;
>         ^^^^^^^^^^^^^^^^
>         require(amount > 0, "No funds");

[0m
