Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    AssetAdapter
Line:        77
Source: 
>         // solium-disable-next-line security/no-inline-assembly
>         assembly {
>          ^^^^^^^^^
>             assetType := and(

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    EthAdapter
Line:        491
Source: 
>         // solium-disable-next-line security/no-inline-assembly
>         assembly {
>          ^^^^^^^^^
>             amount := mload(add(assetData, 34))

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    WithSwapsCreator
Line:        193
Source: 
> 
>     function changeSwapCreator(address _newCreator) public onlyOwner {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         swapCreator = _newCreator;

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    EthAdapter
Line:        505
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool transferSuccessful,) = _to.call.value(_amount)("");
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(transferSuccessful, "eth transfer failed");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        120
Source: 
> 
>     function changeOwner(address _newOwner) external onlyOwner {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WithStatus
Line:        140
Source: 
> 
>     function setStatus(Status _status) external onlyOwner {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit StatusChanged(status, _status);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    WithSwapsCreator
Line:        193
Source: 
> 
>     function changeSwapCreator(address _newCreator) public onlyOwner {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         swapCreator = _newCreator;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WithStatus
Line:        140
Source: 
> 
>     function setStatus(Status _status) external onlyOwner {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit StatusChanged(status, _status);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WithOracles
Line:        160
Source: 
> 
>     function approveOracle(address _oracle) external onlyOwner {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         oracles[_oracle] = true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WithOracles
Line:        164
Source: 
> 
>     function revokeOracle(address _oracle) external onlyOwner {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         oracles[_oracle] = false;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WithSwapsCreator
Line:        193
Source: 
> 
>     function changeSwapCreator(address _newCreator) public onlyOwner {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         swapCreator = _newCreator;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WithOracles
Line:        160
Source: 
> 
>     function approveOracle(address _oracle) external onlyOwner {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         oracles[_oracle] = true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    WithOracles
Line:        164
Source: 
> 
>     function revokeOracle(address _oracle) external onlyOwner {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         oracles[_oracle] = false;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    RampInstantEscrows
Line:        314
Source: 
>      */
>     function create(
>      ^^^^^^^^^^^^^^^
>         address payable _pool,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    RampInstantEscrows
Line:        360
Source: 
>      */
>     function release(
>      ^^^^^^^^^^^^^^^^
>         address _pool,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    RampInstantEscrows
Line:        391
Source: 
>      */
>     function returnFunds(
>      ^^^^^^^^^^^^^^^^^^^^
>         address payable _pool,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    RampInstantEscrows
Line:        420
Source: 
>      */
>     function getSwapStatus(
>      ^^^^^^^^^^^^^^^^^^^^^^
>         address _pool,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    EthAdapter
Line:        514
Source: 
> 
>     function withdrawFees(
>      ^^^^^^^^^^^^^^^^^^^^^
>         bytes calldata /*assetData*/,

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    EthAdapter
Line:        520
Source: 
>         accumulatedFees = 0;
>         _to.transfer(fees);
>          ^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    RampInstantEscrows
Line:        426
Source: 
>         bytes32 _paymentDetailsHash
>     ) external view returns (uint32 status) {
>                               ^^^^^^^^^^^^^
>         bytes32 swapHash = getSwapHash(

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AssetAdapter
Line:        29
Source: 
> 
>     uint16 public ASSET_TYPE;
>      ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    RampInstantPoolInterface
Line:        98
Source: 
> 
>     uint16 public ASSET_TYPE;
>      ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EthAdapter
Line:        505
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool transferSuccessful,) = _to.call.value(_amount)("");
>           ^^^^^^^^^^^^^^^^^^^^^^^
>         require(transferSuccessful, "eth transfer failed");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AssetAdapter
Line:        74
Source: 
>      */
>     modifier checkAssetTypeAndData(bytes memory assetData, address _pool) {
>                                     ^^^^^^^^^^^^^^^^^^^^^^
>         uint16 assetType;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AssetAdapter
Line:        74
Source: 
>      */
>     modifier checkAssetTypeAndData(bytes memory assetData, address _pool) {
>                                                             ^^^^^^^^^^^^^
>         uint16 assetType;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AssetAdapter
Line:        75
Source: 
>     modifier checkAssetTypeAndData(bytes memory assetData, address _pool) {
>         uint16 assetType;
>          ^^^^^^^^^^^^^^^^
>         // solium-disable-next-line security/no-inline-assembly

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    WithStatus
Line:        145
Source: 
> 
>     modifier statusAtLeast(Status _status) {
>                             ^^^^^^^^^^^^^^
>         require(status >= _status, "invalid contract status");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    WithOracles
Line:        154
Source: 
> 
>     mapping (address => bool) oracles;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    WithOracles
Line:        168
Source: 
> 
>     modifier isOracle(address _oracle) {
>                        ^^^^^^^^^^^^^^^
>         require(oracles[_oracle], "invalid oracle address");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    WithOracles
Line:        173
Source: 
> 
>     modifier onlyOracleOrPool(address _pool, address _oracle) {
>                                ^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    WithOracles
Line:        173
Source: 
> 
>     modifier onlyOracleOrPool(address _pool, address _oracle) {
>                                               ^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    AssetAdapterWithFees
Line:        229
Source: 
>     function getFee(uint256 _amount) internal view returns (uint256) {
>         uint256 fee = _amount * feeThousandthsPercent / 100000;
>                                                          ^^^^^^
>         return fee < minFeeAmount

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    RampInstantEscrows
Line:        290
Source: 
> 
>     uint32 internal constant MIN_ACTUAL_TIMESTAMP = 1000000000;
>                                                      ^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    EthAdapter
Line:        505
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool transferSuccessful,) = _to.call.value(_amount)("");
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(transferSuccessful, "eth transfer failed");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EthAdapter
Line:        520
Source: 
>         accumulatedFees = 0;
>         _to.transfer(fees);
>          ^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    EthAdapter
Line:        505
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool transferSuccessful,) = _to.call.value(_amount)("");
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(transferSuccessful, "eth transfer failed");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    EthAdapter
Line:        520
Source: 
>         accumulatedFees = 0;
>         _to.transfer(fees);
>          ^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EthAdapter
Line:        505
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool transferSuccessful,) = _to.call.value(_amount)("");
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(transferSuccessful, "eth transfer failed");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EthAdapter
Line:        520
Source: 
>         accumulatedFees = 0;
>         _to.transfer(fees);
>          ^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AssetAdapter
Line:        58
Source: 
>     ) internal returns (bool success) {
>         return RampInstantPoolInterface(_from).sendFundsToSwap(amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    EthAdapter
Line:        505
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool transferSuccessful,) = _to.call.value(_amount)("");
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(transferSuccessful, "eth transfer failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    WithSwapsCreator
Line:        185
Source: 
> 
>     address internal swapCreator;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    RampInstantEscrows
Line:        288
Source: 
>     /// @dev contract version, defined in semver
>     string public constant VERSION = "0.5.1";
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    RampInstantEscrows
Line:        467
Source: 
>             // solium-disable-next-line security/no-block-members
>             swaps[swapHash] > MIN_ACTUAL_TIMESTAMP && block.timestamp > swaps[swapHash],
>                                                        ^^^^^^^^^^^^^^^
>             "swap not expired or invalid"

[0m
