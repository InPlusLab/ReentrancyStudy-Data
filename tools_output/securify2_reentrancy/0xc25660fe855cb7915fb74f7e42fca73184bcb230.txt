[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LinkTokenReceiver
Line:        38
Source: 
>   {
>     assembly {
>     ^^^^^^^^^^
>       // solhint-disable-next-line avoid-low-level-calls

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LinkTokenReceiver
Line:        65
Source: 
>     bytes4 funcSelector;
>     assembly {
>     ^^^^^^^^^^
>       // solhint-disable-next-line avoid-low-level-calls

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        190
Source: 
>    */
>   function owner() public view returns (address) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        213
Source: 
>    */
>   function transferOwnership(address newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LinkTokenReceiver
Line:        28
Source: 
>    */
>   function onTokenTransfer(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _sender,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        213
Source: 
>    */
>   function transferOwnership(address newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(newOwner);

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    LinkTokenReceiver
Line:        45
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (bool success, ) = address(this).delegatecall(_data); // calls oracleRequest
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(success, "Unable to create request");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Oracle
Line:        489
Source: 
>     // See: https://solidity.readthedocs.io/en/develop/security-considerations.html#use-the-checks-effects-interactions-pattern
>     (bool success, ) = _callbackAddress.call(abi.encodeWithSelector(_callbackFunctionId, _requestId, _data)); // solhint-disable-line avoid-low-level-calls
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return success;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        213
Source: 
>    */
>   function transferOwnership(address newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Oracle
Line:        460
Source: 
>    */
>   function fulfillOracleRequest(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 _requestId,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Oracle
Line:        526
Source: 
>    */
>   function withdraw(address _recipient, uint256 _amount)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     external

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    LinkTokenReceiver
Line:        28
Source: 
>    */
>   function onTokenTransfer(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _sender,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Oracle
Line:        406
Source: 
>    */
>   function oracleRequest(
>   ^^^^^^^^^^^^^^^^^^^^^^^
>     address _sender,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Oracle
Line:        498
Source: 
>    */
>   function getAuthorizationStatus(address _node)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     external

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Oracle
Line:        512
Source: 
>    */
>   function setFulfillmentPermission(address _node, bool _allowed)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     external

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Oracle
Line:        489
Source: 
>     // See: https://solidity.readthedocs.io/en/develop/security-considerations.html#use-the-checks-effects-interactions-pattern
>     (bool success, ) = _callbackAddress.call(abi.encodeWithSelector(_callbackFunctionId, _requestId, _data)); // solhint-disable-line avoid-low-level-calls
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return success;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Oracle
Line:        533
Source: 
>     withdrawableTokens = withdrawableTokens.sub(_amount);
>     assert(LinkToken.transfer(_recipient, _amount));
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    LinkTokenReceiver
Line:        45
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (bool success, ) = address(this).delegatecall(_data); // calls oracleRequest
>      ^^^^^^^^^^^^
>     require(success, "Unable to create request");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Oracle
Line:        360
Source: 
> 
>   LinkTokenInterface internal LinkToken;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   mapping(bytes32 => bytes32) private commitments;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Oracle
Line:        489
Source: 
>     // See: https://solidity.readthedocs.io/en/develop/security-considerations.html#use-the-checks-effects-interactions-pattern
>     (bool success, ) = _callbackAddress.call(abi.encodeWithSelector(_callbackFunctionId, _requestId, _data)); // solhint-disable-line avoid-low-level-calls
>      ^^^^^^^^^^^^
>     return success;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LinkTokenReceiver
Line:        63
Source: 
>    */
>   modifier permittedFunctionsForLINK(bytes memory _data) {
>                                      ^^^^^^^^^^^^^^^^^^
>     bytes4 funcSelector;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LinkTokenReceiver
Line:        64
Source: 
>   modifier permittedFunctionsForLINK(bytes memory _data) {
>     bytes4 funcSelector;
>     ^^^^^^^^^^^^^^^^^^^
>     assembly {

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LinkTokenReceiver
Line:        77
Source: 
>    */
>   modifier validRequestLength(bytes memory _data) {
>                               ^^^^^^^^^^^^^^^^^^
>     require(_data.length >= MINIMUM_REQUEST_LENGTH, "Invalid request length");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Oracle
Line:        607
Source: 
>    */
>   modifier hasAvailableFunds(uint256 _amount) {
>                              ^^^^^^^^^^^^^^^
>     require(withdrawableTokens >= _amount.add(ONE_FOR_CONSISTENT_GAS_COST), "Amount requested is greater than withdrawable balance");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Oracle
Line:        616
Source: 
>    */
>   modifier isValidRequest(bytes32 _requestId) {
>                           ^^^^^^^^^^^^^^^^^^
>     require(commitments[_requestId] != 0, "Must have a valid requestId");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Oracle
Line:        633
Source: 
>    */
>   modifier checkCallbackAddress(address _to) {
>                                 ^^^^^^^^^^^
>     require(_to != address(LinkToken), "Cannot callback to LINK");

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Oracle
Line:        355
Source: 
>   uint256 constant public EXPIRY_TIME = 5 minutes;
>   uint256 constant private MINIMUM_CONSUMER_GAS_LIMIT = 400000;
>                                                         ^^^^^^
>   // We initialize fields to 1 instead of 0 so that the first invocation

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Oracle
Line:        533
Source: 
>     withdrawableTokens = withdrawableTokens.sub(_amount);
>     assert(LinkToken.transfer(_recipient, _amount));
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Oracle
Line:        584
Source: 
> 
>     assert(LinkToken.transfer(msg.sender, _payment));
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
