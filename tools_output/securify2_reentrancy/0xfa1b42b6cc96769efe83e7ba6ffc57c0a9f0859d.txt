[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Sale
Line:        206
Source: 
>     function getPrice()public view returns(uint256){
>         if(startDate==0)
>            ^^^^^^^^^^^^
>         {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Sale
Line:        280
Source: 
>     function startSale()public{
>         require(msg.sender==owner && startDate==0);
>                                      ^^^^^^^^^^^^
>         startDate=now;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        205
Source: 
>     
>     function getPrice()public view returns(uint256){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if(startDate==0)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        253
Source: 
>     
>     function changeOwner(address payable _owner) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender==owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        261
Source: 
>      
>     function withdrawETH()public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender==owner && collectedETH>0 && address(this).balance >= collectedETH);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        271
Source: 
>      
>     function withdrawOBR()public{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          require(msg.sender==owner && availableOBR()>0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Sale
Line:        279
Source: 
>      
>     function startSale()public{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender==owner && startDate==0);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Sale
Line:        253
Source: 
>     
>     function changeOwner(address payable _owner) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender==owner);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    Sale
Line:        265
Source: 
>         collectedETH=0;
>         owner.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Sale
Line:        78
Source: 
>     uint256 public totalSold;
>     ERC20 public Token;
>     ^^^^^^^^^^^^^^^^^^
>     address payable public owner;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> library SafeMath {

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        105
Source: 
>       {
>           uint256 rate= (uint256(2000000000000000000));
>                                  ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        111
Source: 
>       {
>           uint256 rate= (uint256(1940000000000000000));
>                                  ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        116
Source: 
>       {
>            uint256 rate= (uint256(1880000000000000000));
>                                   ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        121
Source: 
>       {
>            uint256 rate= (uint256(1830000000000000000));
>                                   ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        126
Source: 
>       {
>            uint256 rate= (uint256(1780000000000000000));
>                                   ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        131
Source: 
>       {
>            uint256 rate= (uint256(1730000000000000000));
>                                   ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        136
Source: 
>       {
>            uint256 rate= (uint256(1690000000000000000));
>                                   ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        160
Source: 
>       {
>           uint256 rate= (uint256(2000000000000000000));
>                                  ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        166
Source: 
>       {
>           uint256 rate= (uint256(1940000000000000000));
>                                  ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        171
Source: 
>       {
>            uint256 rate= (uint256(1880000000000000000));
>                                   ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        176
Source: 
>       {
>            uint256 rate= (uint256(1830000000000000000));
>                                   ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        181
Source: 
>       {
>            uint256 rate= (uint256(1780000000000000000));
>                                   ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        186
Source: 
>       {
>            uint256 rate= (uint256(1730000000000000000));
>                                   ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        191
Source: 
>       {
>            uint256 rate= (uint256(1690000000000000000));
>                                   ^^^^^^^^^^^^^^^^^^^
>           amount = (msg.value.mul(rate))/10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        212
Source: 
>       {
>          return 2000000000000000000;
>                 ^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        219
Source: 
>         
>           return 1940000000000000000;
>                  ^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        224
Source: 
>           
>            return 1880000000000000000;
>                   ^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        229
Source: 
>          
>           return 1830000000000000000;
>                  ^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        234
Source: 
>          
>           return 1780000000000000000;
>                  ^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        239
Source: 
>          
>           return 1730000000000000000;
>                  ^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Sale
Line:        243
Source: 
>       {
>           return 1690000000000000000;
>                  ^^^^^^^^^^^^^^^^^^^
>       } else{

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    Sale
Line:        265
Source: 
>         collectedETH=0;
>         owner.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Sale
Line:        265
Source: 
>         collectedETH=0;
>         owner.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Sale
Line:        265
Source: 
>         collectedETH=0;
>         owner.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Sale
Line:        144
Source: 
>         collectedETH=collectedETH.add(msg.value);
>         Token.transfer(msg.sender, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Sale
Line:        286
Source: 
>     function availableOBR()public view returns(uint256){
>         return Token.balanceOf(address(this));
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Sale
Line:        200
Source: 
>         collectedETH=collectedETH.add(msg.value);
>         Token.transfer(msg.sender, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Sale
Line:        273
Source: 
>          require(msg.sender==owner && availableOBR()>0);
>          Token.transfer(owner,availableOBR());
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Sale
Line:        77
Source: 
>   
>     uint256 public totalSold;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     ERC20 public Token;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Sale
Line:        81
Source: 
>   
>     uint256 public collectedETH;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public startDate;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Sale
Line:        82
Source: 
>     uint256 public collectedETH;
>     uint256 public startDate;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Sale
Line:        142
Source: 
>         require(amount<=availableOBR());
>         totalSold =totalSold.add(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         collectedETH=collectedETH.add(msg.value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Sale
Line:        143
Source: 
>         totalSold =totalSold.add(amount);
>         collectedETH=collectedETH.add(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Token.transfer(msg.sender, amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Sale
Line:        198
Source: 
>         require(amount<=availableOBR());
>         totalSold =totalSold.add(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         collectedETH=collectedETH.add(msg.value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Sale
Line:        199
Source: 
>         totalSold =totalSold.add(amount);
>         collectedETH=collectedETH.add(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Token.transfer(msg.sender, amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Sale
Line:        144
Source: 
>         collectedETH=collectedETH.add(msg.value);
>         Token.transfer(msg.sender, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Sale
Line:        200
Source: 
>         collectedETH=collectedETH.add(msg.value);
>         Token.transfer(msg.sender, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Sale
Line:        273
Source: 
>          require(msg.sender==owner && availableOBR()>0);
>          Token.transfer(owner,availableOBR());
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
