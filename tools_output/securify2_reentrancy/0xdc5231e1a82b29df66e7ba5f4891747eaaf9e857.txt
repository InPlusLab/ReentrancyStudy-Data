Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.16. Changing pragma version to 0.5.16....
[0;31mSeverity:    LOW
Pattern:     Benign Reentrancy
Description: Reentrancy is equivalent with two consecutive calls of
             the function
Type:        Violation
Contract:    HidethepainTokenSale
Line:        95
Source: 
>         require(
>             tokenContract.transfer(msg.sender, _numberOfTokens),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "Some problem with token transfer"

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    HidethepainToken
Line:        9
Source: 
> contract HidethepainToken {
>     string public name = "HideThePain Harold"; //Optional
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public symbol = "HTPH"; //Optional

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    HidethepainToken
Line:        10
Source: 
>     string public name = "HideThePain Harold"; //Optional
>     string public symbol = "HTPH"; //Optional
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public standard = "HideThePain Harold v1.0"; //Not in documentation, extra!

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    HidethepainToken
Line:        11
Source: 
>     string public symbol = "HTPH"; //Optional
>     string public standard = "HideThePain Harold v1.0"; //Not in documentation, extra!
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public totalSupply;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    HidethepainToken
Line:        30
Source: 
> 
>     function transfer(address _to, uint256 _value)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    HidethepainToken
Line:        41
Source: 
> 
>     function approve(address _spender, uint256 _value)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    HidethepainToken
Line:        50
Source: 
> 
>     function transferFrom(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address _from,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    HidethepainTokenSale
Line:        85
Source: 
> 
>     function buyTokens(uint256 _numberOfTokens) public payable {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    HidethepainTokenSale
Line:        102
Source: 
> 
>     function endSale() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Only the admin can call this function");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HidethepainToken
Line:        30
Source: 
> 
>     function transfer(address _to, uint256 _value)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HidethepainToken
Line:        41
Source: 
> 
>     function approve(address _spender, uint256 _value)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HidethepainToken
Line:        50
Source: 
> 
>     function transferFrom(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address _from,

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    HidethepainTokenSale
Line:        72
Source: 
> contract HidethepainTokenSale {
>     address payable admin;
>     ^^^^^^^^^^^^^^^^^^^^^
>     HidethepainToken public tokenContract;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HidethepainTokenSale
Line:        91
Source: 
>         require(
>             tokenContract.balanceOf(address(this)) >= _numberOfTokens,
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "Contact does not have enough tokens"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HidethepainTokenSale
Line:        95
Source: 
>         require(
>             tokenContract.transfer(msg.sender, _numberOfTokens),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "Some problem with token transfer"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HidethepainTokenSale
Line:        105
Source: 
>         require(
>             tokenContract.transfer(
>             ^^^^^^^^^^^^^^^^^^^^^^^
>                 msg.sender,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    HidethepainTokenSale
Line:        107
Source: 
>                 msg.sender,
>                 tokenContract.balanceOf(address(this))
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             ),

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    HidethepainTokenSale
Line:        75
Source: 
>     uint256 public tokenPrice;
>     uint256 public tokensSold;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    HidethepainTokenSale
Line:        98
Source: 
>         );
>         tokensSold += _numberOfTokens;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Sell(msg.sender, _numberOfTokens);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HidethepainToken
Line:        45
Source: 
>     {
>         allowance[msg.sender][_spender] = _value;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender, _spender, _value);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    HidethepainToken
Line:        9
Source: 
> contract HidethepainToken {
>     string public name = "HideThePain Harold"; //Optional
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public symbol = "HTPH"; //Optional

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    HidethepainToken
Line:        10
Source: 
>     string public name = "HideThePain Harold"; //Optional
>     string public symbol = "HTPH"; //Optional
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public standard = "HideThePain Harold v1.0"; //Not in documentation, extra!

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    HidethepainToken
Line:        11
Source: 
>     string public symbol = "HTPH"; //Optional
>     string public standard = "HideThePain Harold v1.0"; //Not in documentation, extra!
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public totalSupply;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    HidethepainToken
Line:        12
Source: 
>     string public standard = "HideThePain Harold v1.0"; //Not in documentation, extra!
>     uint256 public totalSupply;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
