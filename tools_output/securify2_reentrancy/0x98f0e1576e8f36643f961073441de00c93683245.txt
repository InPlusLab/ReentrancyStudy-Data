Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    GOKUAirdrop
Line:        30
Source: 
>     mapping(address => uint256) public supplies;
>     IERC20 public goku = IERC20(0x4E44FE174e934ff78A77BEe3C2b752fD1BEeFDEf); //need replace
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    GOKUAirdrop
Line:        53
Source: 
> 
>     function transferOwnership(address owner)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GOKUAirdrop
Line:        46
Source: 
> 
>     function setAirdropSupply(address pool, uint256 initSupply)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GOKUAirdrop
Line:        60
Source: 
> 
>     function getRemainAirdrop(address pool)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    GOKUAirdrop
Line:        82
Source: 
>         require(supplies[msg.sender] > 0, "Unable to call!");
>         goku.mint(msg.sender, supplies[msg.sender]);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         supplies[msg.sender] = 0;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GOKUAirdrop
Line:        74
Source: 
>         require(supplies[msg.sender] >= value, "Unable to airdrop!");
>         goku.mint(msg.sender, value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         supplies[msg.sender] = supplies[msg.sender].sub(value);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    GOKUAirdrop
Line:        82
Source: 
>         require(supplies[msg.sender] > 0, "Unable to call!");
>         goku.mint(msg.sender, supplies[msg.sender]);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         supplies[msg.sender] = 0;

[0m
