Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;33mSeverity:    LOW
Pattern:     Benign Reentrancy
Description: Reentrancy is equivalent with two consecutive calls of
             the function
Type:        Warning
Contract:    BullStaking
Line:        460
Source: 
>         ERC20Interface = ERC20(tokenAddress);
>         return ERC20Interface.transferFrom(allower, receiver, amount);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ERC20
Line:        80
Source: 
> 
>     uint256 private _totalSupply;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        92
Source: 
> 
>     function name() public view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _name;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        96
Source: 
> 
>     function symbol() public view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _symbol;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        100
Source: 
> 
>     function decimals() public view returns (uint8) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _decimals;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        104
Source: 
> 
>     function totalSupply() public view override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _totalSupply;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        108
Source: 
> 
>     function balanceOf(address account) public view override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _balances[account];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        112
Source: 
> 
>     function transfer(address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(msg.sender, recipient, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20
Line:        118
Source: 
> 
>     function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(sender, recipient, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        196
Source: 
> 
>     function tokenSaleStarted() public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return distribution_ongoing;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        200
Source: 
> 
>     function startSale() public
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     onlyOwner {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        205
Source: 
> 
>     function endSale() public
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     onlyOwner {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        210
Source: 
> 
>     function name() public view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _name;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        214
Source: 
> 
>     function symbol() public view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _symbol;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        218
Source: 
> 
>     function decimals() public view returns (uint8) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _decimals;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        222
Source: 
> 
>     function totalSupply() public view override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _totalSupply;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        226
Source: 
> 
>     function balanceOf(address account) public view override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _balances[account];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        230
Source: 
> 
>     function transfer(address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(msg.sender, recipient, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        235
Source: 
> 
>     function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(sender, recipient, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        258
Source: 
> 
>     function finishDistribution() onlyOwner canDistr public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         distributionFinished = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        308
Source: 
> 
>     function init_staking(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address tokenAddress_,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        334
Source: 
> 
>     function addReward(uint256 rewardAmount, uint256 withdrawableAmount)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        352
Source: 
> 
>     function stakeOf(address account) public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _stakes[account];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        356
Source: 
> 
>     function stake(uint256 amount)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BullStaking
Line:        365
Source: 
> 
>     function withdraw(uint256 amount)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ERC20
Line:        112
Source: 
> 
>     function transfer(address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(msg.sender, recipient, amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ERC20
Line:        118
Source: 
> 
>     function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(sender, recipient, amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BullStaking
Line:        230
Source: 
> 
>     function transfer(address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(msg.sender, recipient, amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BullStaking
Line:        235
Source: 
> 
>     function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(sender, recipient, amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BullStaking
Line:        356
Source: 
> 
>     function stake(uint256 amount)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BullStaking
Line:        365
Source: 
> 
>     function withdraw(uint256 amount)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ERC20
Line:        108
Source: 
> 
>     function balanceOf(address account) public view override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _balances[account];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BullStaking
Line:        226
Source: 
> 
>     function balanceOf(address account) public view override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _balances[account];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BullStaking
Line:        352
Source: 
> 
>     function stakeOf(address account) public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _stakes[account];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20
Line:        86
Source: 
> 
>     constructor (string memory name, string memory symbol) public {
>                  ^^^^^^^^^^^^^^^^^^
>         _name = name;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20
Line:        86
Source: 
> 
>     constructor (string memory name, string memory symbol) public {
>                                      ^^^^^^^^^^^^^^^^^^^^
>         _name = name;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    BullStaking
Line:        178
Source: 
> 
>     constructor (string memory name, string memory symbol, address payable _ethFund, uint256 _tokensPerEth) public {
>                  ^^^^^^^^^^^^^^^^^^
>         tokensPerEth = _tokensPerEth*1e18;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    BullStaking
Line:        178
Source: 
> 
>     constructor (string memory name, string memory symbol, address payable _ethFund, uint256 _tokensPerEth) public {
>                                      ^^^^^^^^^^^^^^^^^^^^
>         tokensPerEth = _tokensPerEth*1e18;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BullStaking
Line:        155
Source: 
> 
>     ERC20 public ERC20Interface;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     event Staked(address indexed token, address indexed staker_, uint256 requestedAmount_, uint256 stakedAmount_);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BullStaking
Line:        174
Source: 
> 
>     bool public distribution_ongoing = false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BullStaking
Line:        296
Source: 
> 
>       uint total_token = tokenPurchase;
>       ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BullStaking
Line:        308
Source: 
> 
>     function init_staking(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address tokenAddress_,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BullStaking
Line:        471
Source: 
> 
>     modifier _realAddress(address addr) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(addr != address(0), "BullStaking: zero address");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BullStaking
Line:        476
Source: 
> 
>     modifier _positive(uint256 amount) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(amount >= 0, "BullStaking: negative amount");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BullStaking
Line:        481
Source: 
> 
>     modifier _after(uint eventTime) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(now >= eventTime, "BullStaking: bad timing for the request");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BullStaking
Line:        486
Source: 
> 
>     modifier _before(uint eventTime) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(now < eventTime, "BullStaking: bad timing for the request");

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> //SPDX-License-Identifier: UNLICENSED
> pragma solidity ^0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BullStaking
Line:        153
Source: 
> 
>     address payable ethFund = 0xB205238e2eCb8462d5D826E28DCd2aCe0BF811a4;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BullStaking
Line:        471
Source: 
> 
>     modifier _realAddress(address addr) {
>                           ^^^^^^^^^^^^
>         require(addr != address(0), "BullStaking: zero address");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BullStaking
Line:        476
Source: 
> 
>     modifier _positive(uint256 amount) {
>                        ^^^^^^^^^^^^^^
>         require(amount >= 0, "BullStaking: negative amount");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BullStaking
Line:        481
Source: 
> 
>     modifier _after(uint eventTime) {
>                     ^^^^^^^^^^^^^^
>         require(now >= eventTime, "BullStaking: bad timing for the request");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BullStaking
Line:        486
Source: 
> 
>     modifier _before(uint eventTime) {
>                      ^^^^^^^^^^^^^^
>         require(now < eventTime, "BullStaking: bad timing for the request");

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BullStaking
Line:        185
Source: 
>         _decimals = 18;
>         _totalSupply = 100000000e18;
>                        ^^^^^^^^^^^^
>         owner = msg.sender;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    BullStaking
Line:        302
Source: 
> 
>       ethFund.transfer(msg.value);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       assert(distr(msg.sender, total_token));

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    BullStaking
Line:        302
Source: 
> 
>       ethFund.transfer(msg.value);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       assert(distr(msg.sender, total_token));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BullStaking
Line:        460
Source: 
>         ERC20Interface = ERC20(tokenAddress);
>         return ERC20Interface.transferFrom(allower, receiver, amount);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BullStaking
Line:        468
Source: 
>         ERC20Interface = ERC20(tokenAddress);
>         return ERC20Interface.transfer(to, amount);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    ERC20
Line:        80
Source: 
> 
>     uint256 private _totalSupply;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    BullStaking
Line:        170
Source: 
>     uint256 public price;
>     uint256 public sold = 0;
>     ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    BullStaking
Line:        176
Source: 
> 
>     uint256 public tokensPerEth = 60000e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    BullStaking
Line:        302
Source: 
> 
>       ethFund.transfer(msg.value);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       assert(distr(msg.sender, total_token));

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BullStaking
Line:        266
Source: 
> 
>         _balances[owner] = _balances[owner].sub(_amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _balances[_to] = _balances[_to].add(_amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BullStaking
Line:        267
Source: 
>         _balances[owner] = _balances[owner].sub(_amount);
>         _balances[_to] = _balances[_to].add(_amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BullStaking
Line:        298
Source: 
> 
>       sold= SafeMath.add(sold, total_token);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BullStaking
Line:        346
Source: 
> 
>         totalReward = totalReward.add(rewardAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         rewardBalance = totalReward;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BullStaking
Line:        347
Source: 
>         totalReward = totalReward.add(rewardAmount);
>         rewardBalance = totalReward;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         earlyWithdrawReward = earlyWithdrawReward.add(withdrawableAmount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BullStaking
Line:        348
Source: 
>         rewardBalance = totalReward;
>         earlyWithdrawReward = earlyWithdrawReward.add(withdrawableAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BullStaking
Line:        459
Source: 
> 
>         ERC20Interface = ERC20(tokenAddress);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return ERC20Interface.transferFrom(allower, receiver, amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BullStaking
Line:        467
Source: 
>     returns (bool) {
>         ERC20Interface = ERC20(tokenAddress);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return ERC20Interface.transfer(to, amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ERC20
Line:        127
Source: 
>         require(recipient != address(0), "ERC20: transfer to the zero address");
>         _balances[sender] = _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _balances[recipient] = _balances[recipient].add(amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ERC20
Line:        128
Source: 
>         _balances[sender] = _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance");
>         _balances[recipient] = _balances[recipient].add(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(sender, recipient, amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    BullStaking
Line:        246
Source: 
> 
>         _balances[sender] = _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _balances[recipient] = _balances[recipient].add(amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    BullStaking
Line:        247
Source: 
>         _balances[sender] = _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance");
>         _balances[recipient] = _balances[recipient].add(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(sender, recipient, amount);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ERC20
Line:        78
Source: 
> 
>     mapping (address => mapping (address => uint256)) private _allowances;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
