Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        260
Source: 
>     function bytesToAddress(bytes memory bys) private pure returns (address addr) {
>         assembly {
>         ^^^^^^^^^^
>             addr := mload(add(bys, 20))

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        19
Source: 
> 
>     uint REFERRER_1_LEVEL_LIMIT = 2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint PERIOD_LENGTH = 100 days;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        20
Source: 
>     uint REFERRER_1_LEVEL_LIMIT = 2;
>     uint PERIOD_LENGTH = 100 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        149
Source: 
>     
>     function failSafe(address payable _toUser, uint _amount) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == ownerWallet, "only Owner Wallet");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        158
Source: 
> 
>     function contractLock(bool _lockStatus) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == ownerWallet, "Invalid User");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        165
Source: 
>     
>     function updateLevelPrice(uint _level,uint _levelPrice) public returns(bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == ownerWallet,"only ownerWallet");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        251
Source: 
> 
>     function viewUserReferral(address _user) public view returns(address[] memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].referral;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        255
Source: 
> 
>     function viewUserLevelExpired(address _user, uint _level) public view returns(uint) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].levelExpired[_level];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TRUSTWALLET2X2
Line:        158
Source: 
> 
>     function contractLock(bool _lockStatus) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == ownerWallet, "Invalid User");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        165
Source: 
>     
>     function updateLevelPrice(uint _level,uint _levelPrice) public returns(bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == ownerWallet,"only ownerWallet");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        251
Source: 
> 
>     function viewUserReferral(address _user) public view returns(address[] memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].referral;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        255
Source: 
> 
>     function viewUserLevelExpired(address _user, uint _level) public view returns(uint) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].levelExpired[_level];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        208
Source: 
>             require(
>                 address(uint160(referer)).send(LEVEL_PRICE[_level]),
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 "referer transfer failed"

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        19
Source: 
> 
>     uint REFERRER_1_LEVEL_LIMIT = 2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint PERIOD_LENGTH = 100 days;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        20
Source: 
>     uint REFERRER_1_LEVEL_LIMIT = 2;
>     uint PERIOD_LENGTH = 100 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        22
Source: 
> 
>     mapping(uint => uint) public LEVEL_PRICE;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => mapping (uint => uint)) public levelEarned;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        29
Source: 
> 
>     event regLevelEvent(address indexed _user, address indexed _referrer, uint _time);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     event buyLevelEvent(address indexed _user, uint _level, uint _time);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        30
Source: 
>     event regLevelEvent(address indexed _user, address indexed _referrer, uint _time);
>     event buyLevelEvent(address indexed _user, uint _level, uint _time);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     event getMoneyForLevelEvent(address indexed _user, address indexed _referral, uint _level, uint _time);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        31
Source: 
>     event buyLevelEvent(address indexed _user, uint _level, uint _time);
>     event getMoneyForLevelEvent(address indexed _user, address indexed _referral, uint _level, uint _time);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     event lostMoneyForLevelEvent(address indexed _user, address indexed _referral, uint _level, uint _time);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        32
Source: 
>     event getMoneyForLevelEvent(address indexed _user, address indexed _referral, uint _level, uint _time);
>     event lostMoneyForLevelEvent(address indexed _user, address indexed _referral, uint _level, uint _time);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        138
Source: 
> 
>             for(uint l =_level - 1; l > 0; l--) require(users[msg.sender].levelExpired[l] >= now, "Buy the previous level");
>                 ^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        19
Source: 
> 
>     uint REFERRER_1_LEVEL_LIMIT = 2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint PERIOD_LENGTH = 100 days;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        20
Source: 
>     uint REFERRER_1_LEVEL_LIMIT = 2;
>     uint PERIOD_LENGTH = 100 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        208
Source: 
>             require(
>                 address(uint160(referer)).send(LEVEL_PRICE[_level]),
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 "referer transfer failed"

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        208
Source: 
>             require(
>                 address(uint160(referer)).send(LEVEL_PRICE[_level]),
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 "referer transfer failed"

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        208
Source: 
>             require(
>                 address(uint160(referer)).send(LEVEL_PRICE[_level]),
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 "referer transfer failed"

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        154
Source: 
> 
>         (_toUser).transfer(_amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    TRUSTWALLET2X2
Line:        27
Source: 
>     uint public currUserID = 0;
>     bool public lockStatus;
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    TRUSTWALLET2X2
Line:        208
Source: 
>             require(
>                 address(uint160(referer)).send(LEVEL_PRICE[_level]),
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 "referer transfer failed"

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TRUSTWALLET2X2
Line:        211
Source: 
>             );
>             users[referer].totalETHEarning += LEVEL_PRICE[_level];
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             levelEarned[referer][_level] +=  LEVEL_PRICE[_level];

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TRUSTWALLET2X2
Line:        212
Source: 
>             users[referer].totalETHEarning += LEVEL_PRICE[_level];
>             levelEarned[referer][_level] +=  LEVEL_PRICE[_level];
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             emit getMoneyForLevelEvent(referer, msg.sender, _level, now);

[0m
