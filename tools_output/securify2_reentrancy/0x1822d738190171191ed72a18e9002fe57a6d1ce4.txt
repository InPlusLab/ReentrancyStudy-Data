Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    PUSDT
Line:        159
Source: 
>     using SafeMath for uint256;
>     string public name     = "PairX Tether USD";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public symbol   = "PUSDT";

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    PUSDT
Line:        160
Source: 
>     string public name     = "PairX Tether USD";
>     string public symbol   = "PUSDT";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8  public decimals = 6;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    PUSDT
Line:        161
Source: 
>     string public symbol   = "PUSDT";
>     uint8  public decimals = 6;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PUSDT
Line:        191
Source: 
> 
>     function deposit(uint256 wad) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(canDeposit);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PUSDT
Line:        199
Source: 
>     }
>     function refund(uint256 principle) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         usedUSDT = usedUSDT.sub(principle);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PUSDT
Line:        204
Source: 
>     }
>     function withdraw(uint256 wad) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!reEntrancyMutex);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PUSDT
Line:        215
Source: 
>     }
>     function invest(uint256 wad) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         usedUSDT = usedUSDT.add(wad);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PUSDT
Line:        220
Source: 
>     }
>     function changeIvAddr(address newAddr) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == investAddr, "Only investAddr can change Invest Address.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PUSDT
Line:        225
Source: 
>     }
>     function changeMngAddr(address newAddr) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == managerAddr, "Only managerAddr can change manager Address.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PUSDT
Line:        230
Source: 
>     }
>     function changeDeposit(bool _canDeposit) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == managerAddr, "Only managerAddr can change Deposit State.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PUSDT
Line:        236
Source: 
> 
>     function totalSupply() public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return totalPUSDT;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PUSDT
Line:        240
Source: 
> 
>     function approve(address guy, uint256 wad) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowance[msg.sender][guy] = wad;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PUSDT
Line:        246
Source: 
> 
>     function transfer(address dst, uint256 wad) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return transferFrom(msg.sender, dst, wad);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PUSDT
Line:        191
Source: 
> 
>     function deposit(uint256 wad) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(canDeposit);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PUSDT
Line:        199
Source: 
>     }
>     function refund(uint256 principle) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         usedUSDT = usedUSDT.sub(principle);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PUSDT
Line:        204
Source: 
>     }
>     function withdraw(uint256 wad) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!reEntrancyMutex);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PUSDT
Line:        215
Source: 
>     }
>     function invest(uint256 wad) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         usedUSDT = usedUSDT.add(wad);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PUSDT
Line:        220
Source: 
>     }
>     function changeIvAddr(address newAddr) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == investAddr, "Only investAddr can change Invest Address.");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PUSDT
Line:        225
Source: 
>     }
>     function changeMngAddr(address newAddr) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == managerAddr, "Only managerAddr can change manager Address.");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PUSDT
Line:        230
Source: 
>     }
>     function changeDeposit(bool _canDeposit) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == managerAddr, "Only managerAddr can change Deposit State.");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PUSDT
Line:        246
Source: 
> 
>     function transfer(address dst, uint256 wad) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return transferFrom(msg.sender, dst, wad);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    PUSDT
Line:        250
Source: 
> 
>     function transferFrom(address src, address dst, uint256 wad)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PUSDT
Line:        240
Source: 
> 
>     function approve(address guy, uint256 wad) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowance[msg.sender][guy] = wad;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    PUSDT
Line:        210
Source: 
>         reEntrancyMutex = true;
>         usdt.transfer(msg.sender, wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(msg.sender, address(0), wad);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    PUSDT
Line:        170
Source: 
>     bool private canDeposit = true;//Allow to deposit.
>     IERC20 usdt;
>     ^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PUSDT
Line:        196
Source: 
>         emit Transfer(address(0), msg.sender, wad);
>         usdt.transferFrom(msg.sender, address(this), wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Deposit(msg.sender, wad);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PUSDT
Line:        201
Source: 
>         usedUSDT = usedUSDT.sub(principle);
>         usdt.transferFrom(msg.sender, address(this), principle);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Refund(msg.sender, principle);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PUSDT
Line:        210
Source: 
>         reEntrancyMutex = true;
>         usdt.transfer(msg.sender, wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(msg.sender, address(0), wad);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PUSDT
Line:        217
Source: 
>         usedUSDT = usedUSDT.add(wad);
>         usdt.transfer(investAddr, wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Invest(msg.sender, wad);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    PUSDT
Line:        194
Source: 
>         balanceOf[msg.sender] = balanceOf[msg.sender].add(wad);
>         totalPUSDT = totalPUSDT.add(wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(address(0), msg.sender, wad);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    PUSDT
Line:        216
Source: 
>     function invest(uint256 wad) public {
>         usedUSDT = usedUSDT.add(wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         usdt.transfer(investAddr, wad);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    PUSDT
Line:        200
Source: 
>     function refund(uint256 principle) public {
>         usedUSDT = usedUSDT.sub(principle);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         usdt.transferFrom(msg.sender, address(this), principle);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    PUSDT
Line:        207
Source: 
>         balanceOf[msg.sender] = balanceOf[msg.sender].sub(wad);
>         totalPUSDT = totalPUSDT.sub(wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    PUSDT
Line:        209
Source: 
> 
>         reEntrancyMutex = true;
>         ^^^^^^^^^^^^^^^^^^^^^^
>         usdt.transfer(msg.sender, wad);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    PUSDT
Line:        213
Source: 
>         emit Withdrawal(msg.sender, wad);
>         reEntrancyMutex = false;
>         ^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    PUSDT
Line:        241
Source: 
>     function approve(address guy, uint256 wad) public returns (bool) {
>         allowance[msg.sender][guy] = wad;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender, guy, wad);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    PUSDT
Line:        159
Source: 
>     using SafeMath for uint256;
>     string public name     = "PairX Tether USD";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public symbol   = "PUSDT";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    PUSDT
Line:        160
Source: 
>     string public name     = "PairX Tether USD";
>     string public symbol   = "PUSDT";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8  public decimals = 6;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    PUSDT
Line:        161
Source: 
>     string public symbol   = "PUSDT";
>     uint8  public decimals = 6;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
