[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DssSpell
Line:        267
Source: 
>         address _action = action;
>         assembly { _tag := extcodehash(_action) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         tag = _tag;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DssSpell
Line:        247
Source: 
> contract DssSpell {
>     DSPauseAbstract public pause =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         DSPauseAbstract(0xbE286431454714F511008713973d3B053A2d38f3);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    DssSpell
Line:        282
Source: 
>         require(now <= expiration, "This contract has expired");
>         require(eta == 0, "This spell has already been scheduled");
>                 ^^^^^^^^
>         eta = now + DSPauseAbstract(pause).delay();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        280
Source: 
> 
>     function schedule() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(now <= expiration, "This contract has expired");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        287
Source: 
> 
>     function cast() public officeHours {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!done, "spell-already-cast");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        283
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        284
Source: 
>         eta = now + DSPauseAbstract(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        290
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    SpellAction
Line:        226
Source: 
>         require(ilk == oldFlip.ilk(), "non-matching-ilk");
>         require(newFlip.vat() == oldFlip.vat(), "non-matching-vat");
>                 ^^^^^^^^^^^^^
>         require(newFlip.cat() == MCD_CAT, "non-matching-cat");

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    SpellAction
Line:        228
Source: 
>         require(newFlip.cat() == MCD_CAT, "non-matching-cat");
>         require(newFlip.vat() == MCD_VAT, "non-matching-vat");
>                 ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    SpellAction
Line:        237
Source: 
> 
>         newFlip.rely(MCD_CAT);
>         ^^^^^^^^^^^^^^^^^^^^^
>         newFlip.rely(MCD_END);

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    SpellAction
Line:        238
Source: 
>         newFlip.rely(MCD_CAT);
>         newFlip.rely(MCD_END);
>         ^^^^^^^^^^^^^^^^^^^^^
>         newFlip.rely(FLIPPER_MOM);

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    SpellAction
Line:        239
Source: 
>         newFlip.rely(MCD_END);
>         newFlip.rely(FLIPPER_MOM);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         newFlip.file("beg", oldFlip.beg());

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    SpellAction
Line:        240
Source: 
>         newFlip.rely(FLIPPER_MOM);
>         newFlip.file("beg", oldFlip.beg());
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         newFlip.file("ttl", oldFlip.ttl());

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    SpellAction
Line:        241
Source: 
>         newFlip.file("beg", oldFlip.beg());
>         newFlip.file("ttl", oldFlip.ttl());
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         newFlip.file("tau", oldFlip.tau());

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    SpellAction
Line:        242
Source: 
>         newFlip.file("ttl", oldFlip.ttl());
>         newFlip.file("tau", oldFlip.tau());
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    SpellAction
Line:        231
Source: 
>         CatAbstract(MCD_CAT).file(ilk, "flip", address(newFlip));
>         (, uint oldChop,) = CatAbstract(MCD_CAT_OLD).ilks(ilk);
>            ^^^^^^^^^^^^
>         CatAbstract(MCD_CAT).file(ilk, "chop", oldChop / 10 ** 9);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        216
Source: 
>         // New debt ceiling: 40 million
>         uint256 USDC_A_LINE = 40 * MILLION * RAD;
>         ^^^^^^^^^^^^^^^^^^^
>         VatAbstract(MCD_VAT).file("USDC-A", "line", USDC_A_LINE);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        231
Source: 
>         CatAbstract(MCD_CAT).file(ilk, "flip", address(newFlip));
>         (, uint oldChop,) = CatAbstract(MCD_CAT_OLD).ilks(ilk);
>            ^^^^^^^^^^^^
>         CatAbstract(MCD_CAT).file(ilk, "chop", oldChop / 10 ** 9);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        259
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/community/6304d5d461f6a0811699eb04fa48b95d68515d8f/governance/votes/Executive%20vote%20-%20August%2028%2C%202020.md -q -O - 2>/dev/null)"
>     string constant public description =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         "2020-08-28 MakerDAO Executive Spell | Hash: 0x67885f84f0d31dc816fc327d9912bae6f207199d299543d95baff20cf6305963";

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        265
Source: 
>         action = address(new SpellAction());
>         bytes32 _tag;
>         ^^^^^^^^^^^^
>         address _action = action;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        266
Source: 
>         bytes32 _tag;
>         address _action = action;
>         ^^^^^^^^^^^^^^^
>         assembly { _tag := extcodehash(_action) }

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        99
Source: 
> 
>     address constant MCD_VAT             = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_VOW             = 0xA950524441892A31ebddF91d3cEEFa04Bf454466;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        100
Source: 
>     address constant MCD_VAT             = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;
>     address constant MCD_VOW             = 0xA950524441892A31ebddF91d3cEEFa04Bf454466;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_ADM             = 0x9eF05f7F6deB616fd37aC3c959a2dDD25A54E4F5;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        101
Source: 
>     address constant MCD_VOW             = 0xA950524441892A31ebddF91d3cEEFa04Bf454466;
>     address constant MCD_ADM             = 0x9eF05f7F6deB616fd37aC3c959a2dDD25A54E4F5;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_END             = 0xaB14d3CE3F733CACB76eC2AbE7d2fcb00c99F3d5;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        102
Source: 
>     address constant MCD_ADM             = 0x9eF05f7F6deB616fd37aC3c959a2dDD25A54E4F5;
>     address constant MCD_END             = 0xaB14d3CE3F733CACB76eC2AbE7d2fcb00c99F3d5;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant FLIPPER_MOM         = 0xc4bE7F74Ee3743bDEd8E0fA218ee5cf06397f472;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        103
Source: 
>     address constant MCD_END             = 0xaB14d3CE3F733CACB76eC2AbE7d2fcb00c99F3d5;
>     address constant FLIPPER_MOM         = 0xc4bE7F74Ee3743bDEd8E0fA218ee5cf06397f472;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_CAT             = 0xa5679C04fc3d9d8b0AaB1F0ab83555b301cA70Ea;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        104
Source: 
>     address constant FLIPPER_MOM         = 0xc4bE7F74Ee3743bDEd8E0fA218ee5cf06397f472;
>     address constant MCD_CAT             = 0xa5679C04fc3d9d8b0AaB1F0ab83555b301cA70Ea;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_CAT_OLD         = 0x78F2c2AF65126834c51822F56Be0d7469D7A523E;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        105
Source: 
>     address constant MCD_CAT             = 0xa5679C04fc3d9d8b0AaB1F0ab83555b301cA70Ea;
>     address constant MCD_CAT_OLD         = 0x78F2c2AF65126834c51822F56Be0d7469D7A523E;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        107
Source: 
> 
>     address constant MCD_FLIP_ETH_A      = 0xF32836B9E1f47a0515c6Ec431592D5EbC276407f;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_FLIP_ETH_A_OLD  = 0x0F398a2DaAa134621e4b687FCcfeE4CE47599Cc1;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        108
Source: 
>     address constant MCD_FLIP_ETH_A      = 0xF32836B9E1f47a0515c6Ec431592D5EbC276407f;
>     address constant MCD_FLIP_ETH_A_OLD  = 0x0F398a2DaAa134621e4b687FCcfeE4CE47599Cc1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        110
Source: 
> 
>     address constant MCD_FLIP_BAT_A      = 0xF7C569B2B271354179AaCC9fF1e42390983110BA;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_FLIP_BAT_A_OLD  = 0x5EdF770FC81E7b8C2c89f71F30f211226a4d7495;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        111
Source: 
>     address constant MCD_FLIP_BAT_A      = 0xF7C569B2B271354179AaCC9fF1e42390983110BA;
>     address constant MCD_FLIP_BAT_A_OLD  = 0x5EdF770FC81E7b8C2c89f71F30f211226a4d7495;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        113
Source: 
> 
>     address constant MCD_FLIP_USDC_A     = 0xbe359e53038E41a1ffA47DAE39645756C80e557a;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_FLIP_USDC_A_OLD = 0x545521e0105C5698f75D6b3C3050CfCC62FB0C12;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        114
Source: 
>     address constant MCD_FLIP_USDC_A     = 0xbe359e53038E41a1ffA47DAE39645756C80e557a;
>     address constant MCD_FLIP_USDC_A_OLD = 0x545521e0105C5698f75D6b3C3050CfCC62FB0C12;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        116
Source: 
> 
>     address constant MCD_FLIP_USDC_B     = 0x77282aD36aADAfC16bCA42c865c674F108c4a616;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_FLIP_USDC_B_OLD = 0x6002d3B769D64A9909b0B26fC00361091786fe48;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        117
Source: 
>     address constant MCD_FLIP_USDC_B     = 0x77282aD36aADAfC16bCA42c865c674F108c4a616;
>     address constant MCD_FLIP_USDC_B_OLD = 0x6002d3B769D64A9909b0B26fC00361091786fe48;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        119
Source: 
> 
>     address constant MCD_FLIP_WBTC_A     = 0x58CD24ac7322890382eE45A3E4F903a5B22Ee930;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_FLIP_WBTC_A_OLD = 0xF70590Fa4AaBe12d3613f5069D02B8702e058569;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        120
Source: 
>     address constant MCD_FLIP_WBTC_A     = 0x58CD24ac7322890382eE45A3E4F903a5B22Ee930;
>     address constant MCD_FLIP_WBTC_A_OLD = 0xF70590Fa4AaBe12d3613f5069D02B8702e058569;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        122
Source: 
> 
>     address constant MCD_FLIP_ZRX_A      = 0xa4341cAf9F9F098ecb20fb2CeE2a0b8C78A18118;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_FLIP_ZRX_A_OLD  = 0x92645a34d07696395b6e5b8330b000D0436A9aAD;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        123
Source: 
>     address constant MCD_FLIP_ZRX_A      = 0xa4341cAf9F9F098ecb20fb2CeE2a0b8C78A18118;
>     address constant MCD_FLIP_ZRX_A_OLD  = 0x92645a34d07696395b6e5b8330b000D0436A9aAD;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        125
Source: 
> 
>     address constant MCD_FLIP_KNC_A      = 0x57B01F1B3C59e2C0bdfF3EC9563B71EEc99a3f2f;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_FLIP_KNC_A_OLD  = 0xAD4a0B5F3c6Deb13ADE106Ba6E80Ca6566538eE6;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        126
Source: 
>     address constant MCD_FLIP_KNC_A      = 0x57B01F1B3C59e2C0bdfF3EC9563B71EEc99a3f2f;
>     address constant MCD_FLIP_KNC_A_OLD  = 0xAD4a0B5F3c6Deb13ADE106Ba6E80Ca6566538eE6;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        128
Source: 
> 
>     address constant MCD_FLIP_TUSD_A     = 0x9E4b213C4defbce7564F2Ac20B6E3bF40954C440;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_FLIP_TUSD_A_OLD = 0x04C42fAC3e29Fd27118609a5c36fD0b3Cb8090b3;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        129
Source: 
>     address constant MCD_FLIP_TUSD_A     = 0x9E4b213C4defbce7564F2Ac20B6E3bF40954C440;
>     address constant MCD_FLIP_TUSD_A_OLD = 0x04C42fAC3e29Fd27118609a5c36fD0b3Cb8090b3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        131
Source: 
> 
>     address constant MCD_FLIP_MANA_A     = 0x0a1D75B4f49BA80724a214599574080CD6B68357;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_FLIP_MANA_A_OLD = 0x4bf9D2EBC4c57B9B783C12D30076507660B58b3a;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        132
Source: 
>     address constant MCD_FLIP_MANA_A     = 0x0a1D75B4f49BA80724a214599574080CD6B68357;
>     address constant MCD_FLIP_MANA_A_OLD = 0x4bf9D2EBC4c57B9B783C12D30076507660B58b3a;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        134
Source: 
> 
>     address constant YEARN               = 0xCF63089A8aD2a9D8BD6Bb8022f3190EB7e1eD0f1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant OSM_ETHUSD          = 0x81FE72B5A8d1A857d176C3E7d5Bd2679A9B85763;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        135
Source: 
>     address constant YEARN               = 0xCF63089A8aD2a9D8BD6Bb8022f3190EB7e1eD0f1;
>     address constant OSM_ETHUSD          = 0x81FE72B5A8d1A857d176C3E7d5Bd2679A9B85763;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        138
Source: 
>     // Decimals & precision
>     uint256 constant THOUSAND = 10 ** 3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant MILLION  = 10 ** 6;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        139
Source: 
>     uint256 constant THOUSAND = 10 ** 3;
>     uint256 constant MILLION  = 10 ** 6;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant WAD      = 10 ** 18;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        140
Source: 
>     uint256 constant MILLION  = 10 ** 6;
>     uint256 constant WAD      = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant RAY      = 10 ** 27;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        141
Source: 
>     uint256 constant WAD      = 10 ** 18;
>     uint256 constant RAY      = 10 ** 27;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant RAD      = 10 ** 45;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        142
Source: 
>     uint256 constant RAY      = 10 ** 27;
>     uint256 constant RAD      = 10 ** 45;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DssSpell
Line:        273
Source: 
>     modifier officeHours {
>         uint day = (now / 1 days + 3) % 7;
>         ^^^^^^^^
>         require(day < 5, "Can only be cast on a weekday");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DssSpell
Line:        275
Source: 
>         require(day < 5, "Can only be cast on a weekday");
>         uint hour = now / 1 hours % 24;
>         ^^^^^^^^^
>         require(hour >= 14 && hour < 21, "Outside office hours");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        150
Source: 
> 
>         require(CatAbstract(MCD_CAT_OLD).vat() == MCD_VAT,          "non-matching-vat");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(CatAbstract(MCD_CAT_OLD).vow() == MCD_VOW,          "non-matching-vow");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        151
Source: 
>         require(CatAbstract(MCD_CAT_OLD).vat() == MCD_VAT,          "non-matching-vat");
>         require(CatAbstract(MCD_CAT_OLD).vow() == MCD_VOW,          "non-matching-vow");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        153
Source: 
> 
>         require(CatAbstract(MCD_CAT).vat() == MCD_VAT,              "non-matching-vat");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(CatAbstract(MCD_CAT).live() == 1,                   "cat-not-live");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        154
Source: 
>         require(CatAbstract(MCD_CAT).vat() == MCD_VAT,              "non-matching-vat");
>         require(CatAbstract(MCD_CAT).live() == 1,                   "cat-not-live");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        156
Source: 
> 
>         require(FlipperMomAbstract(FLIPPER_MOM).cat() == MCD_CAT,   "non-matching-cat");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        224
Source: 
>     function _changeFlip(FlipAbstract newFlip, FlipAbstract oldFlip) internal {
>         bytes32 ilk = newFlip.ilk();
>                       ^^^^^^^^^^^^^
>         require(ilk == oldFlip.ilk(), "non-matching-ilk");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        225
Source: 
>         bytes32 ilk = newFlip.ilk();
>         require(ilk == oldFlip.ilk(), "non-matching-ilk");
>                        ^^^^^^^^^^^^^
>         require(newFlip.vat() == oldFlip.vat(), "non-matching-vat");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        226
Source: 
>         require(ilk == oldFlip.ilk(), "non-matching-ilk");
>         require(newFlip.vat() == oldFlip.vat(), "non-matching-vat");
>                 ^^^^^^^^^^^^^
>         require(newFlip.cat() == MCD_CAT, "non-matching-cat");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        226
Source: 
>         require(ilk == oldFlip.ilk(), "non-matching-ilk");
>         require(newFlip.vat() == oldFlip.vat(), "non-matching-vat");
>                                  ^^^^^^^^^^^^^
>         require(newFlip.cat() == MCD_CAT, "non-matching-cat");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        227
Source: 
>         require(newFlip.vat() == oldFlip.vat(), "non-matching-vat");
>         require(newFlip.cat() == MCD_CAT, "non-matching-cat");
>                 ^^^^^^^^^^^^^
>         require(newFlip.vat() == MCD_VAT, "non-matching-vat");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        228
Source: 
>         require(newFlip.cat() == MCD_CAT, "non-matching-cat");
>         require(newFlip.vat() == MCD_VAT, "non-matching-vat");
>                 ^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DssSpell
Line:        283
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        159
Source: 
>         /*** Update Cat ***/
>         CatAbstract(MCD_CAT).file("vow", MCD_VOW);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         VatAbstract(MCD_VAT).rely(MCD_CAT);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        160
Source: 
>         CatAbstract(MCD_CAT).file("vow", MCD_VOW);
>         VatAbstract(MCD_VAT).rely(MCD_CAT);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         VatAbstract(MCD_VAT).deny(MCD_CAT_OLD);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        161
Source: 
>         VatAbstract(MCD_VAT).rely(MCD_CAT);
>         VatAbstract(MCD_VAT).deny(MCD_CAT_OLD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         VowAbstract(MCD_VOW).rely(MCD_CAT);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        162
Source: 
>         VatAbstract(MCD_VAT).deny(MCD_CAT_OLD);
>         VowAbstract(MCD_VOW).rely(MCD_CAT);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         VowAbstract(MCD_VOW).deny(MCD_CAT_OLD);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        163
Source: 
>         VowAbstract(MCD_VOW).rely(MCD_CAT);
>         VowAbstract(MCD_VOW).deny(MCD_CAT_OLD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         EndAbstract(MCD_END).file("cat", MCD_CAT);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        164
Source: 
>         VowAbstract(MCD_VOW).deny(MCD_CAT_OLD);
>         EndAbstract(MCD_END).file("cat", MCD_CAT);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         CatAbstract(MCD_CAT).rely(MCD_END);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        165
Source: 
>         EndAbstract(MCD_END).file("cat", MCD_CAT);
>         CatAbstract(MCD_CAT).rely(MCD_END);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        167
Source: 
> 
>         CatAbstract(MCD_CAT).file("box", 30 * MILLION * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        170
Source: 
>         /*** Set Auth in Flipper Mom ***/
>         FlipperMomAbstract(FLIPPER_MOM).setAuthority(MCD_ADM);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        180
Source: 
>         _changeFlip(FlipAbstract(MCD_FLIP_USDC_A), FlipAbstract(MCD_FLIP_USDC_A_OLD));
>         FlipperMomAbstract(FLIPPER_MOM).deny(MCD_FLIP_USDC_A); // Auctions disabled
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        184
Source: 
>         _changeFlip(FlipAbstract(MCD_FLIP_USDC_B), FlipAbstract(MCD_FLIP_USDC_B_OLD));
>         FlipperMomAbstract(FLIPPER_MOM).deny(MCD_FLIP_USDC_B); // Auctions disabled
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        191
Source: 
>         _changeFlip(FlipAbstract(MCD_FLIP_TUSD_A), FlipAbstract(MCD_FLIP_TUSD_A_OLD));
>         FlipperMomAbstract(FLIPPER_MOM).deny(MCD_FLIP_TUSD_A); // Auctions disabled
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        210
Source: 
>         // 688 (current DC) - 100 (USDC-A decrease)
>         VatAbstract(MCD_VAT).file("Line", 588 * MILLION * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        217
Source: 
>         uint256 USDC_A_LINE = 40 * MILLION * RAD;
>         VatAbstract(MCD_VAT).file("USDC-A", "line", USDC_A_LINE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        220
Source: 
>         /*** Whitelist yearn on ETHUSD Oracle ***/
>         OsmAbstract(OSM_ETHUSD).kiss(YEARN);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        230
Source: 
> 
>         CatAbstract(MCD_CAT).file(ilk, "flip", address(newFlip));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         (, uint oldChop,) = CatAbstract(MCD_CAT_OLD).ilks(ilk);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        231
Source: 
>         CatAbstract(MCD_CAT).file(ilk, "flip", address(newFlip));
>         (, uint oldChop,) = CatAbstract(MCD_CAT_OLD).ilks(ilk);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         CatAbstract(MCD_CAT).file(ilk, "chop", oldChop / 10 ** 9);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        232
Source: 
>         (, uint oldChop,) = CatAbstract(MCD_CAT_OLD).ilks(ilk);
>         CatAbstract(MCD_CAT).file(ilk, "chop", oldChop / 10 ** 9);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        234
Source: 
> 
>         CatAbstract(MCD_CAT).file(ilk, "dunk", 50 * THOUSAND * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         CatAbstract(MCD_CAT).rely(address(newFlip));

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        235
Source: 
>         CatAbstract(MCD_CAT).file(ilk, "dunk", 50 * THOUSAND * RAD);
>         CatAbstract(MCD_CAT).rely(address(newFlip));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        237
Source: 
> 
>         newFlip.rely(MCD_CAT);
>         ^^^^^^^^^^^^^^^^^^^^^
>         newFlip.rely(MCD_END);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        238
Source: 
>         newFlip.rely(MCD_CAT);
>         newFlip.rely(MCD_END);
>         ^^^^^^^^^^^^^^^^^^^^^
>         newFlip.rely(FLIPPER_MOM);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        239
Source: 
>         newFlip.rely(MCD_END);
>         newFlip.rely(FLIPPER_MOM);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         newFlip.file("beg", oldFlip.beg());

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        240
Source: 
>         newFlip.rely(FLIPPER_MOM);
>         newFlip.file("beg", oldFlip.beg());
>                             ^^^^^^^^^^^^^
>         newFlip.file("ttl", oldFlip.ttl());

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        240
Source: 
>         newFlip.rely(FLIPPER_MOM);
>         newFlip.file("beg", oldFlip.beg());
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         newFlip.file("ttl", oldFlip.ttl());

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        241
Source: 
>         newFlip.file("beg", oldFlip.beg());
>         newFlip.file("ttl", oldFlip.ttl());
>                             ^^^^^^^^^^^^^
>         newFlip.file("tau", oldFlip.tau());

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        241
Source: 
>         newFlip.file("beg", oldFlip.beg());
>         newFlip.file("ttl", oldFlip.ttl());
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         newFlip.file("tau", oldFlip.tau());

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        242
Source: 
>         newFlip.file("ttl", oldFlip.ttl());
>         newFlip.file("tau", oldFlip.tau());
>                             ^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        242
Source: 
>         newFlip.file("ttl", oldFlip.ttl());
>         newFlip.file("tau", oldFlip.tau());
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        284
Source: 
>         eta = now + DSPauseAbstract(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        290
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DssSpell
Line:        268
Source: 
>         assembly { _tag := extcodehash(_action) }
>         tag = _tag;
>               ^^^^
>         expiration = now + 30 days;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell
Line:        251
Source: 
>     bytes32         public tag;
>     uint256         public eta;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes           public sig;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell
Line:        254
Source: 
>     uint256         public expiration;
>     bool            public done;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell
Line:        283
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell
Line:        289
Source: 
>         require(!done, "spell-already-cast");
>         done = true;
>         ^^^^^^^^^^^
>         pause.exec(action, tag, sig, eta);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DssSpell
Line:        290
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        140
Source: 
>     uint256 constant MILLION  = 10 ** 6;
>     uint256 constant WAD      = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant RAY      = 10 ** 27;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        141
Source: 
>     uint256 constant WAD      = 10 ** 18;
>     uint256 constant RAY      = 10 ** 27;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant RAD      = 10 ** 45;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DssSpell
Line:        259
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/community/6304d5d461f6a0811699eb04fa48b95d68515d8f/governance/votes/Executive%20vote%20-%20August%2028%2C%202020.md -q -O - 2>/dev/null)"
>     string constant public description =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         "2020-08-28 MakerDAO Executive Spell | Hash: 0x67885f84f0d31dc816fc327d9912bae6f207199d299543d95baff20cf6305963";

[0m
