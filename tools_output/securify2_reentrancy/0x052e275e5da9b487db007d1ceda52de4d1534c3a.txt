Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    factory
Line:        28
Source: 
> 
>         assembly {
>         ^^^^^^^^^^
>             let clone := mload(0x40)

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    factory
Line:        11
Source: 
> 
>     address public template = 0xC3f3f8EED592d0Ae8CE6C84C69ce493a6d6a8a5A;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    factory
Line:        21
Source: 
> 
>     function createProxy(address miner) public returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(proxy[miner] == address(0));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    factory
Line:        36
Source: 
> 
>         minerProxy(_proxy).set(miner);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         proxy[miner] = _proxy;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    minerProxy
Line:        6
Source: 
> pragma solidity ^0.5.11;
> contract minerProxy {
> ^^^^^^^^^^^^^^^^^^^^^
>     function set(address _miner) public;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    factory
Line:        9
Source: 
> }
> contract factory {
> ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    factory
Line:        24
Source: 
> 
>         address payable _proxy;
>         ^^^^^^^^^^^^^^^^^^^^^^
>         bytes32 salt = keccak256(abi.encodePacked(miner));

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.5.11;
> ^^^^^^^^^^^^^^^^^^^^^^^^
> contract minerProxy {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    factory
Line:        36
Source: 
> 
>         minerProxy(_proxy).set(miner);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         proxy[miner] = _proxy;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    factory
Line:        36
Source: 
> 
>         minerProxy(_proxy).set(miner);
>                    ^^^^^^
>         proxy[miner] = _proxy;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    factory
Line:        37
Source: 
>         minerProxy(_proxy).set(miner);
>         proxy[miner] = _proxy;
>         ^^^^^^^^^^^^^^^^^^^^^
>         allProxy.push(_proxy);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    factory
Line:        38
Source: 
>         proxy[miner] = _proxy;
>         allProxy.push(_proxy);
>         ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
