Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.8. Changing pragma version to 0.5.8....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        129
Source: 
> 
>     uint256 public basePercent = 100;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        135
Source: 
> 
>     uint public deadline = now + 60 * 1 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public round2 = now + 60 * 1 days;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        136
Source: 
>     uint public deadline = now + 60 * 1 days;
>     uint public round2 = now + 60 * 1 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public round1 = now + 60 * 1 days;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        137
Source: 
>     uint public round2 = now + 60 * 1 days;
>     uint public round1 = now + 60 * 1 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        144
Source: 
> 
>     uint public targetAirdrop = 100000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public progressAirdrop = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        155
Source: 
> 
>     address wallet_marketingPromotion = 0x431e5f0C520Ad95CcD7C1063fAa088732BA059F6;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_adminSalary = 0x28c35c792B78E46D7d12Cae17d4A4D1A30c36Ff1;     

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        156
Source: 
>     address wallet_marketingPromotion = 0x431e5f0C520Ad95CcD7C1063fAa088732BA059F6;     
>     address wallet_adminSalary = 0x28c35c792B78E46D7d12Cae17d4A4D1A30c36Ff1;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_stakingRewards = 0x91dc5b87a10cdCD37f707dFC13918DA991d7a37b;     

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        157
Source: 
>     address wallet_adminSalary = 0x28c35c792B78E46D7d12Cae17d4A4D1A30c36Ff1;     
>     address wallet_stakingRewards = 0x91dc5b87a10cdCD37f707dFC13918DA991d7a37b;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_devMaintenance = 0xeA110053959380Df3a91b97c57d54c976A210B3b;     

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        158
Source: 
>     address wallet_stakingRewards = 0x91dc5b87a10cdCD37f707dFC13918DA991d7a37b;     
>     address wallet_devMaintenance = 0xeA110053959380Df3a91b97c57d54c976A210B3b;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_lockDeposit = 0xc1AE350AE6ffE65cE10756184fA1cdEd701de1ba;     

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        159
Source: 
>     address wallet_devMaintenance = 0xeA110053959380Df3a91b97c57d54c976A210B3b;     
>     address wallet_lockDeposit = 0xc1AE350AE6ffE65cE10756184fA1cdEd701de1ba;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SultanChain
Line:        161
Source: 
> 
>     address payable ethFundDeposit = 0x7b88D2A62682749919e1e0401200139624cc5A82;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StandardToken
Line:        86
Source: 
> 
>   function name() public view returns(string memory) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _name;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StandardToken
Line:        90
Source: 
> 
>   function symbol() public view returns(string memory) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _symbol;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    StandardToken
Line:        94
Source: 
> 
>   function decimals() public view returns(uint8) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _decimals;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        201
Source: 
>     
>     function transferOwnership(address newOwner) onlyOwner public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (newOwner != address(0)) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        207
Source: 
> 
>     function finishDistribution() onlyOwner canDistr public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         distributionFinished = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        245
Source: 
> 
>     function updateTokensPerEth(uint _tokensPerEth) public onlyOwner {        
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         tokensPerEth = _tokensPerEth;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        325
Source: 
> 
>     function transfer(address _to, uint256 _amount) onlyPayloadSize(2 * 32) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_amount <= balances[msg.sender]);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        376
Source: 
> 
>     function approve(address _spender, uint256 _value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        383
Source: 
>     
>     function allowance(address _owner, address _spender) view public returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[_owner][_spender];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        387
Source: 
>     
>     function getTokenBalance(address tokenAddress, address who) pure public returns (uint){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ForeignToken t = ForeignToken(tokenAddress);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        416
Source: 
> 
>     function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(spender != address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        423
Source: 
> 
>     function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(spender != address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        436
Source: 
>     */
>     function refund(address _to, uint256 _value) public payable onlyOwner returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // transfer funds from refund account to owner

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        444
Source: 
>     // returns full list of receiver addresses
>     function getAccountList() public view returns (address[] memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address[] memory v = new address[](receivers.length);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        453
Source: 
>     // freeze accounts
>     function changeFreezeStatus(address target, bool freeze) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         frozenAccount[target] = freeze;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SultanChain
Line:        458
Source: 
> 
>     function withdrawForeignTokens(address _tokenContract) onlyOwner public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ForeignToken token = ForeignToken(_tokenContract);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SultanChain
Line:        312
Source: 
>         
>         ethFundDeposit.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SultanChain
Line:        389
Source: 
>         ForeignToken t = ForeignToken(tokenAddress);
>         uint bal = t.balanceOf(who);
>                    ^^^^^^^^^^^^^^^^
>         return bal;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SultanChain
Line:        460
Source: 
>         ForeignToken token = ForeignToken(_tokenContract);
>         uint256 amount = token.balanceOf(address(this));
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return token.transfer(owner, amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SultanChain
Line:        461
Source: 
>         uint256 amount = token.balanceOf(address(this));
>         return token.transfer(owner, amount);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SultanChain
Line:        237
Source: 
>     
>     function DistributeAirdrop(address _participant, uint _amount) onlyOwner external {        
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Distribute(_participant, _amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SultanChain
Line:        241
Source: 
> 
>     function DistributeAirdropMultiple(address[] calldata _addresses, uint _amount) onlyOwner external {        
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         for (uint i = 0; i < _addresses.length; i++) Distribute(_addresses[i], _amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SultanChain
Line:        245
Source: 
> 
>     function updateTokensPerEth(uint _tokensPerEth) public onlyOwner {        
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         tokensPerEth = _tokensPerEth;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SultanChain
Line:        393
Source: 
>     
>     function burn(uint256 amount) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _burn(msg.sender, amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SultanChain
Line:        411
Source: 
>     
>     function findOnePercent(uint256 value) public view returns (uint256)  {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 onePercent = value.mul(basePercent).div(10000);   

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SultanChain
Line:        416
Source: 
> 
>     function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(spender != address(0));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SultanChain
Line:        423
Source: 
> 
>     function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(spender != address(0));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SultanChain
Line:        436
Source: 
>     */
>     function refund(address _to, uint256 _value) public payable onlyOwner returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // transfer funds from refund account to owner

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SultanChain
Line:        315
Source: 
>     
>     function balanceOf(address _owner) external view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[_owner];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SultanChain
Line:        383
Source: 
>     
>     function allowance(address _owner, address _spender) view public returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[_owner][_spender];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SultanChain
Line:        387
Source: 
>     
>     function getTokenBalance(address tokenAddress, address who) pure public returns (uint){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ForeignToken t = ForeignToken(tokenAddress);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SultanChain
Line:        453
Source: 
>     // freeze accounts
>     function changeFreezeStatus(address target, bool freeze) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         frozenAccount[target] = freeze;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SultanChain
Line:        458
Source: 
> 
>     function withdrawForeignTokens(address _tokenContract) onlyOwner public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ForeignToken token = ForeignToken(_tokenContract);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SultanChain
Line:        267
Source: 
>             if(msg.value >= bonusCond1 && msg.value < bonusCond2){
>                 countbonus = tokens * 10 / 100;
>                              ^^^^^^^^^^^
>             }else if(msg.value >= bonusCond2 && msg.value < bonusCond3){

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SultanChain
Line:        269
Source: 
>             }else if(msg.value >= bonusCond2 && msg.value < bonusCond3){
>                 countbonus = tokens * 20 / 100;
>                              ^^^^^^^^^^^
>             }else if(msg.value >= bonusCond3){

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SultanChain
Line:        271
Source: 
>             }else if(msg.value >= bonusCond3){
>                 countbonus = tokens * 35 / 100;
>                              ^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SultanChain
Line:        275
Source: 
>             if(msg.value >= bonusCond2 && msg.value < bonusCond3){
>                 countbonus = tokens * 2 / 100;
>                              ^^^^^^^^^^
>             }else if(msg.value >= bonusCond3){

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SultanChain
Line:        277
Source: 
>             }else if(msg.value >= bonusCond3){
>                 countbonus = tokens * 3 / 100;
>                              ^^^^^^^^^^
>             }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SultanChain
Line:        312
Source: 
>         
>         ethFundDeposit.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    StandardToken
Line:        80
Source: 
> 
>   constructor(string memory name, string memory symbol, uint8 decimals) public {
>               ^^^^^^^^^^^^^^^^^^
>     _name = name;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    StandardToken
Line:        80
Source: 
> 
>   constructor(string memory name, string memory symbol, uint8 decimals) public {
>                                   ^^^^^^^^^^^^^^^^^^^^
>     _name = name;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    StandardToken
Line:        80
Source: 
> 
>   constructor(string memory name, string memory symbol, uint8 decimals) public {
>                                                         ^^^^^^^^^^^^^^
>     _name = name;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        112
Source: 
>     mapping (address => mapping (address => uint256)) private allowed;
>     mapping (address => bool) public Claimed; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        131
Source: 
> 
>     string constant tokenName = "Sultan Chain";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string constant tokenSymbol = "STN";

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        132
Source: 
>     string constant tokenName = "Sultan Chain";
>     string constant tokenSymbol = "STN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8  constant tokenDecimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        133
Source: 
>     string constant tokenSymbol = "STN";
>     uint8  constant tokenDecimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        141
Source: 
>     uint256 public totalDistributed;
>     uint256 public constant requestMinimum = 1 ether / 1000; // 0.01 Ether
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public tokensPerEth = 1000e18;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        148
Source: 
> 
>     uint256 constant AirSelfDropDonation = 3000000e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant marketingPromotion = 500000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        149
Source: 
>     uint256 constant AirSelfDropDonation = 3000000e18;
>     uint256 constant marketingPromotion = 500000e18;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant adminSalary = 500000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        150
Source: 
>     uint256 constant marketingPromotion = 500000e18;     
>     uint256 constant adminSalary = 500000e18;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant stakingRewards = 1000000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        151
Source: 
>     uint256 constant adminSalary = 500000e18;     
>     uint256 constant stakingRewards = 1000000e18;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant devMaintenance = 1000000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        152
Source: 
>     uint256 constant stakingRewards = 1000000e18;     
>     uint256 constant devMaintenance = 1000000e18;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant lockDeposit = 1000000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        153
Source: 
>     uint256 constant devMaintenance = 1000000e18;     
>     uint256 constant lockDeposit = 1000000e18;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        155
Source: 
> 
>     address wallet_marketingPromotion = 0x431e5f0C520Ad95CcD7C1063fAa088732BA059F6;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_adminSalary = 0x28c35c792B78E46D7d12Cae17d4A4D1A30c36Ff1;     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        156
Source: 
>     address wallet_marketingPromotion = 0x431e5f0C520Ad95CcD7C1063fAa088732BA059F6;     
>     address wallet_adminSalary = 0x28c35c792B78E46D7d12Cae17d4A4D1A30c36Ff1;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_stakingRewards = 0x91dc5b87a10cdCD37f707dFC13918DA991d7a37b;     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        157
Source: 
>     address wallet_adminSalary = 0x28c35c792B78E46D7d12Cae17d4A4D1A30c36Ff1;     
>     address wallet_stakingRewards = 0x91dc5b87a10cdCD37f707dFC13918DA991d7a37b;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_devMaintenance = 0xeA110053959380Df3a91b97c57d54c976A210B3b;     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        158
Source: 
>     address wallet_stakingRewards = 0x91dc5b87a10cdCD37f707dFC13918DA991d7a37b;     
>     address wallet_devMaintenance = 0xeA110053959380Df3a91b97c57d54c976A210B3b;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_lockDeposit = 0xc1AE350AE6ffE65cE10756184fA1cdEd701de1ba;     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        159
Source: 
>     address wallet_devMaintenance = 0xeA110053959380Df3a91b97c57d54c976A210B3b;     
>     address wallet_lockDeposit = 0xc1AE350AE6ffE65cE10756184fA1cdEd701de1ba;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        221
Source: 
>     
>     function Distribute(address _participant, uint _amount) onlyOwner internal {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        237
Source: 
>     
>     function DistributeAirdrop(address _participant, uint _amount) onlyOwner external {        
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Distribute(_participant, _amount);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SultanChain
Line:        241
Source: 
> 
>     function DistributeAirdropMultiple(address[] calldata _addresses, uint _amount) onlyOwner external {        
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         for (uint i = 0; i < _addresses.length; i++) Distribute(_addresses[i], _amount);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        108
Source: 
>     using SafeMath for uint256;
>     address owner = msg.sender;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        110
Source: 
> 
>     mapping (address => uint256) balances;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (address => mapping (address => uint256)) private allowed;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        114
Source: 
> 
>     mapping (address => uint256) allocations;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        131
Source: 
> 
>     string constant tokenName = "Sultan Chain";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string constant tokenSymbol = "STN";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        132
Source: 
>     string constant tokenName = "Sultan Chain";
>     string constant tokenSymbol = "STN";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8  constant tokenDecimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        133
Source: 
>     string constant tokenSymbol = "STN";
>     uint8  constant tokenDecimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        148
Source: 
> 
>     uint256 constant AirSelfDropDonation = 3000000e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant marketingPromotion = 500000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        149
Source: 
>     uint256 constant AirSelfDropDonation = 3000000e18;
>     uint256 constant marketingPromotion = 500000e18;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant adminSalary = 500000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        150
Source: 
>     uint256 constant marketingPromotion = 500000e18;     
>     uint256 constant adminSalary = 500000e18;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant stakingRewards = 1000000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        151
Source: 
>     uint256 constant adminSalary = 500000e18;     
>     uint256 constant stakingRewards = 1000000e18;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant devMaintenance = 1000000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        152
Source: 
>     uint256 constant stakingRewards = 1000000e18;     
>     uint256 constant devMaintenance = 1000000e18;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant lockDeposit = 1000000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        153
Source: 
>     uint256 constant devMaintenance = 1000000e18;     
>     uint256 constant lockDeposit = 1000000e18;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        155
Source: 
> 
>     address wallet_marketingPromotion = 0x431e5f0C520Ad95CcD7C1063fAa088732BA059F6;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_adminSalary = 0x28c35c792B78E46D7d12Cae17d4A4D1A30c36Ff1;     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        156
Source: 
>     address wallet_marketingPromotion = 0x431e5f0C520Ad95CcD7C1063fAa088732BA059F6;     
>     address wallet_adminSalary = 0x28c35c792B78E46D7d12Cae17d4A4D1A30c36Ff1;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_stakingRewards = 0x91dc5b87a10cdCD37f707dFC13918DA991d7a37b;     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        157
Source: 
>     address wallet_adminSalary = 0x28c35c792B78E46D7d12Cae17d4A4D1A30c36Ff1;     
>     address wallet_stakingRewards = 0x91dc5b87a10cdCD37f707dFC13918DA991d7a37b;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_devMaintenance = 0xeA110053959380Df3a91b97c57d54c976A210B3b;     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        158
Source: 
>     address wallet_stakingRewards = 0x91dc5b87a10cdCD37f707dFC13918DA991d7a37b;     
>     address wallet_devMaintenance = 0xeA110053959380Df3a91b97c57d54c976A210B3b;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_lockDeposit = 0xc1AE350AE6ffE65cE10756184fA1cdEd701de1ba;     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        159
Source: 
>     address wallet_devMaintenance = 0xeA110053959380Df3a91b97c57d54c976A210B3b;     
>     address wallet_lockDeposit = 0xc1AE350AE6ffE65cE10756184fA1cdEd701de1ba;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        161
Source: 
> 
>     address payable ethFundDeposit = 0x7b88D2A62682749919e1e0401200139624cc5A82;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SultanChain
Line:        319
Source: 
> 
>     modifier onlyPayloadSize(uint size) {
>                              ^^^^^^^^^
>         assert(msg.data.length >= size + 4);

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SultanChain
Line:        139
Source: 
>     
>     uint256 public totalSupply = 7000000e18;
>                                  ^^^^^^^^^^
>     uint256 public totalDistributed;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SultanChain
Line:        144
Source: 
> 
>     uint public targetAirdrop = 100000;
>                                 ^^^^^^
>     uint public progressAirdrop = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SultanChain
Line:        148
Source: 
> 
>     uint256 constant AirSelfDropDonation = 3000000e18;
>                                            ^^^^^^^^^^
>     uint256 constant marketingPromotion = 500000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SultanChain
Line:        149
Source: 
>     uint256 constant AirSelfDropDonation = 3000000e18;
>     uint256 constant marketingPromotion = 500000e18;     
>                                           ^^^^^^^^^
>     uint256 constant adminSalary = 500000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SultanChain
Line:        150
Source: 
>     uint256 constant marketingPromotion = 500000e18;     
>     uint256 constant adminSalary = 500000e18;     
>                                    ^^^^^^^^^
>     uint256 constant stakingRewards = 1000000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SultanChain
Line:        151
Source: 
>     uint256 constant adminSalary = 500000e18;     
>     uint256 constant stakingRewards = 1000000e18;     
>                                       ^^^^^^^^^^
>     uint256 constant devMaintenance = 1000000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SultanChain
Line:        152
Source: 
>     uint256 constant stakingRewards = 1000000e18;     
>     uint256 constant devMaintenance = 1000000e18;     
>                                       ^^^^^^^^^^
>     uint256 constant lockDeposit = 1000000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SultanChain
Line:        153
Source: 
>     uint256 constant devMaintenance = 1000000e18;     
>     uint256 constant lockDeposit = 1000000e18;     
>                                    ^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SultanChain
Line:        312
Source: 
>         
>         ethFundDeposit.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SultanChain
Line:        312
Source: 
>         
>         ethFundDeposit.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SultanChain
Line:        460
Source: 
>         ForeignToken token = ForeignToken(_tokenContract);
>         uint256 amount = token.balanceOf(address(this));
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return token.transfer(owner, amount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SultanChain
Line:        389
Source: 
>         ForeignToken t = ForeignToken(tokenAddress);
>         uint bal = t.balanceOf(who);
>                    ^^^^^^^^^^^^^^^^
>         return bal;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SultanChain
Line:        461
Source: 
>         uint256 amount = token.balanceOf(address(this));
>         return token.transfer(owner, amount);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SultanChain
Line:        214
Source: 
>     function distr(address _to, uint256 _amount) canDistr private returns (bool) {
>         totalDistributed = totalDistributed.add(_amount);        
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balances[_to] = balances[_to].add(_amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SultanChain
Line:        215
Source: 
>         totalDistributed = totalDistributed.add(_amount);        
>         balances[_to] = balances[_to].add(_amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Distr(_to, _amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SultanChain
Line:        400
Source: 
>         require(amount <= balances[account]);
>         totalSupply = totalSupply.sub(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balances[account] = balances[account].sub(amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SultanChain
Line:        401
Source: 
>         totalSupply = totalSupply.sub(amount);
>         balances[account] = balances[account].sub(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(account, address(0), amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    SultanChain
Line:        418
Source: 
>         require(spender != address(0));
>         allowed[msg.sender][spender] = (allowed[msg.sender][spender].add(addedValue));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender, spender, allowed[msg.sender][spender]);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    SultanChain
Line:        425
Source: 
>         require(spender != address(0));
>         allowed[msg.sender][spender] = (allowed[msg.sender][spender].sub(subtractedValue));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender, spender, allowed[msg.sender][spender]);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeMath
Line:        57
Source: 
>         uint256 d = sub(c,1);
>         return mul(div(d,m),m);
>                    ^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SultanChain
Line:        114
Source: 
> 
>     mapping (address => uint256) allocations;    
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SultanChain
Line:        146
Source: 
>     uint public progressAirdrop = 0;
>     uint256 public unlockDate;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SultanChain
Line:        148
Source: 
> 
>     uint256 constant AirSelfDropDonation = 3000000e18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant marketingPromotion = 500000e18;     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SultanChain
Line:        158
Source: 
>     address wallet_stakingRewards = 0x91dc5b87a10cdCD37f707dFC13918DA991d7a37b;     
>     address wallet_devMaintenance = 0xeA110053959380Df3a91b97c57d54c976A210B3b;     
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address wallet_lockDeposit = 0xc1AE350AE6ffE65cE10756184fA1cdEd701de1ba;     

[0m
