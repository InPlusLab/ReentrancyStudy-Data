Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DssSpell
Line:        213
Source: 
>         address _action = action;
>         assembly { _tag := extcodehash(_action) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         tag = _tag;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DssSpell
Line:        195
Source: 
> 
>     DSPauseAbstract  public pause =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         DSPauseAbstract(0xbE286431454714F511008713973d3B053A2d38f3);

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DssSpell
Line:        197
Source: 
>         DSPauseAbstract(0xbE286431454714F511008713973d3B053A2d38f3);
>     SaiMomAbstract   public saiMom =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         SaiMomAbstract(0xF2C5369cFFb8Ea6284452b0326e326DbFdCb867C);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    DssSpell
Line:        227
Source: 
>         require(now <= expiration, "This contract has expired");
>         require(eta == 0, "This spell has already been scheduled");
>                 ^^^^^^^^
>         eta = now + DSPauseAbstract(pause).delay();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SaiSlayer
Line:        74
Source: 
> 
>     function cage() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         require(now >= T2020_05_12_1600UTC);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        221
Source: 
> 
>     function description() public view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return SpellAction(action).description();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        225
Source: 
> 
>     function schedule() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(now <= expiration, "This contract has expired");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        238
Source: 
> 
>     function cast() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!done, "spell-already-cast");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        228
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        229
Source: 
>         eta = now + DSPauseAbstract(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        232
Source: 
>         // Set SaiSlayer to cage the system after May 12th, 2020 at 16:00 UTC
>         saiSlayer.SAITOP().setOwner(address(saiSlayer));
>         ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        232
Source: 
>         // Set SaiSlayer to cage the system after May 12th, 2020 at 16:00 UTC
>         saiSlayer.SAITOP().setOwner(address(saiSlayer));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        235
Source: 
>         // Set PEP of SCD to the new MKR Oracle
>         saiMom.setPep(address(newMkrOracle));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        241
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        92
Source: 
>     // This should be modified weekly to provide a summary of the actions
>     string constant public description = "2020-04-24 MakerDAO Executive Spell";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        138
Source: 
>         // New Rate: 0%
>         uint256 ETH_FEE = ZERO_PCT_RATE;
>         ^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).file("ETH-A", "duty", ETH_FEE);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        145
Source: 
>         // New Rate: 0%
>         uint256 BAT_FEE = ZERO_PCT_RATE;
>         ^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).file("BAT-A", "duty", BAT_FEE);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        152
Source: 
>         // New Rate: 6%
>         uint256 USDC_FEE = SIX_PCT_RATE;
>         ^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).file("USDC-A", "duty", USDC_FEE);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        159
Source: 
>         // New Rate: 0%
>         uint256 DSR_RATE = ZERO_PCT_RATE;
>         ^^^^^^^^^^^^^^^^
>         PotAbstract(MCD_POT).file("dsr", DSR_RATE);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        167
Source: 
>         // New Line: 100m
>         uint256 ETH_LINE = 100 * MILLION;
>         ^^^^^^^^^^^^^^^^
>         VatAbstract(MCD_VAT).file("ETH-A", "line", ETH_LINE * RAD);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        171
Source: 
>         // set the global debt ceiling to 123,000,000
>         uint256 GLOBAL_LINE = 123 * MILLION;
>         ^^^^^^^^^^^^^^^^^^^
>         VatAbstract(MCD_VAT).file("Line", GLOBAL_LINE * RAD);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        179
Source: 
>         // New Mat: 120%
>         uint256 USDC_MAT = 1.2 * 10 ** 27;
>         ^^^^^^^^^^^^^^^^
>         SpotAbstract(MCD_SPOT).file("USDC-A", "mat", USDC_MAT);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        211
Source: 
>         action = address(new SpellAction());
>         bytes32 _tag;
>         ^^^^^^^^^^^^
>         address _action = action;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        212
Source: 
>         bytes32 _tag;
>         address _action = action;
>         ^^^^^^^^^^^^^^^
>         assembly { _tag := extcodehash(_action) }

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpellAction
Line:        118
Source: 
>     //
>     uint256 constant public ZERO_PCT_RATE =  1000000000000000000000000000;
>                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant public SIX_PCT_RATE = 1000000001847694957439350562;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpellAction
Line:        119
Source: 
>     uint256 constant public ZERO_PCT_RATE =  1000000000000000000000000000;
>     uint256 constant public SIX_PCT_RATE = 1000000001847694957439350562;
>                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DssSpell
Line:        228
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SaiSlayer
Line:        76
Source: 
>         require(now >= T2020_05_12_1600UTC);
>         SAITOP.cage();
>         ^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        127
Source: 
>         // Drip Pot and Jugs prior to all modifications.
>         PotAbstract(MCD_POT).drip();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("ETH-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        128
Source: 
>         PotAbstract(MCD_POT).drip();
>         JugAbstract(MCD_JUG).drip("ETH-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("BAT-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        129
Source: 
>         JugAbstract(MCD_JUG).drip("ETH-A");
>         JugAbstract(MCD_JUG).drip("BAT-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("USDC-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        130
Source: 
>         JugAbstract(MCD_JUG).drip("BAT-A");
>         JugAbstract(MCD_JUG).drip("USDC-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        139
Source: 
>         uint256 ETH_FEE = ZERO_PCT_RATE;
>         JugAbstract(MCD_JUG).file("ETH-A", "duty", ETH_FEE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        146
Source: 
>         uint256 BAT_FEE = ZERO_PCT_RATE;
>         JugAbstract(MCD_JUG).file("BAT-A", "duty", BAT_FEE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        153
Source: 
>         uint256 USDC_FEE = SIX_PCT_RATE;
>         JugAbstract(MCD_JUG).file("USDC-A", "duty", USDC_FEE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        160
Source: 
>         uint256 DSR_RATE = ZERO_PCT_RATE;
>         PotAbstract(MCD_POT).file("dsr", DSR_RATE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        168
Source: 
>         uint256 ETH_LINE = 100 * MILLION;
>         VatAbstract(MCD_VAT).file("ETH-A", "line", ETH_LINE * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        172
Source: 
>         uint256 GLOBAL_LINE = 123 * MILLION;
>         VatAbstract(MCD_VAT).file("Line", GLOBAL_LINE * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        180
Source: 
>         uint256 USDC_MAT = 1.2 * 10 ** 27;
>         SpotAbstract(MCD_SPOT).file("USDC-A", "mat", USDC_MAT);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         SpotAbstract(MCD_SPOT).poke("USDC-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        181
Source: 
>         SpotAbstract(MCD_SPOT).file("USDC-A", "mat", USDC_MAT);
>         SpotAbstract(MCD_SPOT).poke("USDC-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        184
Source: 
>         // Whitelist Set and dydx addresses to read the osms
>         OsmAbstract(ETHUSD).kiss(SET_ETHUSD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         OsmAbstract(BTCUSD).kiss(DYDX_BTCUSD);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        185
Source: 
>         OsmAbstract(ETHUSD).kiss(SET_ETHUSD);
>         OsmAbstract(BTCUSD).kiss(DYDX_BTCUSD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         OsmAbstract(BTCUSD).kiss(SET_BTCUSD);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        186
Source: 
>         OsmAbstract(BTCUSD).kiss(DYDX_BTCUSD);
>         OsmAbstract(BTCUSD).kiss(SET_BTCUSD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        189
Source: 
>         // Set delay to 12 hours
>         DSPauseAbstract(MCD_PAUSE).setDelay(12 hours);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        222
Source: 
>     function description() public view returns (string memory) {
>         return SpellAction(action).description();
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        229
Source: 
>         eta = now + DSPauseAbstract(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        232
Source: 
>         // Set SaiSlayer to cage the system after May 12th, 2020 at 16:00 UTC
>         saiSlayer.SAITOP().setOwner(address(saiSlayer));
>         ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        232
Source: 
>         // Set SaiSlayer to cage the system after May 12th, 2020 at 16:00 UTC
>         saiSlayer.SAITOP().setOwner(address(saiSlayer));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        235
Source: 
>         // Set PEP of SCD to the new MKR Oracle
>         saiMom.setPep(address(newMkrOracle));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        241
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DssSpell
Line:        214
Source: 
>         assembly { _tag := extcodehash(_action) }
>         tag = _tag;
>               ^^^^
>         expiration = now + 30 days;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell
Line:        201
Source: 
>     bytes32          public tag;
>     uint256          public eta;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes            public sig;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell
Line:        204
Source: 
>     uint256          public expiration;
>     bool             public done;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     SaiSlayer        public saiSlayer;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell
Line:        228
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell
Line:        240
Source: 
>         require(!done, "spell-already-cast");
>         done = true;
>         ^^^^^^^^^^^
>         pause.exec(action, tag, sig, eta);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        127
Source: 
>         // Drip Pot and Jugs prior to all modifications.
>         PotAbstract(MCD_POT).drip();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("ETH-A");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        128
Source: 
>         PotAbstract(MCD_POT).drip();
>         JugAbstract(MCD_JUG).drip("ETH-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("BAT-A");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        129
Source: 
>         JugAbstract(MCD_JUG).drip("ETH-A");
>         JugAbstract(MCD_JUG).drip("BAT-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("USDC-A");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        130
Source: 
>         JugAbstract(MCD_JUG).drip("BAT-A");
>         JugAbstract(MCD_JUG).drip("USDC-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DssSpell
Line:        232
Source: 
>         // Set SaiSlayer to cage the system after May 12th, 2020 at 16:00 UTC
>         saiSlayer.SAITOP().setOwner(address(saiSlayer));
>         ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DssSpell
Line:        241
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        92
Source: 
>     // This should be modified weekly to provide a summary of the actions
>     string constant public description = "2020-04-24 MakerDAO Executive Spell";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
