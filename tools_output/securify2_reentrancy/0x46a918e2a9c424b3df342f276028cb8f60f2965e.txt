Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    IMediaModified
Line:        770
Source: 
>     mapping(uint256 => address) public tokenCreators;
>     address public marketContract;
>           ^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        238
Source: 
>      */
>     function owner() public view returns (address) {
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        257
Source: 
>      */
>     function renounceOwnership() public virtual onlyOwner {
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        266
Source: 
>      */
>     function transferOwnership(address newOwner) public virtual onlyOwner {
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        257
Source: 
>      */
>     function renounceOwnership() public virtual onlyOwner {
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        266
Source: 
>      */
>     function transferOwnership(address newOwner) public virtual onlyOwner {
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReserveAuction
Line:        843
Source: 
> 
>     function updateZora(address _zora) public onlyOwner {
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReserveAuction
Line:        851
Source: 
> 
>     function updateMinBid(uint256 _minBid) public onlyOwner {
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minBid = _minBid;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReserveAuction
Line:        855
Source: 
> 
>     function updateTimeBuffer(uint256 _timeBuffer) public onlyOwner {
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         timeBuffer = _timeBuffer;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReserveAuction
Line:        1029
Source: 
> 
>     function updatePaused(bool _paused) public onlyOwner {
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         paused = _paused;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ReserveAuction
Line:        1029
Source: 
> 
>     function updatePaused(bool _paused) public onlyOwner {
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         paused = _paused;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ReserveAuction
Line:        843
Source: 
> 
>     function updateZora(address _zora) public onlyOwner {
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ReserveAuction
Line:        851
Source: 
> 
>     function updateMinBid(uint256 _minBid) public onlyOwner {
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minBid = _minBid;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ReserveAuction
Line:        855
Source: 
> 
>     function updateTimeBuffer(uint256 _timeBuffer) public onlyOwner {
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         timeBuffer = _timeBuffer;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ReserveAuction
Line:        859
Source: 
> 
>     function createAuction(
>           ^^^^^^^^^^^^^^^^^
>         uint256 tokenId,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReserveAuction
Line:        876
Source: 
> 
>         IERC721(zora).transferFrom(creator, address(this), tokenId);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReserveAuction
Line:        925
Source: 
>         require(
>             IMarket(IMediaModified(zora).marketContract()).isValidBid(
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 tokenId,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReserveAuction
Line:        925
Source: 
>         require(
>             IMarket(IMediaModified(zora).marketContract()).isValidBid(
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 tokenId,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReserveAuction
Line:        990
Source: 
> 
>         IERC721(zora).transferFrom(address(this), winner, tokenId);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReserveAuction
Line:        993
Source: 
>         IMarket.BidShares memory bidShares =
>             IMarket(IMediaModified(zora).marketContract()).bidSharesForToken(
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 tokenId

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReserveAuction
Line:        993
Source: 
>         IMarket.BidShares memory bidShares =
>             IMarket(IMediaModified(zora).marketContract()).bidSharesForToken(
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 tokenId

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReserveAuction
Line:        999
Source: 
>         address payable originalCreator =
>             payable(address(IMediaModified(zora).tokenCreators(tokenId)));
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReserveAuction
Line:        1002
Source: 
>         uint256 creatorAmount =
>             IMarket(IMediaModified(zora).marketContract()).splitShare(
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 bidShares.creator,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReserveAuction
Line:        1002
Source: 
>         uint256 creatorAmount =
>             IMarket(IMediaModified(zora).marketContract()).splitShare(
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 bidShares.creator,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReserveAuction
Line:        1025
Source: 
>         delete auctions[tokenId];
>         IERC721(zora).transferFrom(address(this), creator, tokenId);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit AuctionCanceled(tokenId, zora, creator);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    ReserveAuction
Line:        958
Source: 
>         if (!firstBid) {
>             lastBidder.transfer(lastValue);
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    ReserveAuction
Line:        1009
Source: 
> 
>         originalCreator.transfer(creatorAmount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         creatorShareRecipient.transfer(sellerAmount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    ReserveAuction
Line:        1010
Source: 
>         originalCreator.transfer(creatorAmount);
>         creatorShareRecipient.transfer(sellerAmount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ReserveAuction
Line:        781
Source: 
> 
>     bytes4 constant interfaceId = 0x80ac58cd; // 721 interface id
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public zora = 0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReserveAuction
Line:        776
Source: 
> 
>     bool public paused;
>           ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReserveAuction
Line:        781
Source: 
> 
>     bytes4 constant interfaceId = 0x80ac58cd; // 721 interface id
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public zora = 0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    ReserveAuction
Line:        1009
Source: 
> 
>         originalCreator.transfer(creatorAmount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         creatorShareRecipient.transfer(sellerAmount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    ReserveAuction
Line:        1010
Source: 
>         originalCreator.transfer(creatorAmount);
>         creatorShareRecipient.transfer(sellerAmount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    ReserveAuction
Line:        958
Source: 
>         if (!firstBid) {
>             lastBidder.transfer(lastValue);
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    ReserveAuction
Line:        958
Source: 
>         if (!firstBid) {
>             lastBidder.transfer(lastValue);
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    ReserveAuction
Line:        1009
Source: 
> 
>         originalCreator.transfer(creatorAmount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         creatorShareRecipient.transfer(sellerAmount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    ReserveAuction
Line:        1010
Source: 
>         originalCreator.transfer(creatorAmount);
>         creatorShareRecipient.transfer(sellerAmount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    ReserveAuction
Line:        958
Source: 
>         if (!firstBid) {
>             lastBidder.transfer(lastValue);
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    ReserveAuction
Line:        1009
Source: 
> 
>         originalCreator.transfer(creatorAmount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         creatorShareRecipient.transfer(sellerAmount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    ReserveAuction
Line:        1010
Source: 
>         originalCreator.transfer(creatorAmount);
>         creatorShareRecipient.transfer(sellerAmount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ReserveAuction
Line:        837
Source: 
>         require(
>             IERC165(_zora).supportsInterface(interfaceId),
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "Doesn't support NFT interface"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ReserveAuction
Line:        845
Source: 
>         require(
>             IERC165(_zora).supportsInterface(interfaceId),
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "Doesn't support NFT interface"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ReserveAuction
Line:        925
Source: 
>         require(
>             IMarket(IMediaModified(zora).marketContract()).isValidBid(
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 tokenId,

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ReserveAuction
Line:        993
Source: 
>         IMarket.BidShares memory bidShares =
>             IMarket(IMediaModified(zora).marketContract()).bidSharesForToken(
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 tokenId

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReserveAuction
Line:        876
Source: 
> 
>         IERC721(zora).transferFrom(creator, address(this), tokenId);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReserveAuction
Line:        925
Source: 
>         require(
>             IMarket(IMediaModified(zora).marketContract()).isValidBid(
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 tokenId,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReserveAuction
Line:        990
Source: 
> 
>         IERC721(zora).transferFrom(address(this), winner, tokenId);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReserveAuction
Line:        993
Source: 
>         IMarket.BidShares memory bidShares =
>             IMarket(IMediaModified(zora).marketContract()).bidSharesForToken(
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 tokenId

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReserveAuction
Line:        999
Source: 
>         address payable originalCreator =
>             payable(address(IMediaModified(zora).tokenCreators(tokenId)));
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReserveAuction
Line:        1002
Source: 
>         uint256 creatorAmount =
>             IMarket(IMediaModified(zora).marketContract()).splitShare(
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 bidShares.creator,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReserveAuction
Line:        1002
Source: 
>         uint256 creatorAmount =
>             IMarket(IMediaModified(zora).marketContract()).splitShare(
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 bidShares.creator,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReserveAuction
Line:        1025
Source: 
>         delete auctions[tokenId];
>         IERC721(zora).transferFrom(address(this), creator, tokenId);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit AuctionCanceled(tokenId, zora, creator);

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ReserveAuction
Line:        776
Source: 
> 
>     bool public paused;
>           ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    IMediaModified
Line:        770
Source: 
>     mapping(uint256 => address) public tokenCreators;
>     address public marketContract;
>           ^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    ReserveAuction
Line:        958
Source: 
>         if (!firstBid) {
>             lastBidder.transfer(lastValue);
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    ReserveAuction
Line:        1009
Source: 
> 
>         originalCreator.transfer(creatorAmount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         creatorShareRecipient.transfer(sellerAmount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    ReserveAuction
Line:        1010
Source: 
>         originalCreator.transfer(creatorAmount);
>         creatorShareRecipient.transfer(sellerAmount);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        736
Source: 
>         // Any calls to nonReentrant after this point will fail
>         _status = _ENTERED;
>               ^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        868
Source: 
> 
>         tokenIds.push(tokenId);
>               ^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        870
Source: 
> 
>         auctions[tokenId].exists = true;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         auctions[tokenId].duration = duration;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        871
Source: 
>         auctions[tokenId].exists = true;
>         auctions[tokenId].duration = duration;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         auctions[tokenId].reservePrice = reservePrice;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        872
Source: 
>         auctions[tokenId].duration = duration;
>         auctions[tokenId].reservePrice = reservePrice;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         auctions[tokenId].creator = creator;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        873
Source: 
>         auctions[tokenId].reservePrice = reservePrice;
>         auctions[tokenId].creator = creator;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         auctions[tokenId].creatorShareRecipient = creatorShareRecipient;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        874
Source: 
>         auctions[tokenId].creator = creator;
>         auctions[tokenId].creatorShareRecipient = creatorShareRecipient;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        742
Source: 
>         // https://eips.ethereum.org/EIPS/eip-2200)
>         _status = _NOT_ENTERED;
>               ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        736
Source: 
>         // Any calls to nonReentrant after this point will fail
>         _status = _ENTERED;
>               ^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        932
Source: 
> 
>         auctions[tokenId].amount = msg.value;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         auctions[tokenId].bidder = msg.sender;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        933
Source: 
>         auctions[tokenId].amount = msg.value;
>         auctions[tokenId].bidder = msg.sender;
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        943
Source: 
>         ) {
>             auctions[tokenId].duration += timeBuffer;
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             extended = true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        742
Source: 
>         // https://eips.ethereum.org/EIPS/eip-2200)
>         _status = _NOT_ENTERED;
>               ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        921
Source: 
>             firstBid = true;
>             auctions[tokenId].firstBidTime = block.timestamp;
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        736
Source: 
>         // Any calls to nonReentrant after this point will fail
>         _status = _ENTERED;
>               ^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReserveAuction
Line:        988
Source: 
>         );
>         delete auctions[tokenId];
>               ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        742
Source: 
>         // https://eips.ethereum.org/EIPS/eip-2200)
>         _status = _NOT_ENTERED;
>               ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        736
Source: 
>         // Any calls to nonReentrant after this point will fail
>         _status = _ENTERED;
>               ^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ReserveAuction
Line:        925
Source: 
>         require(
>             IMarket(IMediaModified(zora).marketContract()).isValidBid(
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 tokenId,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ReserveAuction
Line:        993
Source: 
>         IMarket.BidShares memory bidShares =
>             IMarket(IMediaModified(zora).marketContract()).bidSharesForToken(
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 tokenId

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ReserveAuction
Line:        1002
Source: 
>         uint256 creatorAmount =
>             IMarket(IMediaModified(zora).marketContract()).splitShare(
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 bidShares.creator,

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        716
Source: 
>     uint256 private constant _NOT_ENTERED = 1;
>     uint256 private constant _ENTERED = 2;
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        718
Source: 
> 
>     uint256 private _status;
>           ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IMediaModified
Line:        769
Source: 
> contract IMediaModified {
>     mapping(uint256 => address) public tokenCreators;
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public marketContract;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IMediaModified
Line:        770
Source: 
>     mapping(uint256 => address) public tokenCreators;
>     address public marketContract;
>           ^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Decimal
Line:        377
Source: 
> 
>     uint256 constant BASE_POW = 18;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant BASE = 10**BASE_POW;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Decimal
Line:        378
Source: 
>     uint256 constant BASE_POW = 18;
>     uint256 constant BASE = 10**BASE_POW;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    ReserveAuction
Line:        901
Source: 
>             auctions[tokenId].firstBidTime == 0 ||
>                 block.timestamp <
>                       ^^^^^^^^^^^
>                 auctions[tokenId].firstBidTime + auctions[tokenId].duration,

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    ReserveAuction
Line:        969
Source: 
>         require(
>             block.timestamp >=
>                   ^^^^^^^^^^^^
>                 auctions[tokenId].firstBidTime + auctions[tokenId].duration,

[0m
