[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Xmalltoken
Line:        166
Source: 
>         uint length;
>         assembly {
>         ^^^^^^^^^^
>             //retrieve the size of the code on target address, this needs assembly

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        75
Source: 
> 
>     function transferOwnership(address newOwner) onlyOwner public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(newOwner != address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        112
Source: 
> 
>     function freezeAccounts(address[] memory targets, bool isFrozen) onlyOwner public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(targets.length > 0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        121
Source: 
>     }
>     function lockupAccounts(address[] memory targets, uint[] memory unixTimes) onlyOwner public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(targets.length > 0

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        133
Source: 
> 
>     function transfer(address _to, uint _value, bytes memory _data) public  returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_value > 0 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        148
Source: 
> 
>     function transfer(address _to, uint _value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_value > 0

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        191
Source: 
> 
>     function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_to != address(0)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        209
Source: 
> 
>     function approve(address _spender, uint256 _value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowance[msg.sender][_spender] = _value;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        215
Source: 
> 
>     function burn(uint256 _unitAmount) onlyOwner public { 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_unitAmount > 0 && balanceOf[msg.sender] >= _unitAmount); 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        223
Source: 
> 
>     function burnFrom(address _from, uint256 _unitAmount) onlyOwner public { 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_unitAmount > 0 && balanceOf[_from] >= _unitAmount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        232
Source: 
> 
>     function distributeAirdrop(address[] memory addresses, uint[] memory amounts) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(addresses.length > 0

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        256
Source: 
> 
>     function collectTokens(address[] memory addresses, uint[] memory amounts) onlyOwner public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(addresses.length > 0 && addresses.length == amounts.length);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Xmalltoken
Line:        280
Source: 
> 
>     function withdrawETH() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 ethBalance = address(this).balance;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Xmalltoken
Line:        186
Source: 
>         ContractReceiver receiver = ContractReceiver(_to);
>         receiver.tokenFallback(msg.sender, _value, _data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(msg.sender, _to, _value);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Xmalltoken
Line:        133
Source: 
> 
>     function transfer(address _to, uint _value, bytes memory _data) public  returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_value > 0 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Xmalltoken
Line:        112
Source: 
> 
>     function freezeAccounts(address[] memory targets, bool isFrozen) onlyOwner public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(targets.length > 0);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Xmalltoken
Line:        209
Source: 
> 
>     function approve(address _spender, uint256 _value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowance[msg.sender][_spender] = _value;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Xmalltoken
Line:        186
Source: 
>         ContractReceiver receiver = ContractReceiver(_to);
>         receiver.tokenFallback(msg.sender, _value, _data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(msg.sender, _to, _value);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Xmalltoken
Line:        86
Source: 
> 
>     string public constant name = "cryptomall token";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public constant symbol = "XMALL";

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Xmalltoken
Line:        87
Source: 
>     string public constant name = "cryptomall token";
>     string public constant symbol = "XMALL";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 public constant decimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Xmalltoken
Line:        88
Source: 
>     string public constant symbol = "XMALL";
>     uint8 public constant decimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint private constant DECIMALS = 1000000000000000000;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Xmalltoken
Line:        89
Source: 
>     uint8 public constant decimals = 18;
>     uint private constant DECIMALS = 1000000000000000000;
>                                      ^^^^^^^^^^^^^^^^^^^
>     uint256 public totalSupply = 500000000 * DECIMALS;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Xmalltoken
Line:        90
Source: 
>     uint private constant DECIMALS = 1000000000000000000;
>     uint256 public totalSupply = 500000000 * DECIMALS;
>                                  ^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    Xmalltoken
Line:        283
Source: 
>         require(ethBalance > 0);
>         founder.transfer(ethBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Xmalltoken
Line:        283
Source: 
>         require(ethBalance > 0);
>         founder.transfer(ethBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Xmalltoken
Line:        283
Source: 
>         require(ethBalance > 0);
>         founder.transfer(ethBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Xmalltoken
Line:        186
Source: 
>         ContractReceiver receiver = ContractReceiver(_to);
>         receiver.tokenFallback(msg.sender, _value, _data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(msg.sender, _to, _value);

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Xmalltoken
Line:        158
Source: 
>         if (isContract(_to)) {
>             return transferToContract(_to, _value, empty);
>                                                    ^^^^^
>         } else {

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Xmalltoken
Line:        170
Source: 
>         }
>         return (length > 0);
>                 ^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Xmalltoken
Line:        210
Source: 
>     function approve(address _spender, uint256 _value) public returns (bool success) {
>         allowance[msg.sender][_spender] = _value;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender, _spender, _value);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Xmalltoken
Line:        86
Source: 
> 
>     string public constant name = "cryptomall token";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public constant symbol = "XMALL";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Xmalltoken
Line:        87
Source: 
>     string public constant name = "cryptomall token";
>     string public constant symbol = "XMALL";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 public constant decimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Xmalltoken
Line:        88
Source: 
>     string public constant symbol = "XMALL";
>     uint8 public constant decimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint private constant DECIMALS = 1000000000000000000;

[0m
