Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ClaimDropper
Line:        537
Source: 
> 
>   function claim() public nonReentrant
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ClaimDropper
Line:        532
Source: 
> 
>   function isBeneficiary(address _account) public view returns (bool)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    ClaimDropper
Line:        540
Source: 
>     require(isBeneficiary(msg.sender), "404");
>     require(YLDToken.mint(msg.sender, beneficiaries[msg.sender] * 1e18));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ClaimDropper
Line:        122
Source: 
> {
>   IYLD internal constant YLDToken = IYLD(0xDcB01cc464238396E213a6fDd933E36796eAfF9f);
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   mapping(address => uint) internal beneficiaries;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        31
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ClaimDropper
Line:        540
Source: 
>     require(isBeneficiary(msg.sender), "404");
>     require(YLDToken.mint(msg.sender, beneficiaries[msg.sender] * 1e18));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        24
Source: 
>     // Any calls to nonReentrant after this point will fail
>     _notEntered = false;
>     ^^^^^^^^^^^^^^^^^^^
>     _;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        26
Source: 
>     _;
>     _notEntered = true;
>     ^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        10
Source: 
> {
>   bool private _notEntered;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
