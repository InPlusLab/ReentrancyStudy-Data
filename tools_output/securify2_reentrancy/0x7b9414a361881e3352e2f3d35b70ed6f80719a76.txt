Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    BeastSale
Line:        162
Source: 
>       //Start the BeastDAO token sale
>     require(msg.sender == owner && startDate==0);
>                                    ^^^^^^^^^^^^
>     startDate=now;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BeastSale
Line:        133
Source: 
> 
>   function withdrawETH() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       //Withdraw ETH to add UniSwap Liquidity

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BeastSale
Line:        140
Source: 
> 
>  function withdrawTokens() public {
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.sender == owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BeastSale
Line:        147
Source: 
> 
>   function endSale() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       //End the BeastDAO sale

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BeastSale
Line:        153
Source: 
> 
>   function burn() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.sender == owner && Token.balanceOf(address(this)) > 0 && now.sub(startDate) > 7 days);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BeastSale
Line:        160
Source: 
>   
>   function startSale() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       //Start the BeastDAO token sale

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BeastSale
Line:        166
Source: 
>   
>   function availableTokens() public view returns(uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return Token.balanceOf(address(this));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BeastSale
Line:        99
Source: 
>     require(startDate > 0 && now.sub(startDate) <= 7 days);
>     require(Token.balanceOf(address(this)) > 0);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.value >= 0.1 ether && msg.value <= 60 ether);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BeastSale
Line:        107
Source: 
>     
>     require(amount <= Token.balanceOf(address(this)));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Update Constants

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BeastSale
Line:        112
Source: 
>     // Transfer the BeastDAO tokens
>     Token.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BeastSale
Line:        118
Source: 
>     require(startDate > 0 && now.sub(startDate) <= 7 days);
>     require(Token.balanceOf(address(this)) > 0);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.value >= 0.1 ether && msg.value <= 60 ether);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BeastSale
Line:        124
Source: 
>     
>     require(amount <= Token.balanceOf(address(this)));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Update Constants

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BeastSale
Line:        129
Source: 
>     // transfer the tokens.
>     Token.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BeastSale
Line:        83
Source: 
>   uint256 public totalSold;
>   ERC20 public Token;
>   ^^^^^^^^^^^^^^^^^^
>   address payable public owner;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BeastSale
Line:        94
Source: 
> 
>   uint256 amount;
>   ^^^^^^^^^^^^^^
>  

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    BeastSale
Line:        137
Source: 
>     require(saleClosed == true);
>     owner.transfer(collectedETH);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    BeastSale
Line:        137
Source: 
>     require(saleClosed == true);
>     owner.transfer(collectedETH);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    BeastSale
Line:        137
Source: 
>     require(saleClosed == true);
>     owner.transfer(collectedETH);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BeastSale
Line:        99
Source: 
>     require(startDate > 0 && now.sub(startDate) <= 7 days);
>     require(Token.balanceOf(address(this)) > 0);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.value >= 0.1 ether && msg.value <= 60 ether);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BeastSale
Line:        107
Source: 
>     
>     require(amount <= Token.balanceOf(address(this)));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Update Constants

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BeastSale
Line:        118
Source: 
>     require(startDate > 0 && now.sub(startDate) <= 7 days);
>     require(Token.balanceOf(address(this)) > 0);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.value >= 0.1 ether && msg.value <= 60 ether);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BeastSale
Line:        124
Source: 
>     
>     require(amount <= Token.balanceOf(address(this)));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Update Constants

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BeastSale
Line:        154
Source: 
>   function burn() public {
>     require(msg.sender == owner && Token.balanceOf(address(this)) > 0 && now.sub(startDate) > 7 days);
>                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Burn the left over BEAST tokens after the sale is complete

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BeastSale
Line:        112
Source: 
>     // Transfer the BeastDAO tokens
>     Token.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BeastSale
Line:        129
Source: 
>     // transfer the tokens.
>     Token.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BeastSale
Line:        144
Source: 
>     // Returns the tokens incase of emergency
>     Token.transfer(address(msg.sender), Token.balanceOf(address(this)));
>                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BeastSale
Line:        144
Source: 
>     // Returns the tokens incase of emergency
>     Token.transfer(address(msg.sender), Token.balanceOf(address(this)));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BeastSale
Line:        156
Source: 
>     // Burn the left over BEAST tokens after the sale is complete
>     Token.transfer(address(0), Token.balanceOf(address(this)));
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BeastSale
Line:        156
Source: 
>     // Burn the left over BEAST tokens after the sale is complete
>     Token.transfer(address(0), Token.balanceOf(address(this)));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BeastSale
Line:        167
Source: 
>   function availableTokens() public view returns(uint256) {
>     return Token.balanceOf(address(this));
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BeastSale
Line:        82
Source: 
> 
>   uint256 public totalSold;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>   ERC20 public Token;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BeastSale
Line:        85
Source: 
>   address payable public owner;
>   uint256 public collectedETH;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public startDate;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BeastSale
Line:        86
Source: 
>   uint256 public collectedETH;
>   uint256 public startDate;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>   bool private saleClosed = false;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BeastSale
Line:        94
Source: 
> 
>   uint256 amount;
>   ^^^^^^^^^^^^^^
>  

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BeastSale
Line:        104
Source: 
>     //BEAST token sale amount
>        amount = msg.value.mul(200);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BeastSale
Line:        109
Source: 
>     // Update Constants
>     totalSold = totalSold.add(amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     collectedETH = collectedETH.add(msg.value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BeastSale
Line:        110
Source: 
>     totalSold = totalSold.add(amount);
>     collectedETH = collectedETH.add(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Transfer the BeastDAO tokens

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BeastSale
Line:        122
Source: 
>     
>   amount = msg.value.mul(200);
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BeastSale
Line:        126
Source: 
>     // Update Constants
>     totalSold = totalSold.add(amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     collectedETH = collectedETH.add(msg.value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BeastSale
Line:        127
Source: 
>     totalSold = totalSold.add(amount);
>     collectedETH = collectedETH.add(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // transfer the tokens.

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    BeastSale
Line:        112
Source: 
>     // Transfer the BeastDAO tokens
>     Token.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    BeastSale
Line:        129
Source: 
>     // transfer the tokens.
>     Token.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    BeastSale
Line:        144
Source: 
>     // Returns the tokens incase of emergency
>     Token.transfer(address(msg.sender), Token.balanceOf(address(this)));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    BeastSale
Line:        156
Source: 
>     // Burn the left over BEAST tokens after the sale is complete
>     Token.transfer(address(0), Token.balanceOf(address(this)));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
