Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        74
Source: 
>     //percentage deducted to the advertising fund
>     uint projectPercent = 2500; //2.5%
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	uint marketingPercent = 2500; //2.5%

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        75
Source: 
>     uint projectPercent = 2500; //2.5%
> 	uint marketingPercent = 2500; //2.5%
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	uint public exchangeTokenPercent = 5000; //5%

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        76
Source: 
> 	uint marketingPercent = 2500; //2.5%
> 	uint public exchangeTokenPercent = 5000; //5%
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //time through which you can take dividends

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        78
Source: 
>     //time through which you can take dividends
>     uint public chargingTime = 1 hours;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //start persent 0.081% per hour

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        80
Source: 
>     //start persent 0.081% per hour
>     uint public startPercent = 81;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public lowPersent = 300;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        81
Source: 
>     uint public startPercent = 81;
>     uint public lowPersent = 300;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public middlePersent = 350;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        82
Source: 
>     uint public lowPersent = 300;
>     uint public middlePersent = 350;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public highPersent = 375;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        83
Source: 
>     uint public middlePersent = 350;
>     uint public highPersent = 375;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //interest rate increase steps

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        85
Source: 
>     //interest rate increase steps
>     uint public stepLow = 10000 ether;  
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public stepMiddle = 20000 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        86
Source: 
>     uint public stepLow = 10000 ether;  
>     uint public stepMiddle = 20000 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public stepHigh = 30000 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        87
Source: 
>     uint public stepMiddle = 20000 ether;
>     uint public stepHigh = 30000 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public countOfInvestors = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        94
Source: 
>     );
> 	NexusInterface public nexusContract = NexusInterface(nexusAddress);	
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LinkProfit200
Line:        99
Source: 
>     );
>     LinkInterface public linkContract = LinkInterface(tokenAddress);	
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        21
Source: 
>         uint256 c = a * b;
>         assert(a == 0 || c / a == b);
>                ^^^^^^
>         return c;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        21
Source: 
>         uint256 c = a * b;
>         assert(a == 0 || c / a == b);
>                          ^^^^^^^^^^
>         return c;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LinkProfit200
Line:        151
Source: 
>     //refund of the amount available for withdrawal on deposit
>     function payoutAmount(address _investorAddress) public view returns(uint) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint persent = persentRate();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    LinkProfit200
Line:        162
Source: 
>      */
>     function onTokenTransfer(address _sender, uint _value, bytes calldata _data) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // make sure that only chainlink transferandcalls are supported

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath
Line:        20
Source: 
>     function mul(uint256 a, uint256 b) internal pure returns(uint256) {
>         uint256 c = a * b;
>                     ^^^^^
>         assert(a == 0 || c / a == b);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LinkProfit200
Line:        127
Source: 
>             persentWithdraw[msg.sender] += payout;
> 			linkContract.transfer(msg.sender, payout);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LinkProfit200
Line:        181
Source: 
>             //sending money for administration
>             linkContract.transfer(projectFund, _value.mul(projectPercent).div(100000));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             //sending money for advertising

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LinkProfit200
Line:        183
Source: 
>             //sending money for advertising
>             linkContract.transfer(marketingFund, _value.mul(marketingPercent).div(100000));			
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 			// buy the tokens for this player and include the referrer too (nexusnodes work)

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LinkProfit200
Line:        186
Source: 
> 			uint256 exchangeTokensAmount = _value.mul(exchangeTokenPercent).div(100000);
> 			linkContract.transferAndCall(nexusAddress, exchangeTokensAmount, bytes(""));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             nexusContract.transfer(_sender, nexusContract.balanceOf(address(this)));			

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LinkProfit200
Line:        187
Source: 
> 			linkContract.transferAndCall(nexusAddress, exchangeTokensAmount, bytes(""));
>             nexusContract.transfer(_sender, nexusContract.balanceOf(address(this)));			
>                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LinkProfit200
Line:        187
Source: 
> 			linkContract.transferAndCall(nexusAddress, exchangeTokensAmount, bytes(""));
>             nexusContract.transfer(_sender, nexusContract.balanceOf(address(this)));			
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    LinkProfit200
Line:        91
Source: 
> 	//The address of Nexus contract
>     address internal constant nexusAddress = address(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         0x42b410dC4BF2F461d57Ec4dD1D6D841340FD40B2  // nexus token address

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    LinkProfit200
Line:        96
Source: 
> 	
>     address internal constant tokenAddress = address(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         0x514910771AF9Ca656af840dff83E8264EcF986CA  // chainlink token address

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        11
Source: 
> 
> pragma solidity ^0.5.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LinkProfit200
Line:        74
Source: 
>     //percentage deducted to the advertising fund
>     uint projectPercent = 2500; //2.5%
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	uint marketingPercent = 2500; //2.5%

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LinkProfit200
Line:        75
Source: 
>     uint projectPercent = 2500; //2.5%
> 	uint marketingPercent = 2500; //2.5%
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	uint public exchangeTokenPercent = 5000; //5%

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LinkProfit200
Line:        153
Source: 
>         uint persent = persentRate();
>         uint rate = userDeposit[_investorAddress].mul(persent).div(100000);
>                                                                    ^^^^^^
>         uint interestRate = now.sub(userTime[_investorAddress]).div(chargingTime);

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LinkProfit200
Line:        181
Source: 
>             //sending money for administration
>             linkContract.transfer(projectFund, _value.mul(projectPercent).div(100000));
>                                                                               ^^^^^^
>             //sending money for advertising

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LinkProfit200
Line:        183
Source: 
>             //sending money for advertising
>             linkContract.transfer(marketingFund, _value.mul(marketingPercent).div(100000));			
>                                                                                   ^^^^^^
> 			// buy the tokens for this player and include the referrer too (nexusnodes work)

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LinkProfit200
Line:        185
Source: 
> 			// buy the tokens for this player and include the referrer too (nexusnodes work)
> 			uint256 exchangeTokensAmount = _value.mul(exchangeTokenPercent).div(100000);
>                                                                        ^^^^^^
> 			linkContract.transferAndCall(nexusAddress, exchangeTokensAmount, bytes(""));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    LinkProfit200
Line:        187
Source: 
> 			linkContract.transferAndCall(nexusAddress, exchangeTokensAmount, bytes(""));
>             nexusContract.transfer(_sender, nexusContract.balanceOf(address(this)));			
>                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LinkProfit200
Line:        127
Source: 
>             persentWithdraw[msg.sender] += payout;
> 			linkContract.transfer(msg.sender, payout);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LinkProfit200
Line:        181
Source: 
>             //sending money for administration
>             linkContract.transfer(projectFund, _value.mul(projectPercent).div(100000));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             //sending money for advertising

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LinkProfit200
Line:        183
Source: 
>             //sending money for advertising
>             linkContract.transfer(marketingFund, _value.mul(marketingPercent).div(100000));			
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 			// buy the tokens for this player and include the referrer too (nexusnodes work)

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LinkProfit200
Line:        186
Source: 
> 			uint256 exchangeTokensAmount = _value.mul(exchangeTokenPercent).div(100000);
> 			linkContract.transferAndCall(nexusAddress, exchangeTokensAmount, bytes(""));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             nexusContract.transfer(_sender, nexusContract.balanceOf(address(this)));			

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LinkProfit200
Line:        187
Source: 
> 			linkContract.transferAndCall(nexusAddress, exchangeTokensAmount, bytes(""));
>             nexusContract.transfer(_sender, nexusContract.balanceOf(address(this)));			
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    LinkProfit200
Line:        127
Source: 
>             persentWithdraw[msg.sender] += payout;
> 			linkContract.transfer(msg.sender, payout);
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    LinkProfit200
Line:        181
Source: 
>             //sending money for administration
>             linkContract.transfer(projectFund, _value.mul(projectPercent).div(100000));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             //sending money for advertising

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    LinkProfit200
Line:        183
Source: 
>             //sending money for advertising
>             linkContract.transfer(marketingFund, _value.mul(marketingPercent).div(100000));			
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 			// buy the tokens for this player and include the referrer too (nexusnodes work)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    LinkProfit200
Line:        186
Source: 
> 			uint256 exchangeTokensAmount = _value.mul(exchangeTokenPercent).div(100000);
> 			linkContract.transferAndCall(nexusAddress, exchangeTokensAmount, bytes(""));
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             nexusContract.transfer(_sender, nexusContract.balanceOf(address(this)));			

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    LinkProfit200
Line:        187
Source: 
> 			linkContract.transferAndCall(nexusAddress, exchangeTokensAmount, bytes(""));
>             nexusContract.transfer(_sender, nexusContract.balanceOf(address(this)));			
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else {

[0m
