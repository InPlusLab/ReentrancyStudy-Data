[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    FIRE_LGE
Line:        85
Source: 
>     bool public saleOpen;
>     uint256 tokenRatePerEth = 300; // Where 300 = 30
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        64
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Owned
Line:        64
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    FIRE_LGE
Line:        98
Source: 
>     
>     function setTokenAddress(address tokenContract) external onlyOwner{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(tokenAddress == address(0), "token address already set");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    FIRE_LGE
Line:        116
Source: 
>         
>         require(IToken(tokenAddress).transfer(msg.sender, tokens), "Insufficient balance of sale contract!");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    FIRE_LGE
Line:        121
Source: 
>         // send received funds to the owner
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    FIRE_LGE
Line:        81
Source: 
> 
> contract FIRE_LGE is Owned {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     using SafeMath for uint256;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> // SPDX-License-Identifier: UNLICENSED

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    FIRE_LGE
Line:        85
Source: 
>     bool public saleOpen;
>     uint256 tokenRatePerEth = 300; // Where 300 = 30
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    FIRE_LGE
Line:        121
Source: 
>         // send received funds to the owner
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    FIRE_LGE
Line:        121
Source: 
>         // send received funds to the owner
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    FIRE_LGE
Line:        116
Source: 
>         
>         require(IToken(tokenAddress).transfer(msg.sender, tokens), "Insufficient balance of sale contract!");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    FIRE_LGE
Line:        130
Source: 
>         require(!saleOpen, "please close the sale first");
>         IToken(tokenAddress).burnTokens(IToken(tokenAddress).balanceOf(address(this)));   
>                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    FIRE_LGE
Line:        130
Source: 
>         require(!saleOpen, "please close the sale first");
>         IToken(tokenAddress).burnTokens(IToken(tokenAddress).balanceOf(address(this)));   
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    FIRE_LGE
Line:        83
Source: 
>     using SafeMath for uint256;
>     address public tokenAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool public saleOpen;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    FIRE_LGE
Line:        84
Source: 
>     address public tokenAddress;
>     bool public saleOpen;
>     ^^^^^^^^^^^^^^^^^^^^
>     uint256 tokenRatePerEth = 300; // Where 300 = 30

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    FIRE_LGE
Line:        121
Source: 
>         // send received funds to the owner
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
