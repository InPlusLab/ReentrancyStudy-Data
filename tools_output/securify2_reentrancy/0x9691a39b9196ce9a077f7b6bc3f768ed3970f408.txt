Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    HydraVesting
Line:        15
Source: 
>     address payable public owner;
>     address public tokenAddress = 0xD99b3a47115F595517efA80A8158a4A9B620Cc40;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public totalYears = 4;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    HydraVesting
Line:        17
Source: 
>     uint256 public totalYears = 4;
>     uint256 public timeLock = 365 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public creationTime;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    HydraVesting
Line:        59
Source: 
>     
>     function canUnlock() public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return now > nextUnlock;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    HydraVesting
Line:        12
Source: 
> 
> contract HydraVesting {
> ^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    HydraVesting
Line:        47
Source: 
> 
>             uint256 withdrawBalance = ERC20(tokenAddress).balanceOf(address(this));
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             uint256 yearlyAllowance = withdrawBalance * 2500 / 10000;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    HydraVesting
Line:        49
Source: 
>             uint256 yearlyAllowance = withdrawBalance * 2500 / 10000;
>             ERC20(tokenAddress).transfer(owner, yearlyAllowance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    HydraVesting
Line:        53
Source: 
>             
>             uint256 remainingBalance = ERC20(tokenAddress).balanceOf(address(this));
>                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             ERC20(tokenAddress).transfer(owner, remainingBalance);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    HydraVesting
Line:        54
Source: 
>             uint256 remainingBalance = ERC20(tokenAddress).balanceOf(address(this));
>             ERC20(tokenAddress).transfer(owner, remainingBalance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.5.11; 
> ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    HydraVesting
Line:        47
Source: 
> 
>             uint256 withdrawBalance = ERC20(tokenAddress).balanceOf(address(this));
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             uint256 yearlyAllowance = withdrawBalance * 2500 / 10000;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    HydraVesting
Line:        49
Source: 
>             uint256 yearlyAllowance = withdrawBalance * 2500 / 10000;
>             ERC20(tokenAddress).transfer(owner, yearlyAllowance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    HydraVesting
Line:        53
Source: 
>             
>             uint256 remainingBalance = ERC20(tokenAddress).balanceOf(address(this));
>                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             ERC20(tokenAddress).transfer(owner, remainingBalance);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    HydraVesting
Line:        54
Source: 
>             uint256 remainingBalance = ERC20(tokenAddress).balanceOf(address(this));
>             ERC20(tokenAddress).transfer(owner, remainingBalance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    HydraVesting
Line:        49
Source: 
>             uint256 yearlyAllowance = withdrawBalance * 2500 / 10000;
>             ERC20(tokenAddress).transfer(owner, yearlyAllowance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    HydraVesting
Line:        54
Source: 
>             uint256 remainingBalance = ERC20(tokenAddress).balanceOf(address(this));
>             ERC20(tokenAddress).transfer(owner, remainingBalance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    HydraVesting
Line:        20
Source: 
>     uint256 public nextUnlock;
>     string public ownerName;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
