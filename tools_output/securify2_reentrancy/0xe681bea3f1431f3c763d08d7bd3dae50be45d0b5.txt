Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.16. Changing pragma version to 0.5.16....
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BubbleJackpot
Line:        28
Source: 
> 
>         assembly {
>         ^^^^^^^^^^
>             codeLength := extcodesize(addr)

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BubbleJackpot
Line:        6
Source: 
> 
>     address payable[6] rankList;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address owner;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BubbleJackpot
Line:        17
Source: 
>     uint256 public totalToken;
>     uint256 LOTTERYCOUNTDOWN = 24 hours;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    BubbleJackpot
Line:        59
Source: 
>         );
>         require(countdown == 0);
>                 ^^^^^^^^^^^^^^
>         countdown = now + LOTTERYCOUNTDOWN;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        235
Source: 
>         // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522
>         if (a == 0) {
>             ^^^^^^
>             return 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        240
Source: 
>         uint256 c = a * b;
>         require(c / a == b, "mul overflow");
>                 ^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BubbleJackpot
Line:        45
Source: 
> 
>     function getBubbleAddress() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return address(Bubble);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BubbleJackpot
Line:        49
Source: 
> 
>     function setBubbleAddress(address contractAddr) public onlyOwner() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(address(Bubble) == address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BubbleJackpot
Line:        54
Source: 
> 
>     function startLotteryCountdown() public isHuman() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BubbleJackpot
Line:        63
Source: 
> 
>     function lottery() public isHuman() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BubbleJackpot
Line:        86
Source: 
> 
>     function withdraw() public isHuman() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 amount = withdrawMap[msg.sender];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BubbleJackpot
Line:        93
Source: 
> 
>     function getWithdrawAmount(address user) public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return withdrawMap[user];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BubbleJackpot
Line:        97
Source: 
> 
>     function bet(uint256 amount) public isHuman() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (countdown != 0 && now > countdown) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BubbleJackpot
Line:        108
Source: 
>     //Get
>     function getBetTokenAmount() public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return betMap[msg.sender];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BubbleJackpot
Line:        112
Source: 
> 
>     function getRankListInfo()
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    BubbleJackpot
Line:        56
Source: 
>         require(
>             Bubble.getGameOverStatus(),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "only lottery after bubble game over"

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    BubbleJackpot
Line:        65
Source: 
>         require(
>             Bubble.getGameOverStatus(),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "only lottery after bubble game over"

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    BubbleJackpot
Line:        71
Source: 
>         isLottery = true;
>         Bubble.transferAllEthToJackPot();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    BubbleJackpot
Line:        90
Source: 
>         withdrawMap[msg.sender] = 0;
>         msg.sender.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    BubbleJackpot
Line:        101
Source: 
>         }
>         Bubble.sendTokenToJackpot(msg.sender, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         betMap[msg.sender] = betMap[msg.sender].add(amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BubbleJackpot
Line:        49
Source: 
> 
>     function setBubbleAddress(address contractAddr) public onlyOwner() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(address(Bubble) == address(0));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BubbleJackpot
Line:        97
Source: 
> 
>     function bet(uint256 amount) public isHuman() {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (countdown != 0 && now > countdown) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BubbleJackpot
Line:        93
Source: 
> 
>     function getWithdrawAmount(address user) public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return withdrawMap[user];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BubbleJackpot
Line:        56
Source: 
>         require(
>             Bubble.getGameOverStatus(),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "only lottery after bubble game over"

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BubbleJackpot
Line:        65
Source: 
>         require(
>             Bubble.getGameOverStatus(),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "only lottery after bubble game over"

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BubbleJackpot
Line:        71
Source: 
>         isLottery = true;
>         Bubble.transferAllEthToJackPot();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    BubbleJackpot
Line:        90
Source: 
>         withdrawMap[msg.sender] = 0;
>         msg.sender.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BubbleJackpot
Line:        11
Source: 
> 
>     IBubble Bubble;
>     ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BubbleJackpot
Line:        17
Source: 
>     uint256 public totalToken;
>     uint256 LOTTERYCOUNTDOWN = 24 hours;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BubbleJackpot
Line:        6
Source: 
> 
>     address payable[6] rankList;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address owner;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BubbleJackpot
Line:        7
Source: 
>     address payable[6] rankList;
>     address owner;
>     ^^^^^^^^^^^^^
>     uint256 public countdown;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BubbleJackpot
Line:        9
Source: 
>     uint256 public countdown;
>     bool isLottery;
>     ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BubbleJackpot
Line:        11
Source: 
> 
>     IBubble Bubble;
>     ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BubbleJackpot
Line:        13
Source: 
> 
>     mapping(address => uint256) betMap;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => uint256) withdrawMap;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BubbleJackpot
Line:        14
Source: 
>     mapping(address => uint256) betMap;
>     mapping(address => uint256) withdrawMap;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BubbleJackpot
Line:        17
Source: 
>     uint256 public totalToken;
>     uint256 LOTTERYCOUNTDOWN = 24 hours;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BubbleJackpot
Line:        25
Source: 
>     modifier isHuman() {
>         address addr = msg.sender;
>         ^^^^^^^^^^^^
>         uint256 codeLength;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BubbleJackpot
Line:        26
Source: 
>         address addr = msg.sender;
>         uint256 codeLength;
>         ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    BubbleJackpot
Line:        90
Source: 
>         withdrawMap[msg.sender] = 0;
>         msg.sender.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    BubbleJackpot
Line:        90
Source: 
>         withdrawMap[msg.sender] = 0;
>         msg.sender.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BubbleJackpot
Line:        56
Source: 
>         require(
>             Bubble.getGameOverStatus(),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "only lottery after bubble game over"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BubbleJackpot
Line:        65
Source: 
>         require(
>             Bubble.getGameOverStatus(),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "only lottery after bubble game over"

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BubbleJackpot
Line:        71
Source: 
>         isLottery = true;
>         Bubble.transferAllEthToJackPot();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BubbleJackpot
Line:        101
Source: 
>         }
>         Bubble.sendTokenToJackpot(msg.sender, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         betMap[msg.sender] = betMap[msg.sender].add(amount);

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    BubbleJackpot
Line:        121
Source: 
>             address user = rankList[idx];
>             tokenList[idx] = betMap[user];
>             ^^^^^^^^^
>         }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BubbleJackpot
Line:        6
Source: 
> 
>     address payable[6] rankList;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address owner;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BubbleJackpot
Line:        8
Source: 
>     address owner;
>     uint256 public countdown;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     bool isLottery;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BubbleJackpot
Line:        9
Source: 
>     uint256 public countdown;
>     bool isLottery;
>     ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BubbleJackpot
Line:        11
Source: 
> 
>     IBubble Bubble;
>     ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BubbleJackpot
Line:        16
Source: 
> 
>     uint256 public totalToken;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 LOTTERYCOUNTDOWN = 24 hours;

[0m
