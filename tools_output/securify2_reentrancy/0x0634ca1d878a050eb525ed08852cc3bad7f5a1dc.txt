pragma directive defines a prior version to 0.6.11. Changing pragma version to 0.6.11....
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MerkleDistributor
Line:        201
Source: 
>         _setClaimed(index);
>         require(IERC20(token).transfer(account, amount), 'MerkleDistributor: Transfer failed.');
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MerkleDistributor
Line:        211
Source: 
> 
>         require(IERC20(token).transferFrom(funder, address(this), fundingAmount), 'MerkleDistributor: Funding failed.');
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    MerkleDistributor
Line:        192
Source: 
> 
>     function claim(uint256 index, address account, uint256 amount, bytes32[] calldata merkleProof) external override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!isClaimed(index), 'MerkleDistributor: Drop already claimed.');

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    MerkleDistributor
Line:        178
Source: 
> 
>     function isClaimed(uint256 index) public view override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 claimedWordIndex = index / 256;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    MerkleDistributor
Line:        211
Source: 
> 
>         require(IERC20(token).transferFrom(funder, address(this), fundingAmount), 'MerkleDistributor: Funding failed.');
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    MerkleDistributor
Line:        201
Source: 
>         _setClaimed(index);
>         require(IERC20(token).transfer(account, amount), 'MerkleDistributor: Transfer failed.');
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    MerkleDistributor
Line:        211
Source: 
> 
>         require(IERC20(token).transferFrom(funder, address(this), fundingAmount), 'MerkleDistributor: Funding failed.');
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    MerkleDistributor
Line:        189
Source: 
>         uint256 claimedBitIndex = index % 256;
>         claimedBitMap[claimedWordIndex] = claimedBitMap[claimedWordIndex] | (1 << claimedBitIndex);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    MerkleDistributor
Line:        209
Source: 
> 
>         isFunded = true;
>         ^^^^^^^^^^^^^^^
> 

[0m
