Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    TokenWell
Line:        16
Source: 
>     
>     address public token = 0x382f5DfE9eE6e309D1B9D622735e789aFde6BADe; // GST
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //address public token = 0xaD6D458402F60fD3Bd25163575031ACDce07538D; // ropDAI (testing)

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    TokenWell
Line:        18
Source: 
>     //address public token = 0xaD6D458402F60fD3Bd25163575031ACDce07538D; // ropDAI (testing)
>     ERC20 erc20 = ERC20(token);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    TokenWell
Line:        24
Source: 
>     uint public lastPumpTime = 0;
>     uint public interval = 60*10; // 10 minutes
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    TokenWell
Line:        26
Source: 
> 
>     uint public flowRate = 1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public flowGuage = 1000;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    TokenWell
Line:        27
Source: 
>     uint public flowRate = 1;
>     uint public flowGuage = 1000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenWell
Line:        29
Source: 
> 
>     function getBalance() public view returns(uint balance) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balance = erc20.balanceOf(address(this));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenWell
Line:        33
Source: 
>     
>     function pump() public returns(uint balance) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //    require(pumpers[msg.sender],"NOT YOU"); // only pumpers may get free tokens

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    TokenWell
Line:        39
Source: 
>         balance = erc20.balanceOf(address(this));
>         erc20.transfer(msg.sender,balance/flowGuage*flowRate); // send 0.1% of the current balance
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    TokenWell
Line:        38
Source: 
>         
>         balance = erc20.balanceOf(address(this));
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         erc20.transfer(msg.sender,balance/flowGuage*flowRate); // send 0.1% of the current balance

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    TokenWell
Line:        39
Source: 
>         balance = erc20.balanceOf(address(this));
>         erc20.transfer(msg.sender,balance/flowGuage*flowRate); // send 0.1% of the current balance
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TokenWell
Line:        18
Source: 
>     //address public token = 0xaD6D458402F60fD3Bd25163575031ACDce07538D; // ropDAI (testing)
>     ERC20 erc20 = ERC20(token);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenWell
Line:        30
Source: 
>     function getBalance() public view returns(uint balance) {
>         balance = erc20.balanceOf(address(this));
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenWell
Line:        38
Source: 
>         
>         balance = erc20.balanceOf(address(this));
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         erc20.transfer(msg.sender,balance/flowGuage*flowRate); // send 0.1% of the current balance

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenWell
Line:        39
Source: 
>         balance = erc20.balanceOf(address(this));
>         erc20.transfer(msg.sender,balance/flowGuage*flowRate); // send 0.1% of the current balance
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenWell
Line:        36
Source: 
>         require((now-lastPumpTime)>interval, "TOO SOON"); // enforce time interval between pumps
>         lastPumpTime = now;
>         ^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenWell
Line:        39
Source: 
>         balance = erc20.balanceOf(address(this));
>         erc20.transfer(msg.sender,balance/flowGuage*flowRate); // send 0.1% of the current balance
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
