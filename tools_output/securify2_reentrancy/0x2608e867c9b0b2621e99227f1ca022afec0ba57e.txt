pragma directive defines a prior version to 0.6.6. Changing pragma version to 0.6.6....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BrandContest
Line:        46
Source: 
>     //The vote is to be considered valid if and only if the creator's address is the one who sent the original NFT to the wallet with address: 0x74Ef70357ef21BaD2b45795679F2727C48d501ED
>     function vote(address tokenAddress, uint256 tokenId, address payable creator) public payable {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BrandContest
Line:        77
Source: 
>     //Utility function to let everyone know (both offchain and onchain) the current votes amount for every allowed NFT (ARTE/ETRA)
>     function votesOf(address tokenAddress, uint256 tokenId) public view returns(uint256, uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return (_votes[tokenAddress][tokenId], _ethers[tokenAddress][tokenId]);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    BrandContest
Line:        81
Source: 
> 
>     function getSurveyEndBlock() public view returns(uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _surveyEndBlock;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BrandContest
Line:        46
Source: 
>     //The vote is to be considered valid if and only if the creator's address is the one who sent the original NFT to the wallet with address: 0x74Ef70357ef21BaD2b45795679F2727C48d501ED
>     function vote(address tokenAddress, uint256 tokenId, address payable creator) public payable {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BrandContest
Line:        77
Source: 
>     //Utility function to let everyone know (both offchain and onchain) the current votes amount for every allowed NFT (ARTE/ETRA)
>     function votesOf(address tokenAddress, uint256 tokenId) public view returns(uint256, uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return (_votes[tokenAddress][tokenId], _ethers[tokenAddress][tokenId]);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    BrandContest
Line:        70
Source: 
>         //Transfer the received ethers to the NFT's creator
>         creator.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BrandContest
Line:        36
Source: 
>         _surveyEndBlock = surveyEndBlock;
>         _allowedVotingAmounts[4000000000000000] = 1;
>                               ^^^^^^^^^^^^^^^^
>         _allowedVotingAmounts[30000000000000000] = 5;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BrandContest
Line:        37
Source: 
>         _allowedVotingAmounts[4000000000000000] = 1;
>         _allowedVotingAmounts[30000000000000000] = 5;
>                               ^^^^^^^^^^^^^^^^^
>         _allowedVotingAmounts[100000000000000000] = 10;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BrandContest
Line:        38
Source: 
>         _allowedVotingAmounts[30000000000000000] = 5;
>         _allowedVotingAmounts[100000000000000000] = 10;
>                               ^^^^^^^^^^^^^^^^^^
>         _allowedVotingAmounts[300000000000000000] = 20;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BrandContest
Line:        39
Source: 
>         _allowedVotingAmounts[100000000000000000] = 10;
>         _allowedVotingAmounts[300000000000000000] = 20;
>                               ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    BrandContest
Line:        70
Source: 
>         //Transfer the received ethers to the NFT's creator
>         creator.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BrandContest
Line:        58
Source: 
>         //Check if tokenId and its owner are valid
>         require(IERC721(tokenAddress).ownerOf(tokenId) != address(0), "Owner is nobody, maybe wrong tokenId?");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    BrandContest
Line:        70
Source: 
>         //Transfer the received ethers to the NFT's creator
>         creator.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    BrandContest
Line:        66
Source: 
>         //Update the votes and ethers amount for this NFT
>         _votes[tokenAddress][tokenId] = _votes[tokenAddress][tokenId] + _allowedVotingAmounts[msg.value];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _ethers[tokenAddress][tokenId] = _ethers[tokenAddress][tokenId] + msg.value;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    BrandContest
Line:        67
Source: 
>         _votes[tokenAddress][tokenId] = _votes[tokenAddress][tokenId] + _allowedVotingAmounts[msg.value];
>         _ethers[tokenAddress][tokenId] = _ethers[tokenAddress][tokenId] + msg.value;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
