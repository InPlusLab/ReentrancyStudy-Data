Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        66
Source: 
>     
>    uint REGESTRATION_FESS=0.1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool1_price=0.2 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        67
Source: 
>    uint REGESTRATION_FESS=0.1 ether;
>    uint pool1_price=0.2 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        69
Source: 
>    ///////////////////////////////
>    uint pool2_price=0.4 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool2_donation=0.04 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        70
Source: 
>    uint pool2_price=0.4 ether;
>    uint pool2_donation=0.04 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        72
Source: 
>    ///////////////////////////////
>    uint pool3_price=1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool3_donation=0.1 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        73
Source: 
>    uint pool3_price=1 ether;
>    uint pool3_donation=0.1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        75
Source: 
>    ///////////////////////////////
>    uint pool4_price=2.5 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool4_donation=0.2 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        76
Source: 
>    uint pool4_price=2.5 ether;
>    uint pool4_donation=0.2 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        78
Source: 
>    ///////////////////////////////
>    uint pool5_price=5 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool5_donation=0.5 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        79
Source: 
>    uint pool5_price=5 ether;
>    uint pool5_donation=0.5 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        81
Source: 
>    ///////////////////////////////
>    uint pool6_price=10 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool6_donation=0.1 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    EtherRich
Line:        82
Source: 
>    uint pool6_price=10 ether;
>    uint pool6_donation=0.1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EtherRich
Line:        195
Source: 
>      
>      function regUser(uint _referrerID) public payable {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EtherRich
Line:        262
Source: 
>    
>        function buyPool1() public payable {
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(users[msg.sender].isExist, "User Not Registered");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EtherRich
Line:        298
Source: 
>     
>       function buyPool2() public payable {
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           require(users[msg.sender].isExist, "User Not Registered");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EtherRich
Line:        333
Source: 
>     
>      function buyPool3() public payable {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          require(users[msg.sender].isExist, "User Not Registered");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EtherRich
Line:        365
Source: 
>     
>     function buyPool4() public payable {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(users[msg.sender].isExist, "User Not Registered");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EtherRich
Line:        398
Source: 
>     
>     function buyPool5() public payable {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(users[msg.sender].isExist, "User Not Registered");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EtherRich
Line:        429
Source: 
>     
>     function buyPool6() public payable {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(!pool6users[msg.sender].isExist, "Already in AutoPool");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        283
Source: 
>        bool sent = false;
>        sent = address(uint160(pool1Currentuser)).send(pool1_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        319
Source: 
>        bool sent = false;
>        sent = address(uint160(pool2Currentuser)).send(pool2_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool2_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        320
Source: 
>        sent = address(uint160(pool2Currentuser)).send(pool2_price);
>         balAdmin.transfer(pool2_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        351
Source: 
>        bool sent = false;
>        sent = address(uint160(pool3Currentuser)).send(pool3_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool3_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        352
Source: 
>        sent = address(uint160(pool3Currentuser)).send(pool3_price);
>         balAdmin.transfer(pool3_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        383
Source: 
>        bool sent = false;
>        sent = address(uint160(pool4Currentuser)).send(pool4_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool4_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        384
Source: 
>        sent = address(uint160(pool4Currentuser)).send(pool4_price);
>         balAdmin.transfer(pool4_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        416
Source: 
>        bool sent = false;
>        sent = address(uint160(pool5Currentuser)).send(pool5_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool5_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        417
Source: 
>        sent = address(uint160(pool5Currentuser)).send(pool5_price);
>         balAdmin.transfer(pool5_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        446
Source: 
>        bool sent = false;
>        sent = address(uint160(pool6Currentuser)).send(pool6_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool6_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherRich
Line:        447
Source: 
>        sent = address(uint160(pool6Currentuser)).send(pool6_price);
>         balAdmin.transfer(pool6_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        26
Source: 
>       
>       uint public unlimited_level_price=0;
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>      

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        64
Source: 
>      //////////////
>     mapping(uint => uint) public LEVEL_PRICE;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        66
Source: 
>     
>    uint REGESTRATION_FESS=0.1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool1_price=0.2 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        67
Source: 
>    uint REGESTRATION_FESS=0.1 ether;
>    uint pool1_price=0.2 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        69
Source: 
>    ///////////////////////////////
>    uint pool2_price=0.4 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool2_donation=0.04 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        70
Source: 
>    uint pool2_price=0.4 ether;
>    uint pool2_donation=0.04 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        72
Source: 
>    ///////////////////////////////
>    uint pool3_price=1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool3_donation=0.1 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        73
Source: 
>    uint pool3_price=1 ether;
>    uint pool3_donation=0.1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        75
Source: 
>    ///////////////////////////////
>    uint pool4_price=2.5 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool4_donation=0.2 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        76
Source: 
>    uint pool4_price=2.5 ether;
>    uint pool4_donation=0.2 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        78
Source: 
>    ///////////////////////////////
>    uint pool5_price=5 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool5_donation=0.5 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        79
Source: 
>    uint pool5_price=5 ether;
>    uint pool5_donation=0.5 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        81
Source: 
>    ///////////////////////////////
>    uint pool6_price=10 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool6_donation=0.1 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        82
Source: 
>    uint pool6_price=10 ether;
>    uint pool6_donation=0.1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        85
Source: 
>    
>      event regLevelEvent(address indexed _user, address indexed _referrer, uint _time);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       event getMoneyForLevelEvent(address indexed _user, address indexed _referral, uint _level, uint _time);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        86
Source: 
>      event regLevelEvent(address indexed _user, address indexed _referrer, uint _time);
>       event getMoneyForLevelEvent(address indexed _user, address indexed _referral, uint _level, uint _time);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        88
Source: 
>       
>      event regPoolEntry(address indexed _user,uint _level,   uint _time);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        91
Source: 
>      
>     event getPoolPayment(address indexed _user,address indexed _receiver, uint _level, uint _time);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherRich
Line:        231
Source: 
>        
>             uint level_price_local=0;
>             ^^^^^^^^^^^^^^^^^^^^^^
>             if(_level>4){

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        9
Source: 
>      address public ownerWallet;
>      address payable balAdmin;
>      ^^^^^^^^^^^^^^^^^^^^^^^^
>       uint public currUserID = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        66
Source: 
>     
>    uint REGESTRATION_FESS=0.1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool1_price=0.2 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        67
Source: 
>    uint REGESTRATION_FESS=0.1 ether;
>    uint pool1_price=0.2 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        69
Source: 
>    ///////////////////////////////
>    uint pool2_price=0.4 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool2_donation=0.04 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        70
Source: 
>    uint pool2_price=0.4 ether;
>    uint pool2_donation=0.04 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        72
Source: 
>    ///////////////////////////////
>    uint pool3_price=1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool3_donation=0.1 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        73
Source: 
>    uint pool3_price=1 ether;
>    uint pool3_donation=0.1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        75
Source: 
>    ///////////////////////////////
>    uint pool4_price=2.5 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool4_donation=0.2 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        76
Source: 
>    uint pool4_price=2.5 ether;
>    uint pool4_donation=0.2 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        78
Source: 
>    ///////////////////////////////
>    uint pool5_price=5 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool5_donation=0.5 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        79
Source: 
>    uint pool5_price=5 ether;
>    uint pool5_donation=0.5 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        81
Source: 
>    ///////////////////////////////
>    uint pool6_price=10 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint pool6_donation=0.1 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    EtherRich
Line:        82
Source: 
>    uint pool6_price=10 ether;
>    uint pool6_donation=0.1 ether;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    ///////////////////////////////

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        238
Source: 
>             }
>             sent = address(uint160(referer)).send(level_price_local);
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        467
Source: 
>     {
>          if (!address(uint160(balAdmin)).send(getEthBalance()))
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        283
Source: 
>        bool sent = false;
>        sent = address(uint160(pool1Currentuser)).send(pool1_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        319
Source: 
>        bool sent = false;
>        sent = address(uint160(pool2Currentuser)).send(pool2_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool2_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        320
Source: 
>        sent = address(uint160(pool2Currentuser)).send(pool2_price);
>         balAdmin.transfer(pool2_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        351
Source: 
>        bool sent = false;
>        sent = address(uint160(pool3Currentuser)).send(pool3_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool3_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        352
Source: 
>        sent = address(uint160(pool3Currentuser)).send(pool3_price);
>         balAdmin.transfer(pool3_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        383
Source: 
>        bool sent = false;
>        sent = address(uint160(pool4Currentuser)).send(pool4_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool4_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        384
Source: 
>        sent = address(uint160(pool4Currentuser)).send(pool4_price);
>         balAdmin.transfer(pool4_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        416
Source: 
>        bool sent = false;
>        sent = address(uint160(pool5Currentuser)).send(pool5_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool5_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        417
Source: 
>        sent = address(uint160(pool5Currentuser)).send(pool5_price);
>         balAdmin.transfer(pool5_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        446
Source: 
>        bool sent = false;
>        sent = address(uint160(pool6Currentuser)).send(pool6_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool6_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        447
Source: 
>        sent = address(uint160(pool6Currentuser)).send(pool6_price);
>         balAdmin.transfer(pool6_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        238
Source: 
>             }
>             sent = address(uint160(referer)).send(level_price_local);
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        467
Source: 
>     {
>          if (!address(uint160(balAdmin)).send(getEthBalance()))
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        283
Source: 
>        bool sent = false;
>        sent = address(uint160(pool1Currentuser)).send(pool1_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        319
Source: 
>        bool sent = false;
>        sent = address(uint160(pool2Currentuser)).send(pool2_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool2_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        320
Source: 
>        sent = address(uint160(pool2Currentuser)).send(pool2_price);
>         balAdmin.transfer(pool2_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        351
Source: 
>        bool sent = false;
>        sent = address(uint160(pool3Currentuser)).send(pool3_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool3_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        352
Source: 
>        sent = address(uint160(pool3Currentuser)).send(pool3_price);
>         balAdmin.transfer(pool3_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        383
Source: 
>        bool sent = false;
>        sent = address(uint160(pool4Currentuser)).send(pool4_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool4_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        384
Source: 
>        sent = address(uint160(pool4Currentuser)).send(pool4_price);
>         balAdmin.transfer(pool4_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        416
Source: 
>        bool sent = false;
>        sent = address(uint160(pool5Currentuser)).send(pool5_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool5_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        417
Source: 
>        sent = address(uint160(pool5Currentuser)).send(pool5_price);
>         balAdmin.transfer(pool5_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        446
Source: 
>        bool sent = false;
>        sent = address(uint160(pool6Currentuser)).send(pool6_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool6_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherRich
Line:        447
Source: 
>        sent = address(uint160(pool6Currentuser)).send(pool6_price);
>         balAdmin.transfer(pool6_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        238
Source: 
>             }
>             sent = address(uint160(referer)).send(level_price_local);
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        467
Source: 
>     {
>          if (!address(uint160(balAdmin)).send(getEthBalance()))
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        283
Source: 
>        bool sent = false;
>        sent = address(uint160(pool1Currentuser)).send(pool1_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        319
Source: 
>        bool sent = false;
>        sent = address(uint160(pool2Currentuser)).send(pool2_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool2_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        320
Source: 
>        sent = address(uint160(pool2Currentuser)).send(pool2_price);
>         balAdmin.transfer(pool2_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        351
Source: 
>        bool sent = false;
>        sent = address(uint160(pool3Currentuser)).send(pool3_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool3_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        352
Source: 
>        sent = address(uint160(pool3Currentuser)).send(pool3_price);
>         balAdmin.transfer(pool3_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        383
Source: 
>        bool sent = false;
>        sent = address(uint160(pool4Currentuser)).send(pool4_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool4_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        384
Source: 
>        sent = address(uint160(pool4Currentuser)).send(pool4_price);
>         balAdmin.transfer(pool4_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        416
Source: 
>        bool sent = false;
>        sent = address(uint160(pool5Currentuser)).send(pool5_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool5_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        417
Source: 
>        sent = address(uint160(pool5Currentuser)).send(pool5_price);
>         balAdmin.transfer(pool5_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        446
Source: 
>        bool sent = false;
>        sent = address(uint160(pool6Currentuser)).send(pool6_price);
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         balAdmin.transfer(pool6_donation);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherRich
Line:        447
Source: 
>        sent = address(uint160(pool6Currentuser)).send(pool6_price);
>         balAdmin.transfer(pool6_donation);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if (sent) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    EtherRich
Line:        238
Source: 
>             }
>             sent = address(uint160(referer)).send(level_price_local);
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    EtherRich
Line:        467
Source: 
>     {
>          if (!address(uint160(balAdmin)).send(getEthBalance()))
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          {

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    EtherRich
Line:        93
Source: 
>    
>     UserStruct[] public requests;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>      

[0m
