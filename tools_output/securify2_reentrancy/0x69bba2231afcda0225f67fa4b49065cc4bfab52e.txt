Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.7. Changing pragma version to 0.5.7....
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1524
Source: 
>         address[] memory initialRiskCollateralComponents = ISetToken(_initialRiskCollateralAddress).getComponents();
>         address[] memory initialStableCollateralComponents = ISetToken(_initialStableCollateralAddress).getComponents();
>                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1542
Source: 
>         // Get decimals of underlying assets from smart contracts
>         stableAssetDecimals = ERC20Detailed(_stableAssetAddress).decimals();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         riskAssetDecimals = ERC20Detailed(_riskAssetAddress).decimals();

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1543
Source: 
>         stableAssetDecimals = ERC20Detailed(_stableAssetAddress).decimals();
>         riskAssetDecimals = ERC20Detailed(_riskAssetAddress).decimals();
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1569
Source: 
>         require(
>             ICore(coreAddress).validSets(_rebalancingSetTokenAddress),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "MACOStrategyManager.initialize: Invalid or disabled RebalancingSetToken address"

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1684
Source: 
>         // Get set currently collateralizing rebalancing set token
>         address[] memory currentCollateralComponents = ISetToken(rebalancingSetTokenAddress).getComponents();
>                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1703
Source: 
>         // Get raw riska asset price feed being used by moving average oracle
>         address riskAssetPriceFeed = IMetaOracle(movingAveragePriceFeed).getSourceMedianizer();
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1707
Source: 
>         uint256 riskAssetPrice = FlexibleTimingManagerLibrary.queryPriceData(riskAssetPriceFeed);
>         uint256 movingAveragePrice = uint256(IMetaOracle(movingAveragePriceFeed).read(movingAverageDays));
>                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    FlexibleTimingManagerLibrary
Line:        1307
Source: 
>         // Get prices from oracles
>         bytes32 priceInBytes = IMedian(_priceFeedAddress).read();
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    FlexibleTimingManagerLibrary
Line:        1233
Source: 
>         // Require that enough time has passed from last rebalance
>         uint256 lastRebalanceTimestamp = _rebalancingSetInterface.lastRebalanceTimestamp();
>                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 rebalanceInterval = _rebalancingSetInterface.rebalanceInterval();

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    FlexibleTimingManagerLibrary
Line:        1234
Source: 
>         uint256 lastRebalanceTimestamp = _rebalancingSetInterface.lastRebalanceTimestamp();
>         uint256 rebalanceInterval = _rebalancingSetInterface.rebalanceInterval();
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    FlexibleTimingManagerLibrary
Line:        1243
Source: 
>         require(
>             _rebalancingSetInterface.rebalanceState() == RebalancingLibraryV2.State.Default,
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "FlexibleTimingManagerLibrary.proposeNewRebalance: State must be in Default"

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1656
Source: 
>         // Propose new allocation to Rebalancing Set Token
>         IRebalancingSetTokenV2(rebalancingSetTokenAddress).propose(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             nextSetAddress,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1870
Source: 
>             // Create new stable collateral set with units and naturalUnit as calculated above
>             stableCollateralAddress = ICore(coreAddress).createSet(
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 setTokenFactory,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1903
Source: 
>             // Create new risk collateral set with units and naturalUnit as calculated above
>             riskCollateralAddress = ICore(coreAddress).createSet(
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 setTokenFactory,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SetTokenLibrary
Line:        1072
Source: 
>         // Fetch set token properties
>         uint256 naturalUnit = setToken.naturalUnit();
>                               ^^^^^^^^^^^^^^^^^^^^^^
>         address[] memory components = setToken.getComponents();

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SetTokenLibrary
Line:        1073
Source: 
>         uint256 naturalUnit = setToken.naturalUnit();
>         address[] memory components = setToken.getComponents();
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256[] memory units = setToken.getUnits();

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SetTokenLibrary
Line:        1074
Source: 
>         address[] memory components = setToken.getComponents();
>         uint256[] memory units = setToken.getUnits();
>                                  ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    SetTokenLibrary
Line:        1050
Source: 
>         require(
>             _quantity.mod(ISetToken(_set).naturalUnit()) == 0,
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SetTokenLibrary.isMultipleOfSetNaturalUnit: Quantity is not a multiple of nat unit"

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    SetTokenLibrary
Line:        1029
Source: 
>             require(
>                 ISetToken(_set).tokenIsComponent(_tokens[i]),
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 "SetTokenLibrary.validateTokensAreComponents: Component must be a member of Set"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    MACOStrategyManager
Line:        1556
Source: 
>      */
>     function initialize(
>     ^^^^^^^^^^^^^^^^^^^^
>         address _rebalancingSetTokenAddress

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SetTokenLibrary
Line:        1019
Source: 
>      */
>     function validateTokensAreComponents(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _set,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SetTokenLibrary
Line:        1042
Source: 
>      */
>     function isMultipleOfSetNaturalUnit(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _set,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath
Line:        95
Source: 
> 
>         uint256 c = a * b;
>                     ^^^^^
>         require(c / a == b);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    MACOStrategyManager
Line:        1569
Source: 
>         require(
>             ICore(coreAddress).validSets(_rebalancingSetTokenAddress),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "MACOStrategyManager.initialize: Invalid or disabled RebalancingSetToken address"

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    MACOStrategyManager
Line:        1870
Source: 
>             // Create new stable collateral set with units and naturalUnit as calculated above
>             stableCollateralAddress = ICore(coreAddress).createSet(
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 setTokenFactory,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    MACOStrategyManager
Line:        1903
Source: 
>             // Create new risk collateral set with units and naturalUnit as calculated above
>             riskCollateralAddress = ICore(coreAddress).createSet(
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 setTokenFactory,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        47
Source: 
> 
>     constructor (string memory name, string memory symbol, uint8 decimals) public {
>                  ^^^^^^^^^^^^^^^^^^
>         _name = name;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        47
Source: 
> 
>     constructor (string memory name, string memory symbol, uint8 decimals) public {
>                                      ^^^^^^^^^^^^^^^^^^^^
>         _name = name;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        47
Source: 
> 
>     constructor (string memory name, string memory symbol, uint8 decimals) public {
>                                                            ^^^^^^^^^^^^^^
>         _name = name;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    FlexibleTimingManagerLibrary
Line:        1368
Source: 
>     {
>         uint256 SET_TOKEN_DECIMALS = 18;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MACOStrategyManager
Line:        1433
Source: 
>     /* ============ Constants ============ */
>     uint256 constant AUCTION_LIB_PRICE_DIVISOR = 1000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant ALLOCATION_PRICE_RATIO_LIMIT = 4;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MACOStrategyManager
Line:        1434
Source: 
>     uint256 constant AUCTION_LIB_PRICE_DIVISOR = 1000;
>     uint256 constant ALLOCATION_PRICE_RATIO_LIMIT = 4;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MACOStrategyManager
Line:        1436
Source: 
> 
>     uint256 constant TEN_MINUTES_IN_SECONDS = 600;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MACOStrategyManager
Line:        1439
Source: 
>     // Equal to $1 since token prices are passed with 18 decimals
>     uint256 constant STABLE_ASSET_PRICE = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant SET_TOKEN_DECIMALS = 10**18;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    MACOStrategyManager
Line:        1440
Source: 
>     uint256 constant STABLE_ASSET_PRICE = 10 ** 18;
>     uint256 constant SET_TOKEN_DECIMALS = 10**18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1523
Source: 
> 
>         address[] memory initialRiskCollateralComponents = ISetToken(_initialRiskCollateralAddress).getComponents();
>                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address[] memory initialStableCollateralComponents = ISetToken(_initialStableCollateralAddress).getComponents();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1524
Source: 
>         address[] memory initialRiskCollateralComponents = ISetToken(_initialRiskCollateralAddress).getComponents();
>         address[] memory initialStableCollateralComponents = ISetToken(_initialStableCollateralAddress).getComponents();
>                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1542
Source: 
>         // Get decimals of underlying assets from smart contracts
>         stableAssetDecimals = ERC20Detailed(_stableAssetAddress).decimals();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         riskAssetDecimals = ERC20Detailed(_riskAssetAddress).decimals();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1543
Source: 
>         stableAssetDecimals = ERC20Detailed(_stableAssetAddress).decimals();
>         riskAssetDecimals = ERC20Detailed(_riskAssetAddress).decimals();
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1569
Source: 
>         require(
>             ICore(coreAddress).validSets(_rebalancingSetTokenAddress),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "MACOStrategyManager.initialize: Invalid or disabled RebalancingSetToken address"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1684
Source: 
>         // Get set currently collateralizing rebalancing set token
>         address[] memory currentCollateralComponents = ISetToken(rebalancingSetTokenAddress).getComponents();
>                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1707
Source: 
>         uint256 riskAssetPrice = FlexibleTimingManagerLibrary.queryPriceData(riskAssetPriceFeed);
>         uint256 movingAveragePrice = uint256(IMetaOracle(movingAveragePriceFeed).read(movingAverageDays));
>                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    FlexibleTimingManagerLibrary
Line:        1307
Source: 
>         // Get prices from oracles
>         bytes32 priceInBytes = IMedian(_priceFeedAddress).read();
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    FlexibleTimingManagerLibrary
Line:        1233
Source: 
>         // Require that enough time has passed from last rebalance
>         uint256 lastRebalanceTimestamp = _rebalancingSetInterface.lastRebalanceTimestamp();
>                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 rebalanceInterval = _rebalancingSetInterface.rebalanceInterval();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    FlexibleTimingManagerLibrary
Line:        1234
Source: 
>         uint256 lastRebalanceTimestamp = _rebalancingSetInterface.lastRebalanceTimestamp();
>         uint256 rebalanceInterval = _rebalancingSetInterface.rebalanceInterval();
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    FlexibleTimingManagerLibrary
Line:        1243
Source: 
>         require(
>             _rebalancingSetInterface.rebalanceState() == RebalancingLibraryV2.State.Default,
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "FlexibleTimingManagerLibrary.proposeNewRebalance: State must be in Default"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1903
Source: 
>             // Create new risk collateral set with units and naturalUnit as calculated above
>             riskCollateralAddress = ICore(coreAddress).createSet(
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 setTokenFactory,

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SetTokenLibrary
Line:        1029
Source: 
>             require(
>                 ISetToken(_set).tokenIsComponent(_tokens[i]),
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 "SetTokenLibrary.validateTokensAreComponents: Component must be a member of Set"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SetTokenLibrary
Line:        1050
Source: 
>         require(
>             _quantity.mod(ISetToken(_set).naturalUnit()) == 0,
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SetTokenLibrary.isMultipleOfSetNaturalUnit: Quantity is not a multiple of nat unit"

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    MACOStrategyManager
Line:        1703
Source: 
>         // Get raw riska asset price feed being used by moving average oracle
>         address riskAssetPriceFeed = IMetaOracle(movingAveragePriceFeed).getSourceMedianizer();
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    MACOStrategyManager
Line:        1656
Source: 
>         // Propose new allocation to Rebalancing Set Token
>         IRebalancingSetTokenV2(rebalancingSetTokenAddress).propose(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             nextSetAddress,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    MACOStrategyManager
Line:        1870
Source: 
>             // Create new stable collateral set with units and naturalUnit as calculated above
>             stableCollateralAddress = ICore(coreAddress).createSet(
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 setTokenFactory,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SetTokenLibrary
Line:        1072
Source: 
>         // Fetch set token properties
>         uint256 naturalUnit = setToken.naturalUnit();
>                               ^^^^^^^^^^^^^^^^^^^^^^
>         address[] memory components = setToken.getComponents();

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SetTokenLibrary
Line:        1073
Source: 
>         uint256 naturalUnit = setToken.naturalUnit();
>         address[] memory components = setToken.getComponents();
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256[] memory units = setToken.getUnits();

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SetTokenLibrary
Line:        1074
Source: 
>         address[] memory components = setToken.getComponents();
>         uint256[] memory units = setToken.getUnits();
>                                  ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1444
Source: 
>     address public contractDeployer;
>     address public rebalancingSetTokenAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public coreAddress;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    MACOStrategyManager
Line:        1455
Source: 
> 
>     uint256 public stableAssetDecimals;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public riskAssetDecimals;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    MACOStrategyManager
Line:        1603
Source: 
> 
>         lastCrossoverConfirmationTimestamp = block.timestamp;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    MACOStrategyManager
Line:        1870
Source: 
>             // Create new stable collateral set with units and naturalUnit as calculated above
>             stableCollateralAddress = ICore(coreAddress).createSet(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 setTokenFactory,

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    MACOStrategyManager
Line:        1903
Source: 
>             // Create new risk collateral set with units and naturalUnit as calculated above
>             riskCollateralAddress = ICore(coreAddress).createSet(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 setTokenFactory,

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    MACOStrategyManager
Line:        1587
Source: 
>         require(
>             block.timestamp > lastCrossoverConfirmationTimestamp.add(crossoverConfirmationMaxTime),
>             ^^^^^^^^^^^^^^^
>             "MACOStrategyManager.initialPropose: 12 hours must pass before new proposal initiated"

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    FlexibleTimingManagerLibrary
Line:        1236
Source: 
>         require(
>             block.timestamp >= lastRebalanceTimestamp.add(rebalanceInterval),
>             ^^^^^^^^^^^^^^^
>             "FlexibleTimingManagerLibrary.proposeNewRebalance: Rebalance interval not elapsed"

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    MACOStrategyManager
Line:        1603
Source: 
> 
>         lastCrossoverConfirmationTimestamp = block.timestamp;
>                                              ^^^^^^^^^^^^^^^
>     }

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    MACOStrategyManager
Line:        1615
Source: 
>         require(
>             block.timestamp >= lastCrossoverConfirmationTimestamp.add(crossoverConfirmationMinTime) &&
>             ^^^^^^^^^^^^^^^
>             block.timestamp <= lastCrossoverConfirmationTimestamp.add(crossoverConfirmationMaxTime),

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    MACOStrategyManager
Line:        1616
Source: 
>             block.timestamp >= lastCrossoverConfirmationTimestamp.add(crossoverConfirmationMinTime) &&
>             block.timestamp <= lastCrossoverConfirmationTimestamp.add(crossoverConfirmationMaxTime),
>             ^^^^^^^^^^^^^^^
>             "MACOStrategyManager.confirmPropose: Confirming signal must be within bounds of the initial propose"

[0m
