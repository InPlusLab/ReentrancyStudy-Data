Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Blender
Line:        306
Source: 
>     */
>     function setPauseState(bool _isPaused) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == owner, "For owner use ONLY!!!");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Blender
Line:        294
Source: 
>         require(milk2Token.balanceOf(msg.sender) >= currShakePrice, "There is no enough MILK2");
>         require(milk2Token.burn(msg.sender, currShakePrice), "Can't burn your MILK2");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Blender
Line:        298
Source: 
>         currShakePrice  = currShakePrice.add(SHAKE_PRICE_STEP);
>         shakeToken.mint(msg.sender, 1*10**18);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    Blender
Line:        293
Source: 
> 
>         require(milk2Token.balanceOf(msg.sender) >= currShakePrice, "There is no enough MILK2");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(milk2Token.burn(msg.sender, currShakePrice), "Can't burn your MILK2");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Blender
Line:        251
Source: 
> 
>     address public immutable MILK_ADDRESS;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public immutable SHAKE_ADDRESS;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Blender
Line:        252
Source: 
>     address public immutable MILK_ADDRESS;
>     address public immutable SHAKE_ADDRESS;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint32  public immutable START_FROM_BLOCK;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Blender
Line:        253
Source: 
>     address public immutable SHAKE_ADDRESS;
>     uint32  public immutable START_FROM_BLOCK;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> // SPDX-License-Identifier: MIT
> pragma solidity ^0.6.12;
> ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Blender
Line:        293
Source: 
> 
>         require(milk2Token.balanceOf(msg.sender) >= currShakePrice, "There is no enough MILK2");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(milk2Token.burn(msg.sender, currShakePrice), "Can't burn your MILK2");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Blender
Line:        294
Source: 
>         require(milk2Token.balanceOf(msg.sender) >= currShakePrice, "There is no enough MILK2");
>         require(milk2Token.burn(msg.sender, currShakePrice), "Can't burn your MILK2");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Blender
Line:        298
Source: 
>         currShakePrice  = currShakePrice.add(SHAKE_PRICE_STEP);
>         shakeToken.mint(msg.sender, 1*10**18);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Blender
Line:        297
Source: 
>         IERC20 shakeToken = IERC20(SHAKE_ADDRESS);
>         currShakePrice  = currShakePrice.add(SHAKE_PRICE_STEP);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         shakeToken.mint(msg.sender, 1*10**18);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Blender
Line:        298
Source: 
>         currShakePrice  = currShakePrice.add(SHAKE_PRICE_STEP);
>         shakeToken.mint(msg.sender, 1*10**18);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
