Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        114
Source: 
> 
>     function name() public view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _name;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        118
Source: 
> 
>     function symbol() public view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _symbol;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        122
Source: 
> 
>     function decimals() public view returns (uint8) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _decimals;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        126
Source: 
> 
>     function url() public view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _url;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        130
Source: 
> 
>     function totalSupply() public view override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _totalSupply;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        134
Source: 
> 
>     function setUrl(string calldata uri) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (_msgSender() == _deployer, "Only deployer.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        140
Source: 
> 
>     function setPresaleContract(address _contract) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (_msgSender() == _deployer, "Only deployer.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        146
Source: 
> 
>     function setName(string calldata cname) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (_msgSender() == _deployer, "Only deployer.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        152
Source: 
> 
>     function generateCard() public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (_msgSender() != address(0), "No Zero address submission.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        161
Source: 
> 
>     function generateMarketingMatrix(string calldata _metadata, string calldata _description) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (_msgSender() != address(0), "No Zero address submission.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        170
Source: 
> 
>     function claimPresaleTokens() public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_msgSender() != address(0), "No request from the zero address");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        178
Source: 
> 
>     function balanceOf(address account) public view override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _balances[account];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        182
Source: 
> 
>     function transfer(address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(_msgSender(), recipient, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        187
Source: 
> 
>     function allowance(address owner, address spender) public view virtual override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _allowances[owner][spender];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        191
Source: 
> 
>     function approve(address spender, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _approve(_msgSender(), spender, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        196
Source: 
> 
>     function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(sender, recipient, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        202
Source: 
> 
>     function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SIVA
Line:        207
Source: 
> 
>     function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "ERC20: decreased allowance below zero"));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SIVA
Line:        182
Source: 
> 
>     function transfer(address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(_msgSender(), recipient, amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SIVA
Line:        196
Source: 
> 
>     function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(sender, recipient, amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SIVA
Line:        202
Source: 
> 
>     function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SIVA
Line:        207
Source: 
> 
>     function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "ERC20: decreased allowance below zero"));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SIVA
Line:        134
Source: 
> 
>     function setUrl(string calldata uri) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (_msgSender() == _deployer, "Only deployer.");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SIVA
Line:        140
Source: 
> 
>     function setPresaleContract(address _contract) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (_msgSender() == _deployer, "Only deployer.");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SIVA
Line:        146
Source: 
> 
>     function setName(string calldata cname) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (_msgSender() == _deployer, "Only deployer.");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SIVA
Line:        161
Source: 
> 
>     function generateMarketingMatrix(string calldata _metadata, string calldata _description) public virtual returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require (_msgSender() != address(0), "No Zero address submission.");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SIVA
Line:        178
Source: 
> 
>     function balanceOf(address account) public view override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _balances[account];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SIVA
Line:        187
Source: 
> 
>     function allowance(address owner, address spender) public view virtual override returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _allowances[owner][spender];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SIVA
Line:        191
Source: 
> 
>     function approve(address spender, uint256 amount) public virtual override returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _approve(_msgSender(), spender, amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    SIVA
Line:        173
Source: 
>         require(claimedPreSaleTokens[_msgSender()] == false, "Unable");
>         _transfer(address(this), _msgSender(), PreSale(presaleContract).userShare(_msgSender()));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         claimedPreSaleTokens[_msgSender()] = true;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SIVA
Line:        87
Source: 
>     mapping (address => uint256) public analyticsID;
>     mapping (address => uint256) public SIVAadsID;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (address => uint256) public SIVABusinessID;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SIVA
Line:        88
Source: 
>     mapping (address => uint256) public SIVAadsID;
>     mapping (address => uint256) public SIVABusinessID;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (uint256 => mapping (string => address)) public SIVAMarketingMatrix;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SIVA
Line:        89
Source: 
>     mapping (address => uint256) public SIVABusinessID;
>     mapping (uint256 => mapping (string => address)) public SIVAMarketingMatrix;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (uint256 => mapping (string => address)) public SIVAIndexA;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SIVA
Line:        90
Source: 
>     mapping (uint256 => mapping (string => address)) public SIVAMarketingMatrix;
>     mapping (uint256 => mapping (string => address)) public SIVAIndexA;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (uint256 => mapping (string => string)) public SIVAIndexB;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SIVA
Line:        91
Source: 
>     mapping (uint256 => mapping (string => address)) public SIVAIndexA;
>     mapping (uint256 => mapping (string => string)) public SIVAIndexB;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private _totalSupply;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SIVA
Line:        97
Source: 
>     string private _url;
>     address public _deployer;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     address public presaleContract;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SIVA
Line:        100
Source: 
>     uint256 public process;
>     uint256 public SIVAINDEX;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SIVA
Line:        85
Source: 
>     mapping (address => mapping (address => uint256)) private _allowances;
>     mapping (address => bool) claimedPreSaleTokens;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (address => uint256) public analyticsID;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SIVA
Line:        108
Source: 
>         _url = "https://sivanetwork.eth";
>         _totalSupply = 200000000 * 10 ** 18;
>                        ^^^^^^^^^
>         _balances[_deployer] = _totalSupply;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SIVA
Line:        173
Source: 
>         require(claimedPreSaleTokens[_msgSender()] == false, "Unable");
>         _transfer(address(this), _msgSender(), PreSale(presaleContract).userShare(_msgSender()));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         claimedPreSaleTokens[_msgSender()] = true;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SIVA
Line:        98
Source: 
>     address public _deployer;
>     address public presaleContract;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public process;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SIVA
Line:        224
Source: 
> 
>         _allowances[owner][spender] = amount;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(owner, spender, amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    SIVA
Line:        215
Source: 
>         require(recipient != address(0), "ERC20: transfer to the zero address");
>         _balances[sender] = _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _balances[recipient] = _balances[recipient].add(amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    SIVA
Line:        216
Source: 
>         _balances[sender] = _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance");
>         _balances[recipient] = _balances[recipient].add(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(sender, recipient, amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SIVA
Line:        154
Source: 
>         require (_msgSender() != address(0), "No Zero address submission.");
>         analyticsID[_msgSender()] = process;
>                     ^^^^^^^^^^^^
>         SIVAadsID[_msgSender()] = process;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SIVA
Line:        155
Source: 
>         analyticsID[_msgSender()] = process;
>         SIVAadsID[_msgSender()] = process;
>                   ^^^^^^^^^^^^
>         SIVABusinessID[_msgSender()] = process;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SIVA
Line:        156
Source: 
>         SIVAadsID[_msgSender()] = process;
>         SIVABusinessID[_msgSender()] = process;
>                        ^^^^^^^^^^^^
>         process += 1;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SIVA
Line:        163
Source: 
>         require (_msgSender() != address(0), "No Zero address submission.");
>         SIVAMarketingMatrix[SIVAINDEX][_metadata] = _msgSender();
>                                                     ^^^^^^^^^^^^
>         SIVAIndexA[SIVAINDEX][_metadata] = _msgSender();

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SIVA
Line:        164
Source: 
>         SIVAMarketingMatrix[SIVAINDEX][_metadata] = _msgSender();
>         SIVAIndexA[SIVAINDEX][_metadata] = _msgSender();
>                                            ^^^^^^^^^^^^
>         SIVAIndexB[SIVAINDEX][_metadata] = _description;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SIVA
Line:        174
Source: 
>         _transfer(address(this), _msgSender(), PreSale(presaleContract).userShare(_msgSender()));
>         claimedPreSaleTokens[_msgSender()] = true;
>                              ^^^^^^^^^^^^
>         return true;

[0m
