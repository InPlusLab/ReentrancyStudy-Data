Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.17. Changing pragma version to 0.5.17....
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    EtomicSwap
Line:        51
Source: 
> 
>     function ethPayment(
>     ^^^^^^^^^^^^^^^^^^^^
>         bytes32 _id,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    EtomicSwap
Line:        76
Source: 
> 
>     function erc20Payment(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         bytes32 _id,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    EtomicSwap
Line:        101
Source: 
>         IERC20 token = IERC20(_tokenAddress);
>         require(token.transferFrom(msg.sender, address(this), _amount));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit PaymentSent(_id);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    EtomicSwap
Line:        125
Source: 
>         if (_tokenAddress == address(0)) {
>             msg.sender.transfer(_amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    EtomicSwap
Line:        156
Source: 
>         if (_tokenAddress == address(0)) {
>             msg.sender.transfer(_amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtomicSwap
Line:        125
Source: 
>         if (_tokenAddress == address(0)) {
>             msg.sender.transfer(_amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtomicSwap
Line:        156
Source: 
>         if (_tokenAddress == address(0)) {
>             msg.sender.transfer(_amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else {

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    EtomicSwap
Line:        101
Source: 
>         IERC20 token = IERC20(_tokenAddress);
>         require(token.transferFrom(msg.sender, address(this), _amount));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit PaymentSent(_id);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    EtomicSwap
Line:        128
Source: 
>             IERC20 token = IERC20(_tokenAddress);
>             require(token.transfer(msg.sender, _amount));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    EtomicSwap
Line:        159
Source: 
>             IERC20 token = IERC20(_tokenAddress);
>             require(token.transfer(msg.sender, _amount));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EtomicSwap
Line:        67
Source: 
> 
>         payments[_id] = Payment(
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>             paymentHash,

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    EtomicSwap
Line:        94
Source: 
> 
>         payments[_id] = Payment(
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>             paymentHash,

[0m
