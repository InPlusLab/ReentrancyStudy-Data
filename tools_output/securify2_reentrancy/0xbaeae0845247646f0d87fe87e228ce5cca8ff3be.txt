Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Vesting
Line:        66
Source: 
>     using SafeMath for uint256;
>     ERC20 token = ERC20(0xAeBCC16DDf84830A163079ea4BC1c5A82819B2fa);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool hasDeposited  = false;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Vesting
Line:        84
Source: 
>     
>     function deposit(uint256 amount, uint256 blocksUntilCompleted) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!hasDeposited);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Vesting
Line:        97
Source: 
>     
>     function withdraw() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(hasDeposited);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Vesting
Line:        84
Source: 
>     
>     function deposit(uint256 amount, uint256 blocksUntilCompleted) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!hasDeposited);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Vesting
Line:        87
Source: 
>         
>         token.transferFrom(msg.sender, address(this), amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Vesting
Line:        101
Source: 
>         if(block.number > finalBlock){
>             token.transfer(owner, token.balanceOf(address(this)));
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             hasDeposited = false;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Vesting
Line:        101
Source: 
>         if(block.number > finalBlock){
>             token.transfer(owner, token.balanceOf(address(this)));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             hasDeposited = false;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Vesting
Line:        109
Source: 
>             
>             token.transfer(owner, toWithdraw);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Vesting
Line:        73
Source: 
>     uint256 finalBlock;
>     uint256 vested_period;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Vesting
Line:        66
Source: 
>     using SafeMath for uint256;
>     ERC20 token = ERC20(0xAeBCC16DDf84830A163079ea4BC1c5A82819B2fa);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool hasDeposited  = false;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Vesting
Line:        67
Source: 
>     ERC20 token = ERC20(0xAeBCC16DDf84830A163079ea4BC1c5A82819B2fa);
>     bool hasDeposited  = false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Vesting
Line:        69
Source: 
>     
>     address owner;
>     ^^^^^^^^^^^^^
>     uint256 depositedAmount;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Vesting
Line:        70
Source: 
>     address owner;
>     uint256 depositedAmount;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 withdrawnAmount = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Vesting
Line:        71
Source: 
>     uint256 depositedAmount;
>     uint256 withdrawnAmount = 0;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 finalBlock;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Vesting
Line:        72
Source: 
>     uint256 withdrawnAmount = 0;
>     uint256 finalBlock;
>     ^^^^^^^^^^^^^^^^^^
>     uint256 vested_period;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Vesting
Line:        73
Source: 
>     uint256 finalBlock;
>     uint256 vested_period;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Vesting
Line:        101
Source: 
>         if(block.number > finalBlock){
>             token.transfer(owner, token.balanceOf(address(this)));
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             hasDeposited = false;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Vesting
Line:        87
Source: 
>         
>         token.transferFrom(msg.sender, address(this), amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Vesting
Line:        101
Source: 
>         if(block.number > finalBlock){
>             token.transfer(owner, token.balanceOf(address(this)));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             hasDeposited = false;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Vesting
Line:        109
Source: 
>             
>             token.transfer(owner, toWithdraw);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Vesting
Line:        70
Source: 
>     address owner;
>     uint256 depositedAmount;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 withdrawnAmount = 0;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Vesting
Line:        72
Source: 
>     uint256 withdrawnAmount = 0;
>     uint256 finalBlock;
>     ^^^^^^^^^^^^^^^^^^
>     uint256 vested_period;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Vesting
Line:        73
Source: 
>     uint256 finalBlock;
>     uint256 vested_period;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Vesting
Line:        87
Source: 
>         
>         token.transferFrom(msg.sender, address(this), amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Vesting
Line:        101
Source: 
>         if(block.number > finalBlock){
>             token.transfer(owner, token.balanceOf(address(this)));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             hasDeposited = false;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Vesting
Line:        109
Source: 
>             
>             token.transfer(owner, toWithdraw);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             

[0m
