Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EnglishAuction
Line:        95
Source: 
>     
>     function bid() public payable {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == tx.origin, "no contracts");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EnglishAuction
Line:        115
Source: 
>     
>     function end() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^
>         require(!ended, "end already called");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    EnglishAuction
Line:        129
Source: 
>     
>     function pull() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!ended, "end already called");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    EnglishAuction
Line:        142
Source: 
>     
>     function onERC1155Received(address, address, uint256, uint256, bytes calldata) external pure returns(bytes4) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    EnglishAuction
Line:        120
Source: 
>         // transfer erc1155 to winner
>         IERC1155(token).safeTransferFrom(address(this), winning, id, 1, new bytes(0x0));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 balance = address(this).balance;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    EnglishAuction
Line:        134
Source: 
>         // transfer erc1155 to seller
>         IERC1155(token).safeTransferFrom(address(this), seller, id, 1, new bytes(0x0));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ended = true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    EnglishAuction
Line:        103
Source: 
>         if (winning != address(0)) {
>             winning.transfer(lastBid);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EnglishAuction
Line:        123
Source: 
>         uint256 hausFee = balance.div(20).mul(3);
>         haus.transfer(hausFee);
>         ^^^^^^^^^^^^^^^^^^^^^^
>         seller.transfer(address(this).balance);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EnglishAuction
Line:        124
Source: 
>         haus.transfer(hausFee);
>         seller.transfer(address(this).balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ended = true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    EnglishAuction
Line:        123
Source: 
>         uint256 hausFee = balance.div(20).mul(3);
>         haus.transfer(hausFee);
>         ^^^^^^^^^^^^^^^^^^^^^^
>         seller.transfer(address(this).balance);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EnglishAuction
Line:        124
Source: 
>         haus.transfer(hausFee);
>         seller.transfer(address(this).balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ended = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EnglishAuction
Line:        123
Source: 
>         uint256 hausFee = balance.div(20).mul(3);
>         haus.transfer(hausFee);
>         ^^^^^^^^^^^^^^^^^^^^^^
>         seller.transfer(address(this).balance);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EnglishAuction
Line:        124
Source: 
>         haus.transfer(hausFee);
>         seller.transfer(address(this).balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ended = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EnglishAuction
Line:        103
Source: 
>         if (winning != address(0)) {
>             winning.transfer(lastBid);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EnglishAuction
Line:        123
Source: 
>         uint256 hausFee = balance.div(20).mul(3);
>         haus.transfer(hausFee);
>         ^^^^^^^^^^^^^^^^^^^^^^
>         seller.transfer(address(this).balance);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EnglishAuction
Line:        124
Source: 
>         haus.transfer(hausFee);
>         seller.transfer(address(this).balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ended = true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    EnglishAuction
Line:        120
Source: 
>         // transfer erc1155 to winner
>         IERC1155(token).safeTransferFrom(address(this), winning, id, 1, new bytes(0x0));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 balance = address(this).balance;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    EnglishAuction
Line:        134
Source: 
>         // transfer erc1155 to seller
>         IERC1155(token).safeTransferFrom(address(this), seller, id, 1, new bytes(0x0));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ended = true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    EnglishAuction
Line:        72
Source: 
>     uint256 public lastBid;
>     address payable public winning;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    EnglishAuction
Line:        123
Source: 
>         uint256 hausFee = balance.div(20).mul(3);
>         haus.transfer(hausFee);
>         ^^^^^^^^^^^^^^^^^^^^^^
>         seller.transfer(address(this).balance);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    EnglishAuction
Line:        124
Source: 
>         haus.transfer(hausFee);
>         seller.transfer(address(this).balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ended = true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    EnglishAuction
Line:        125
Source: 
>         seller.transfer(address(this).balance);
>         ended = true;
>         ^^^^^^^^^^^^
>         emit Won(winning, lastBid);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    EnglishAuction
Line:        135
Source: 
>         IERC1155(token).safeTransferFrom(address(this), seller, id, 1, new bytes(0x0));
>         ended = true;
>         ^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    EnglishAuction
Line:        97
Source: 
>         require(msg.sender == tx.origin, "no contracts");
>         require(block.timestamp >= startTime, "Auction not started");
>                 ^^^^^^^^^^^^^^^
>         require(block.timestamp < endTime, "Auction ended");

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    EnglishAuction
Line:        98
Source: 
>         require(block.timestamp >= startTime, "Auction not started");
>         require(block.timestamp < endTime, "Auction ended");
>                 ^^^^^^^^^^^^^^^
>         require(msg.value >= lastBid.mul(110).div(100), "Bid too small"); // 10% increase

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    EnglishAuction
Line:        139
Source: 
>     function live() public view returns(bool) {
>         return block.timestamp < endTime;
>                ^^^^^^^^^^^^^^^
>     }

[0m
