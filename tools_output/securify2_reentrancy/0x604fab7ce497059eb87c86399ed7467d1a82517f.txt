[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    HordCongress
Line:        333
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    HordCongress
Line:        415
Source: 
>         // Require that votes in favor of proposal are greater or equal to minimalQuorum
>         require(proposal.forVotes >= membersRegistry.getMinimalQuorum());
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    HordCongress
Line:        333
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    HordCongress
Line:        447
Source: 
>         // Proposal with reached minimalQuorum cant be cancelled
>         require(proposal.forVotes < membersRegistry.getMinimalQuorum(), "HordCongress:cancel: Proposal already reached quorum");
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set that proposal is cancelled

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    HordCongress
Line:        427
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    HordCongress
Line:        427
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    HordCongress
Line:        427
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    HordCongress
Line:        338
Source: 
>     /// One time call function to set members registry contract
>     function setMembersRegistry(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _membersRegistry

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    HordCongress
Line:        390
Source: 
> 
>     function castVote(
>     ^^^^^^^^^^^^^^^^^^
>         uint proposalId,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HordCongress
Line:        347
Source: 
> 
>     function propose(
>     ^^^^^^^^^^^^^^^^^
>         address[] memory targets,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HordCongress
Line:        471
Source: 
> 
>     function getActions(uint proposalId) external view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Proposal storage p = proposals[proposalId];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    HordCongress
Line:        333
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    HordCongress
Line:        256
Source: 
>     /// @notice The name of this contract
>     string public constant name = "HordCongress";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    HordCongress
Line:        427
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>              ^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        7
Source: 
> 
> pragma solidity ^0.6.12;
> ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        25
Source: 
> 
> pragma solidity >=0.6.0 <0.8.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        241
Source: 
> 
> pragma solidity ^0.6.12;
> ^^^^^^^^^^^^^^^^^^^^^^^^
> pragma experimental ABIEncoderV2;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    HordCongress
Line:        259
Source: 
>     // Members registry contract
>     IHordCongressMembersRegistry membersRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    HordCongress
Line:        427
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    HordCongress
Line:        427
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    HordCongress
Line:        427
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HordCongress
Line:        333
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HordCongress
Line:        415
Source: 
>         // Require that votes in favor of proposal are greater or equal to minimalQuorum
>         require(proposal.forVotes >= membersRegistry.getMinimalQuorum());
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HordCongress
Line:        333
Source: 
>     modifier onlyMember {
>         require(membersRegistry.isMember(msg.sender) == true, "Only HordCongress member can call this function");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HordCongress
Line:        447
Source: 
>         // Proposal with reached minimalQuorum cant be cancelled
>         require(proposal.forVotes < membersRegistry.getMinimalQuorum(), "HordCongress:cancel: Proposal already reached quorum");
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set that proposal is cancelled

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    HordCongress
Line:        259
Source: 
>     // Members registry contract
>     IHordCongressMembersRegistry membersRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    HordCongress
Line:        262
Source: 
>     /// @notice The total number of proposals
>     uint public proposalCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    HordCongress
Line:        427
Source: 
>             // solium-disable-next-line security/no-call-value
>             (bool success,) = proposal.targets[i].call.value(proposal.values[i])(callData);
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    HordCongress
Line:        344
Source: 
>         require(address(membersRegistry) == address(0x0));
>         membersRegistry = IHordCongressMembersRegistry(_membersRegistry);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    HordCongress
Line:        367
Source: 
> 
>         proposalCount++;
>         ^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    HordCongress
Line:        460
Source: 
>         if (support) {
>             proposal.forVotes = proposal.forVotes.add(1);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         } else {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    HordCongress
Line:        465
Source: 
> 
>         receipt.hasVoted = true;
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         receipt.support = support;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    HordCongress
Line:        466
Source: 
>         receipt.hasVoted = true;
>         receipt.support = support;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    HordCongress
Line:        462
Source: 
>         } else {
>             proposal.againstVotes = proposal.againstVotes.sub(1);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        383
Source: 
> 
>         proposals[newProposal.id] = newProposal;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        413
Source: 
>         // Mark that proposal is executed
>         proposal.executed = true;
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>         // Require that votes in favor of proposal are greater or equal to minimalQuorum

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HordCongress
Line:        449
Source: 
>         // Set that proposal is cancelled
>         proposal.canceled = true;
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>         // Emit event

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    HordCongress
Line:        256
Source: 
>     /// @notice The name of this contract
>     string public constant name = "HordCongress";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    HordCongress
Line:        445
Source: 
>         // 3 days before proposal can get cancelled
>         require(block.timestamp >= proposal.timestamp + 259200);
>                 ^^^^^^^^^^^^^^^
>         // Proposal with reached minimalQuorum cant be cancelled

[0m
