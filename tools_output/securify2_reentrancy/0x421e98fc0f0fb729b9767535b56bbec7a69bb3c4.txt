Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    ERC223Token
Line:        138
Source: 
>         uint length;
>         assembly {
>         ^^^^^^^^^^
>             //retrieve the size of the code on target address, this needs assembly

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ERC223Token
Line:        79
Source: 
>    
>     string public symbol = "MYK";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public  name = "Mykonos coin";

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ERC223Token
Line:        80
Source: 
>     string public symbol = "MYK";
>     string public  name = "Mykonos coin";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ERC223Token
Line:        81
Source: 
>     string public  name = "Mykonos coin";
>     uint256 public decimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 _totalSupply = 100000000 * 10 ** (decimals); // 100 million

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ERC223Token
Line:        82
Source: 
>     uint256 public decimals = 18;
>     uint256 _totalSupply = 100000000 * 10 ** (decimals); // 100 million
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        70
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC223Token
Line:        110
Source: 
>     // Function that is called when a user or another contract wants to transfer funds .
>     function transfer(address _to, uint _value, bytes memory _data) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC223Token
Line:        122
Source: 
>     // Added due to backwards compatibility reasons .
>     function transfer(address _to, uint _value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Owned
Line:        70
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ERC223Token
Line:        122
Source: 
>     // Added due to backwards compatibility reasons .
>     function transfer(address _to, uint _value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ERC223Token
Line:        105
Source: 
>     // ------------------------------------------------------------------------
>     function balanceOf(address tokenOwner) public view returns (uint256 balance) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[tokenOwner];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ERC223Token
Line:        110
Source: 
>     // Function that is called when a user or another contract wants to transfer funds .
>     function transfer(address _to, uint _value, bytes memory _data) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ERC223Token
Line:        160
Source: 
>         ContractReceiver receiver = ContractReceiver(_to);
>         receiver.tokenFallback(msg.sender, _value, _data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Transfer(msg.sender, _to, _value, _data);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ERC223Token
Line:        82
Source: 
>     uint256 public decimals = 18;
>     uint256 _totalSupply = 100000000 * 10 ** (decimals); // 100 million
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ERC223Token
Line:        84
Source: 
>     
>     mapping(address => uint256) balances;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     event Transfer(address indexed _from, address indexed _to, uint256 _value, bytes _data);

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    ERC223Token
Line:        82
Source: 
>     uint256 public decimals = 18;
>     uint256 _totalSupply = 100000000 * 10 ** (decimals); // 100 million
>                            ^^^^^^^^^
>     

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ERC223Token
Line:        160
Source: 
>         ContractReceiver receiver = ContractReceiver(_to);
>         receiver.tokenFallback(msg.sender, _value, _data);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Transfer(msg.sender, _to, _value, _data);

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    ERC223Token
Line:        128
Source: 
>         if(isContract(_to)) {
>             return transferToContract(_to, _value, empty);
>                                                    ^^^^^
>         }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    ERC223Token
Line:        142
Source: 
>         }
>         return (length>0);
>                 ^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ERC223Token
Line:        158
Source: 
>         balances[msg.sender] = balanceOf(msg.sender).sub(_value);
>         balances[_to] = balanceOf(_to).add(_value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ContractReceiver receiver = ContractReceiver(_to);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ERC223Token
Line:        149
Source: 
>         balances[msg.sender] = balanceOf(msg.sender).sub(_value);
>         balances[_to] = balanceOf(_to).add(_value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Transfer(msg.sender, _to, _value, _data);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ERC223Token
Line:        79
Source: 
>    
>     string public symbol = "MYK";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public  name = "Mykonos coin";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ERC223Token
Line:        80
Source: 
>     string public symbol = "MYK";
>     string public  name = "Mykonos coin";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimals = 18;

[0m
