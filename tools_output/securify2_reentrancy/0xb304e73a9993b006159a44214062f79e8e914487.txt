Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Funding
Line:        200
Source: 
> 
>   function SetTRAAddress(address TRAAddress) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.sender == _owner,"Only owners can change the TRA address");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Funding
Line:        207
Source: 
>   // Release 50,000 every month.
>   function ReleaseMonthly() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Check if one months worth of block has passed by

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Funding
Line:        218
Source: 
>   // Release 300,000 after three months
>   function ReleaseThreeMonths() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // Check if one months worth of block has passed by

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Funding
Line:        200
Source: 
> 
>   function SetTRAAddress(address TRAAddress) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.sender == _owner,"Only owners can change the TRA address");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Funding
Line:        214
Source: 
>     _oneMonthBlock = _oneMonthBlock.add(_oneMonthBlock);
>     _TRAContract.transfer(msg.sender,amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Funding
Line:        226
Source: 
>     _threeMonthWithdrawn = true;
>     _TRAContract.transfer(msg.sender,amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Funding
Line:        180
Source: 
>   
>   uint256 public _oneMonthBlock;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public _threeMonthBlock;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Funding
Line:        181
Source: 
>   uint256 public _oneMonthBlock;
>   uint256 public _threeMonthBlock;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public _deployedBlock;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Funding
Line:        182
Source: 
>   uint256 public _threeMonthBlock;
>   uint256 public _deployedBlock;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address public _owner;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Funding
Line:        183
Source: 
>   uint256 public _deployedBlock;
>   address public _owner;
>   ^^^^^^^^^^^^^^^^^^^^^
>   address public _TRAAddress;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Funding
Line:        184
Source: 
>   address public _owner;
>   address public _TRAAddress;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Funding
Line:        186
Source: 
> 
>   bool public _threeMonthWithdrawn;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   TRA public _TRAContract;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Funding
Line:        187
Source: 
>   bool public _threeMonthWithdrawn;
>   TRA public _TRAContract;
>   ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Funding
Line:        200
Source: 
> 
>   function SetTRAAddress(address TRAAddress) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.sender == _owner,"Only owners can change the TRA address");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Funding
Line:        207
Source: 
>   // Release 50,000 every month.
>   function ReleaseMonthly() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Check if one months worth of block has passed by

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Funding
Line:        218
Source: 
>   // Release 300,000 after three months
>   function ReleaseThreeMonths() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   // Check if one months worth of block has passed by

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Funding
Line:        223
Source: 
>     // Calculate 300,000. Make this to 18 decimal places.
>     uint256 amount = 300000 * uint256(10) ** 18;
>                      ^^^^^^
>     // Set the flag to false so that we cannot withdraw 300,000 more than once

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Funding
Line:        214
Source: 
>     _oneMonthBlock = _oneMonthBlock.add(_oneMonthBlock);
>     _TRAContract.transfer(msg.sender,amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Funding
Line:        226
Source: 
>     _threeMonthWithdrawn = true;
>     _TRAContract.transfer(msg.sender,amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Funding
Line:        213
Source: 
>     // Set the next block to be another 5760 blocks ahead
>     _oneMonthBlock = _oneMonthBlock.add(_oneMonthBlock);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _TRAContract.transfer(msg.sender,amount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Funding
Line:        225
Source: 
>     // Set the flag to false so that we cannot withdraw 300,000 more than once
>     _threeMonthWithdrawn = true;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _TRAContract.transfer(msg.sender,amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Funding
Line:        214
Source: 
>     _oneMonthBlock = _oneMonthBlock.add(_oneMonthBlock);
>     _TRAContract.transfer(msg.sender,amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Funding
Line:        226
Source: 
>     _threeMonthWithdrawn = true;
>     _TRAContract.transfer(msg.sender,amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
