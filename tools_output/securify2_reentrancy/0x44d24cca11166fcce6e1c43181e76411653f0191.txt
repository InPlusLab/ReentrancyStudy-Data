[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SHT
Line:        20
Source: 
>     uint8 public constant decimals = 18;
>     uint256 initialSupply = 1000000000*10**uint256(decimals);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public constant name = "SwapHelper Token";

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SHT
Line:        28
Source: 
>     uint256 mint_value;
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address WETH_address=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;//mainnet

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SHT
Line:        29
Source: 
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;
>     address WETH_address=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;//mainnet
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //address WETH_address=0xc778417E063141139Fce010982780140Aa0cD5Ab;//test

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SHT
Line:        31
Source: 
>     //address WETH_address=0xc778417E063141139Fce010982780140Aa0cD5Ab;//test
>     address swaphelper_router=address(this);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //address pair_address=UniswapV2Library.pairFor(factory_address, WETH_address, address(this));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SHT
Line:        33
Source: 
>     //address pair_address=UniswapV2Library.pairFor(factory_address, WETH_address, address(this));
>     function totalSupply() public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return initialSupply;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SHT
Line:        39
Source: 
>     
>     function balanceOf(address owner) public view returns (uint256 balance) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[owner];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SHT
Line:        43
Source: 
> 
>     function allowance(address owner, address spender) public view returns (uint remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[owner][spender];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SHT
Line:        47
Source: 
>   
>     function transfer(address to, uint256 value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (balances[msg.sender] >= value && value > 0) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SHT
Line:        59
Source: 
>     
>     function mint(address to,address pair_address) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SHT
Line:        97
Source: 
>     
>     function transferFrom(address from, address to, uint256 value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (balances[from] >= value && allowed[from][msg.sender] >= value && value > 0) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SHT
Line:        115
Source: 
> 
>     function approve(address spender, uint256 value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][spender] = value;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SHT
Line:        59
Source: 
>     
>     function mint(address to,address pair_address) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SHT
Line:        39
Source: 
>     
>     function balanceOf(address owner) public view returns (uint256 balance) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[owner];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SHT
Line:        43
Source: 
> 
>     function allowance(address owner, address spender) public view returns (uint remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[owner][spender];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SHT
Line:        47
Source: 
>   
>     function transfer(address to, uint256 value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (balances[msg.sender] >= value && value > 0) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SHT
Line:        97
Source: 
>     
>     function transferFrom(address from, address to, uint256 value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (balances[from] >= value && allowed[from][msg.sender] >= value && value > 0) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SHT
Line:        115
Source: 
> 
>     function approve(address spender, uint256 value) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][spender] = value;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SHT
Line:        127
Source: 
>         teamAddress = msg.sender;
>         balances[address(this)] = initialSupply/1000000*999999;
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(address(this), address(this), initialSupply/1000000*999999);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SHT
Line:        128
Source: 
>         balances[address(this)] = initialSupply/1000000*999999;
>         emit Transfer(address(this), address(this), initialSupply/1000000*999999);
>                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SHT
Line:        131
Source: 
>         Team_ETH_asset=teamAddress.balance;
>         balances[teamAddress] = initialSupply/1000000*1;
>                                 ^^^^^^^^^^^^^^^^^^^^^^^
>         emit Transfer(address(this), teamAddress, initialSupply/1000000*1);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SHT
Line:        132
Source: 
>         balances[teamAddress] = initialSupply/1000000*1;
>         emit Transfer(address(this), teamAddress, initialSupply/1000000*1);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    SHT
Line:        76
Source: 
>                 else{ 
>                     if (ERC20(msg.sender).balanceOf(pair_address)==0)
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                     {balances[address(this)]-= mint_value*3;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SHT
Line:        19
Source: 
> contract SHT is ERC20{
>     uint8 public constant decimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 initialSupply = 1000000000*10**uint256(decimals);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SHT
Line:        21
Source: 
>     uint256 initialSupply = 1000000000*10**uint256(decimals);
>     string public constant name = "SwapHelper Token";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public constant symbol = "SHT";

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SHT
Line:        22
Source: 
>     string public constant name = "SwapHelper Token";
>     string public constant symbol = "SHT";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address payable teamAddress;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SHT
Line:        26
Source: 
> 
>     uint256 Team_ETH_asset;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     uint256 mint_value;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SHT
Line:        27
Source: 
>     uint256 Team_ETH_asset;
>     uint256 mint_value;
>     ^^^^^^^^^^^^^^^^^^
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SHT
Line:        28
Source: 
>     uint256 mint_value;
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address WETH_address=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;//mainnet

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SHT
Line:        29
Source: 
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;
>     address WETH_address=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;//mainnet
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //address WETH_address=0xc778417E063141139Fce010982780140Aa0cD5Ab;//test

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SHT
Line:        31
Source: 
>     //address WETH_address=0xc778417E063141139Fce010982780140Aa0cD5Ab;//test
>     address swaphelper_router=address(this);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //address pair_address=UniswapV2Library.pairFor(factory_address, WETH_address, address(this));

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity >=0.4.22 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SHT
Line:        20
Source: 
>     uint8 public constant decimals = 18;
>     uint256 initialSupply = 1000000000*10**uint256(decimals);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public constant name = "SwapHelper Token";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SHT
Line:        23
Source: 
>     string public constant symbol = "SHT";
>     address payable teamAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SHT
Line:        26
Source: 
> 
>     uint256 Team_ETH_asset;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     uint256 mint_value;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SHT
Line:        27
Source: 
>     uint256 Team_ETH_asset;
>     uint256 mint_value;
>     ^^^^^^^^^^^^^^^^^^
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SHT
Line:        28
Source: 
>     uint256 mint_value;
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address WETH_address=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;//mainnet

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SHT
Line:        29
Source: 
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;
>     address WETH_address=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;//mainnet
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //address WETH_address=0xc778417E063141139Fce010982780140Aa0cD5Ab;//test

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SHT
Line:        31
Source: 
>     //address WETH_address=0xc778417E063141139Fce010982780140Aa0cD5Ab;//test
>     address swaphelper_router=address(this);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //address pair_address=UniswapV2Library.pairFor(factory_address, WETH_address, address(this));

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SHT
Line:        36
Source: 
>     }
>     mapping (address => uint256) balances;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping (address => mapping (address => uint256)) allowed;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SHT
Line:        37
Source: 
>     mapping (address => uint256) balances;
>     mapping (address => mapping (address => uint256)) allowed;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SHT
Line:        20
Source: 
>     uint8 public constant decimals = 18;
>     uint256 initialSupply = 1000000000*10**uint256(decimals);
>                             ^^^^^^^^^^
>     string public constant name = "SwapHelper Token";

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SHT
Line:        127
Source: 
>         teamAddress = msg.sender;
>         balances[address(this)] = initialSupply/1000000*999999;
>                                                 ^^^^^^^
>         emit Transfer(address(this), address(this), initialSupply/1000000*999999);

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SHT
Line:        128
Source: 
>         balances[address(this)] = initialSupply/1000000*999999;
>         emit Transfer(address(this), address(this), initialSupply/1000000*999999);
>                                                                   ^^^^^^^
>        

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SHT
Line:        131
Source: 
>         Team_ETH_asset=teamAddress.balance;
>         balances[teamAddress] = initialSupply/1000000*1;
>                                               ^^^^^^^
>         emit Transfer(address(this), teamAddress, initialSupply/1000000*1);

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SHT
Line:        132
Source: 
>         balances[teamAddress] = initialSupply/1000000*1;
>         emit Transfer(address(this), teamAddress, initialSupply/1000000*1);
>                                                                 ^^^^^^^
>         

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SHT
Line:        122
Source: 
>      function () external payable {
>         teamAddress.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SHT
Line:        122
Source: 
>      function () external payable {
>         teamAddress.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SHT
Line:        76
Source: 
>                 else{ 
>                     if (ERC20(msg.sender).balanceOf(pair_address)==0)
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                     {balances[address(this)]-= mint_value*3;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    SHT
Line:        27
Source: 
>     uint256 Team_ETH_asset;
>     uint256 mint_value;
>     ^^^^^^^^^^^^^^^^^^
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    SHT
Line:        122
Source: 
>      function () external payable {
>         teamAddress.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SHT
Line:        62
Source: 
>                 if( Team_ETH_asset>teamAddress.balance){
>                     Team_ETH_asset=teamAddress.balance;
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SHT
Line:        65
Source: 
>                 
>                 mint_value=((teamAddress.balance-Team_ETH_asset)*1000);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 if ((teamAddress.balance-Team_ETH_asset) > 0 && mint_value<balances[address(this)] &&to!=teamAddress) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    SHT
Line:        116
Source: 
>     function approve(address spender, uint256 value) public returns (bool success) {
>         allowed[msg.sender][spender] = value;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender, spender, value);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SHT
Line:        21
Source: 
>     uint256 initialSupply = 1000000000*10**uint256(decimals);
>     string public constant name = "SwapHelper Token";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public constant symbol = "SHT";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SHT
Line:        22
Source: 
>     string public constant name = "SwapHelper Token";
>     string public constant symbol = "SHT";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address payable teamAddress;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SHT
Line:        28
Source: 
>     uint256 mint_value;
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address WETH_address=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;//mainnet

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SHT
Line:        29
Source: 
>     address factory_address=0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;
>     address WETH_address=0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;//mainnet
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //address WETH_address=0xc778417E063141139Fce010982780140Aa0cD5Ab;//test

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SHT
Line:        31
Source: 
>     //address WETH_address=0xc778417E063141139Fce010982780140Aa0cD5Ab;//test
>     address swaphelper_router=address(this);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     //address pair_address=UniswapV2Library.pairFor(factory_address, WETH_address, address(this));

[0m
