Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    ParsiqDistributor
Line:        31
Source: 
> 
>     IERC20TransferMany(token).transferFrom(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       msg.sender,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    ParsiqDistributor
Line:        54
Source: 
> 
>     IERC20TransferMany(token).transferMany(recipients, tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;35mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Conflict
Contract:    ParsiqDistributor
Line:        50
Source: 
>       if (ethers > 0) {
>         payable(recipients[i]).transfer(ethers);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ParsiqDistributor
Line:        19
Source: 
> 
>   function distributeTokensAndEth(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address token,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ParsiqDistributor
Line:        31
Source: 
> 
>     IERC20TransferMany(token).transferFrom(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       msg.sender,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    ParsiqDistributor
Line:        54
Source: 
> 
>     IERC20TransferMany(token).transferMany(recipients, tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    ParsiqDistributor
Line:        50
Source: 
>       if (ethers > 0) {
>         payable(recipients[i]).transfer(ethers);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    ParsiqDistributor
Line:        50
Source: 
>       if (ethers > 0) {
>         payable(recipients[i]).transfer(ethers);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    ParsiqDistributor
Line:        50
Source: 
>       if (ethers > 0) {
>         payable(recipients[i]).transfer(ethers);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    ParsiqDistributor
Line:        50
Source: 
>       if (ethers > 0) {
>         payable(recipients[i]).transfer(ethers);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ParsiqDistributor
Line:        31
Source: 
> 
>     IERC20TransferMany(token).transferFrom(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       msg.sender,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ParsiqDistributor
Line:        54
Source: 
> 
>     IERC20TransferMany(token).transferMany(recipients, tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    ParsiqDistributor
Line:        50
Source: 
>       if (ethers > 0) {
>         payable(recipients[i]).transfer(ethers);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ParsiqDistributor
Line:        59
Source: 
>       require(_status != _ENTERED, "ReentrancyGuard: reentrant call");
>       _status = _ENTERED;
>       ^^^^^^^^^^^^^^^^^^
>       _;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ParsiqDistributor
Line:        61
Source: 
>       _;
>       _status = _NOT_ENTERED;
>       ^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ParsiqDistributor
Line:        31
Source: 
> 
>     IERC20TransferMany(token).transferFrom(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       msg.sender,

[0m
