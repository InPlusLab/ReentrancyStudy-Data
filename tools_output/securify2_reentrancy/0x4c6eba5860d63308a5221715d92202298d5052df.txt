Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DSPause
Line:        117
Source: 
>     {
>         assembly { tag := extcodehash(usr) }
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DSPauseProxy
Line:        50
Source: 
> 
>     function exec(address usr, bytes memory fax)
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DSPause
Line:        97
Source: 
> 
>     function setOwner(address owner) public wait override {
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(owner != address(0), "invalid-params");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DSPause
Line:        102
Source: 
> 
>     function setDelay(uint delay) public wait override {
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _delay = delay;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DSPause
Line:        120
Source: 
> 
>     function plot(address usr, bytes32 tag, bytes memory fax, uint eta)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth override

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DSPause
Line:        127
Source: 
> 
>     function drop(address usr, bytes32 tag, bytes memory fax, uint eta)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth override

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DSPause
Line:        133
Source: 
> 
>     function exec(address usr, bytes32 tag, bytes memory fax, uint eta)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth override

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    DSPauseProxy
Line:        55
Source: 
>         bool ok;
>         (ok, out) = usr.delegatecall(fax);
>                      ^^^^^^^^^^^^^^^^^^^^^
>         require(ok, "ds-pause-delegatecall-error");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DSPause
Line:        102
Source: 
> 
>     function setDelay(uint delay) public wait override {
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _delay = delay;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DSPause
Line:        133
Source: 
> 
>     function exec(address usr, bytes32 tag, bytes memory fax, uint eta)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth override

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DSPauseProxy
Line:        50
Source: 
> 
>     function exec(address usr, bytes memory fax)
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DSPause
Line:        113
Source: 
> 
>     function soul(address usr)
>       ^^^^^^^^^^^^^^^^^^^^^^^^
>         public view override

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DSPause
Line:        120
Source: 
> 
>     function plot(address usr, bytes32 tag, bytes memory fax, uint eta)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth override

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DSPause
Line:        127
Source: 
> 
>     function drop(address usr, bytes32 tag, bytes memory fax, uint eta)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth override

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DSPause
Line:        143
Source: 
> 
>         out = _proxy.exec(usr, fax);
>                 ^^^^^^^^^^^^^^^^^^^^
>         require(_proxy._owner() == address(this), "ds-pause-illegal-storage-change");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DSPause
Line:        144
Source: 
>         out = _proxy.exec(usr, fax);
>         require(_proxy._owner() == address(this), "ds-pause-illegal-storage-change");
>                   ^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DSPauseProxy
Line:        46
Source: 
> contract DSPauseProxy {
>     address public _owner;
>      ^^^^^^^^^^^^^^^^^^^^^
>     modifier auth { require(msg.sender == _owner, "ds-pause-proxy-unauthorized"); _; }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DSPause
Line:        82
Source: 
> 
>     address public _owner;
>       ^^^^^^^^^^^^^^^^^^^^
>     mapping (bytes32 => bool) public _plans;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DSPause
Line:        83
Source: 
>     address public _owner;
>     mapping (bytes32 => bool) public _plans;
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     DSPauseProxy public _proxy;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DSPause
Line:        84
Source: 
>     mapping (bytes32 => bool) public _plans;
>     DSPauseProxy public _proxy;
>       ^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint         public _delay;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DSPause
Line:        85
Source: 
>     DSPauseProxy public _proxy;
>     uint         public _delay;
>       ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DSPause
Line:        144
Source: 
>         out = _proxy.exec(usr, fax);
>         require(_proxy._owner() == address(this), "ds-pause-illegal-storage-change");
>                   ^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DSPause
Line:        143
Source: 
> 
>         out = _proxy.exec(usr, fax);
>                 ^^^^^^^^^^^^^^^^^^^^
>         require(_proxy._owner() == address(this), "ds-pause-illegal-storage-change");

[0m
