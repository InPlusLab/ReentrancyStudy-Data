Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.17. Changing pragma version to 0.5.17....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    XdexStream
Line:        290
Source: 
>      */
>     function hasStream(address who)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    XdexStream
Line:        304
Source: 
>      */
>     function getStreamId(address who, uint256 streamType)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    XdexStream
Line:        394
Source: 
>      */
>     function fundsToStream(
>     ^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 streamId,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    XdexStream
Line:        394
Source: 
>      */
>     function fundsToStream(
>     ^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 streamId,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    XdexStream
Line:        290
Source: 
>      */
>     function hasStream(address who)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    XdexStream
Line:        358
Source: 
>         /* Approve the XHalflife contract to spend. */
>         IERC20(xdex).approve(address(halflife), depositAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    XdexStream
Line:        361
Source: 
>         /* Transfer the tokens to this contract. */
>         IERC20(xdex).transferFrom(msg.sender, address(this), depositAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    XdexStream
Line:        363
Source: 
> 
>         streamId = halflife.createStream(
>                    ^^^^^^^^^^^^^^^^^^^^^^
>             xdex,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    XdexStream
Line:        236
Source: 
>     //unlock ratio is 0.1% for both Voting and Normal Pool
>     uint256 private constant unlockRatio = 1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    XdexStream
Line:        239
Source: 
>     //unlock k block for Voting Pool
>     uint256 private constant unlockKBlocksV = 540;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // key: recipient, value: Locked Stream

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    XdexStream
Line:        244
Source: 
>     //funds for Normal Pool
>     uint256 private constant unlockKBlocksN = 60;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // key: recipient, value: Locked Stream

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    XdexStream
Line:        249
Source: 
>     // non cancelable farm streams
>     bool private constant cancelable = false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    XdexStream
Line:        217
Source: 
> contract XdexStream is ReentrancyGuard {
>     uint256 constant ONE = 10**18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    XdexStream
Line:        255
Source: 
>      */
>     modifier lockStreamExists(address who, uint256 streamType) {
>                               ^^^^^^^^^^^
>         bool found = false;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    XdexStream
Line:        255
Source: 
>      */
>     modifier lockStreamExists(address who, uint256 streamType) {
>                                            ^^^^^^^^^^^^^^^^^^
>         bool found = false;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    XdexStream
Line:        256
Source: 
>     modifier lockStreamExists(address who, uint256 streamType) {
>         bool found = false;
>         ^^^^^^^^^^
>         if (streamType == 0) {

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    XdexStream
Line:        269
Source: 
> 
>     modifier validStreamType(uint256 streamType) {
>                              ^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    XdexStream
Line:        358
Source: 
>         /* Approve the XHalflife contract to spend. */
>         IERC20(xdex).approve(address(halflife), depositAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    XdexStream
Line:        361
Source: 
>         /* Transfer the tokens to this contract. */
>         IERC20(xdex).transferFrom(msg.sender, address(this), depositAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    XdexStream
Line:        363
Source: 
> 
>         streamId = halflife.createStream(
>                    ^^^^^^^^^^^^^^^^^^^^^^
>             xdex,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    XdexStream
Line:        402
Source: 
>         /* Approve the XHalflife contract to spend. */
>         IERC20(xdex).approve(address(halflife), amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    XdexStream
Line:        405
Source: 
>         /* Transfer the tokens to this contract. */
>         IERC20(xdex).transferFrom(msg.sender, address(this), amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    XdexStream
Line:        407
Source: 
> 
>         result = halflife.lazyFundStream(streamId, amount, blockHeightDiff);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        53
Source: 
>         // Any calls to nonReentrant after this point will fail
>         _notEntered = false;
>         ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    XdexStream
Line:        358
Source: 
>         /* Approve the XHalflife contract to spend. */
>         IERC20(xdex).approve(address(halflife), depositAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    XdexStream
Line:        361
Source: 
>         /* Transfer the tokens to this contract. */
>         IERC20(xdex).transferFrom(msg.sender, address(this), depositAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    XdexStream
Line:        402
Source: 
>         /* Approve the XHalflife contract to spend. */
>         IERC20(xdex).approve(address(halflife), amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    XdexStream
Line:        405
Source: 
>         /* Transfer the tokens to this contract. */
>         IERC20(xdex).transferFrom(msg.sender, address(this), amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        29
Source: 
> contract ReentrancyGuard {
>     bool private _notEntered;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    XdexStream
Line:        217
Source: 
> contract XdexStream is ReentrancyGuard {
>     uint256 constant ONE = 10**18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
