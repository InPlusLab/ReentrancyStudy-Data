[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DssSpell20200221
Line:        408
Source: 
>         address _action = action;
>         assembly { _tag := extcodehash(_action) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         tag = _tag;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DssSpell20200221
Line:        393
Source: 
> contract DssSpell20200221 is DSMath {
>     DSPauseAbstract  public pause =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         DSPauseAbstract(0xbE286431454714F511008713973d3B053A2d38f3);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell20200221
Line:        412
Source: 
> 
>     function schedule() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(eta == 0, "spell-already-scheduled");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell20200221
Line:        425
Source: 
> 
>     function cast() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!done, "spell-already-cast");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell20200221
Line:        414
Source: 
>         require(eta == 0, "spell-already-scheduled");
>         eta = add(now, DSPauseAbstract(pause).delay());
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell20200221
Line:        415
Source: 
>         eta = add(now, DSPauseAbstract(pause).delay());
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell20200221
Line:        422
Source: 
>         // https://vote.makerdao.com/polling-proposal/qmaj4fnjeohomnrs8m9cihrfxws4m89bwfu9eh96y8okxw
>         SaiMomAbstract(SAIMOM).setFee(NEW_FEE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell20200221
Line:        428
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OsmAbstract
Line:        106
Source: 
>     // uint16  constant ONE_HOUR = uint16(3600);
>     function ONE_HOUR() public view returns (uint16);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // uint16  public hop = ONE_HOUR;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    JugAbstract
Line:        173
Source: 
>     // uint256 constant ONE = 10 ** 27;
>     function ONE() public view returns (uint256);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function init(bytes32) external;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PotAbstract
Line:        191
Source: 
>     // uint256 public Pie;  // total Savings Dai
>     function Pie() public view returns (uint256);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // uint256 public dsr;  // the Dai Savings Rate

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    VatAbstract
Line:        249
Source: 
>     // uint256 public Line;  // Total Debt Ceiling  [rad]
>     function Line() public view returns (uint256);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // uint256 public live;  // Access Flag

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    FlapAbstract
Line:        289
Source: 
>     // uint256 public ONE;
>     function ONE() public view returns (uint256);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // uint256 public beg;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell20200221
Line:        406
Source: 
>         action = address(new SpellAction());
>         bytes32 _tag;
>         ^^^^^^^^^^^^
>         address _action = action;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell20200221
Line:        407
Source: 
>         bytes32 _tag;
>         address _action = action;
>         ^^^^^^^^^^^^^^^
>         assembly { _tag := extcodehash(_action) }

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DSMath
Line:        32
Source: 
> 
>     uint constant WAD = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant RAY = 10 ** 27;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DSMath
Line:        33
Source: 
>     uint constant WAD = 10 ** 18;
>     uint constant RAY = 10 ** 27;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        342
Source: 
> contract SpellAction is DSMath {
>     uint256 constant RAD = 10 ** 45;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant public PAUSE = 0xbE286431454714F511008713973d3B053A2d38f3;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        352
Source: 
>     address constant public FLAP = 0xdfE0fb1bE2a52CDBf8FB962D5701d7fd0902db9f;
>     uint256 constant NEW_BEG = 1.02E18; // 2%
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpellAction
Line:        361
Source: 
>         // set the global debt ceiling to 183,000,000
>         VatAbstract(VAT).file("Line", mul(183000000, RAD));
>                                           ^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpellAction
Line:        365
Source: 
>         // https://vote.makerdao.com/polling-proposal/qmsm1q1hohyctsgxpbm44fomjoukf1d5g9lmpqraikmeoc
>         VatAbstract(VAT).file("ETH-A", "line", mul(150000000, RAD));
>                                                    ^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpellAction
Line:        373
Source: 
>         // https://vote.makerdao.com/polling-proposal/qmss9hnszwr6egq3xn6gpx4u8bz8cajja56rgtanjev1v8
>         PotAbstract(POT).file("dsr", 1000000002440418608258400030);
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DssSpell20200221
Line:        396
Source: 
>     address constant public SAIMOM = 0xF2C5369cFFb8Ea6284452b0326e326DbFdCb867C;
>     uint256 constant public NEW_FEE = 1000000002877801985002875644; // 9.5%
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address          public action;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DssSpell20200221
Line:        414
Source: 
>         require(eta == 0, "spell-already-scheduled");
>         eta = add(now, DSPauseAbstract(pause).delay());
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        356
Source: 
>         // drip
>         PotAbstract(POT).drip();
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(JUG).drip("ETH-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        357
Source: 
>         PotAbstract(POT).drip();
>         JugAbstract(JUG).drip("ETH-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(JUG).drip("BAT-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        358
Source: 
>         JugAbstract(JUG).drip("ETH-A");
>         JugAbstract(JUG).drip("BAT-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        361
Source: 
>         // set the global debt ceiling to 183,000,000
>         VatAbstract(VAT).file("Line", mul(183000000, RAD));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        365
Source: 
>         // https://vote.makerdao.com/polling-proposal/qmsm1q1hohyctsgxpbm44fomjoukf1d5g9lmpqraikmeoc
>         VatAbstract(VAT).file("ETH-A", "line", mul(150000000, RAD));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        373
Source: 
>         // https://vote.makerdao.com/polling-proposal/qmss9hnszwr6egq3xn6gpx4u8bz8cajja56rgtanjev1v8
>         PotAbstract(POT).file("dsr", 1000000002440418608258400030);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        380
Source: 
>         // https://vote.makerdao.com/polling-proposal/qmtsxrqavtczfsseytpypgqrz6z8zb613ikxwhqjv9ytzz
>         FlapAbstract(FLAP).file("beg", NEW_BEG);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        383
Source: 
>         // Increase the Pause to 24 Hours
>         OsmAbstract(ETH_OSM).rely(OSM_MOM);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         OsmAbstract(BAT_OSM).rely(OSM_MOM);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        384
Source: 
>         OsmAbstract(ETH_OSM).rely(OSM_MOM);
>         OsmAbstract(BAT_OSM).rely(OSM_MOM);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         OsmMomAbstract(OSM_MOM).setAuthority(CHIEF);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        385
Source: 
>         OsmAbstract(BAT_OSM).rely(OSM_MOM);
>         OsmMomAbstract(OSM_MOM).setAuthority(CHIEF);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         OsmMomAbstract(OSM_MOM).setOsm("ETH-A", ETH_OSM);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        386
Source: 
>         OsmMomAbstract(OSM_MOM).setAuthority(CHIEF);
>         OsmMomAbstract(OSM_MOM).setOsm("ETH-A", ETH_OSM);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         OsmMomAbstract(OSM_MOM).setOsm("BAT-A", BAT_OSM);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        387
Source: 
>         OsmMomAbstract(OSM_MOM).setOsm("ETH-A", ETH_OSM);
>         OsmMomAbstract(OSM_MOM).setOsm("BAT-A", BAT_OSM);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         DSPauseAbstract(PAUSE).setDelay(60 * 60 * 24);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        388
Source: 
>         OsmMomAbstract(OSM_MOM).setOsm("BAT-A", BAT_OSM);
>         DSPauseAbstract(PAUSE).setDelay(60 * 60 * 24);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell20200221
Line:        415
Source: 
>         eta = add(now, DSPauseAbstract(pause).delay());
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell20200221
Line:        422
Source: 
>         // https://vote.makerdao.com/polling-proposal/qmaj4fnjeohomnrs8m9cihrfxws4m89bwfu9eh96y8okxw
>         SaiMomAbstract(SAIMOM).setFee(NEW_FEE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell20200221
Line:        428
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DSMath
Line:        10
Source: 
>     function add(uint x, uint y) internal pure returns (uint z) {
>         require((z = x + y) >= x, "ds-math-add-overflow");
>                  ^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DSMath
Line:        13
Source: 
>     function sub(uint x, uint y) internal pure returns (uint z) {
>         require((z = x - y) <= x, "ds-math-sub-underflow");
>                  ^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DSMath
Line:        16
Source: 
>     function mul(uint x, uint y) internal pure returns (uint z) {
>         require(y == 0 || (z = x * y) / y == x, "ds-math-mul-overflow");
>                            ^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DssSpell20200221
Line:        409
Source: 
>         assembly { _tag := extcodehash(_action) }
>         tag = _tag;
>               ^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell20200221
Line:        399
Source: 
>     bytes32          public tag;
>     uint256          public eta;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes            public sig;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell20200221
Line:        401
Source: 
>     bytes            public sig;
>     bool             public done;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell20200221
Line:        414
Source: 
>         require(eta == 0, "spell-already-scheduled");
>         eta = add(now, DSPauseAbstract(pause).delay());
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell20200221
Line:        427
Source: 
>         require(!done, "spell-already-cast");
>         done = true;
>         ^^^^^^^^^^^
>         pause.exec(action, tag, sig, eta);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        356
Source: 
>         // drip
>         PotAbstract(POT).drip();
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(JUG).drip("ETH-A");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        357
Source: 
>         PotAbstract(POT).drip();
>         JugAbstract(JUG).drip("ETH-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(JUG).drip("BAT-A");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        358
Source: 
>         JugAbstract(JUG).drip("ETH-A");
>         JugAbstract(JUG).drip("BAT-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DssSpell20200221
Line:        428
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DSMath
Line:        32
Source: 
> 
>     uint constant WAD = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant RAY = 10 ** 27;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DSMath
Line:        33
Source: 
>     uint constant WAD = 10 ** 18;
>     uint constant RAY = 10 ** 27;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DSMath
Line:        32
Source: 
> 
>     uint constant WAD = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant RAY = 10 ** 27;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DSMath
Line:        33
Source: 
>     uint constant WAD = 10 ** 18;
>     uint constant RAY = 10 ** 27;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DSMath
Line:        32
Source: 
> 
>     uint constant WAD = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint constant RAY = 10 ** 27;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DSMath
Line:        33
Source: 
>     uint constant WAD = 10 ** 18;
>     uint constant RAY = 10 ** 27;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
