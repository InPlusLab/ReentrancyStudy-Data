Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.17. Changing pragma version to 0.5.17....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DecentribeIntegration
Line:        85
Source: 
>     function () external payable{} // needs for divs
>     function setApproval() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         //using idle needs to have aproval before able to get idle tokens

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DecentribeIntegration
Line:        92
Source: 
>     }
>     function mintIdles() public payable {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 ethBalance = address(this).balance;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DecentribeIntegration
Line:        102
Source: 
>     }
>     function divsToHubp1() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         //buy hub bonds

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DecentribeIntegration
Line:        122
Source: 
>     }
>     function currentPrice() public view returns(uint256 price){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _currentPrice = _idle.tokenPrice();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DecentribeIntegration
Line:        126
Source: 
>     }
>     function currentIdleBalance() public view returns(uint256 price){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _currentPrice = _idle.balanceOf(address(this));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DecentribeIntegration
Line:        131
Source: 
>    
>     function transferERCs(address ofToken, uint256 _amount) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == 0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DecentribeIntegration
Line:        135
Source: 
>     }
>     function fetchHubVault() public{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DecentribeIntegration
Line:        145
Source: 
>     }
>     function fetchHubPiggy() public{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DecentribeIntegration
Line:        154
Source: 
>     
>     function upgradeTribe(address payable _tribe) public{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == 0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    DecentribeIntegration
Line:        95
Source: 
>         uint256 deadline = block.timestamp.add(100);
>         _swapDAI.ethToTokenSwapInput.value(ethBalance)(1,deadline);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 myBalance = _dai.balanceOf(address(this));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DecentribeIntegration
Line:        131
Source: 
>    
>     function transferERCs(address ofToken, uint256 _amount) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == 0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DecentribeIntegration
Line:        154
Source: 
>     
>     function upgradeTribe(address payable _tribe) public{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == 0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DecentribeIntegration
Line:        78
Source: 
>     // interfaces
>     UniswapExchangeInterface constant _swapDAI = UniswapExchangeInterface(0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667);// uniswap
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     PlincInterface constant hub_ = PlincInterface(0xd5D10172e8D8B84AC83031c16fE093cba4c84FC6);  // hubplinc

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DecentribeIntegration
Line:        79
Source: 
>     UniswapExchangeInterface constant _swapDAI = UniswapExchangeInterface(0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667);// uniswap
>     PlincInterface constant hub_ = PlincInterface(0xd5D10172e8D8B84AC83031c16fE093cba4c84FC6);  // hubplinc
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IIdleToken constant _idle = IIdleToken(0x78751B12Da02728F467A44eAc40F5cbc16Bd7934);         // idle

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DecentribeIntegration
Line:        80
Source: 
>     PlincInterface constant hub_ = PlincInterface(0xd5D10172e8D8B84AC83031c16fE093cba4c84FC6);  // hubplinc
>     IIdleToken constant _idle = IIdleToken(0x78751B12Da02728F467A44eAc40F5cbc16Bd7934);         // idle
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ERC20Interface constant _dai = ERC20Interface(0x6B175474E89094C44Da98b954EedeAC495271d0F);  //dai

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DecentribeIntegration
Line:        81
Source: 
>     IIdleToken constant _idle = IIdleToken(0x78751B12Da02728F467A44eAc40F5cbc16Bd7934);         // idle
>     ERC20Interface constant _dai = ERC20Interface(0x6B175474E89094C44Da98b954EedeAC495271d0F);  //dai
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DecentribeIntegration
Line:        123
Source: 
>     function currentPrice() public view returns(uint256 price){
>         uint256 _currentPrice = _idle.tokenPrice();
>         ^^^^^^^^^^^^^^^^^^^^^
>         return (_currentPrice);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DecentribeIntegration
Line:        127
Source: 
>     function currentIdleBalance() public view returns(uint256 price){
>         uint256 _currentPrice = _idle.balanceOf(address(this));
>         ^^^^^^^^^^^^^^^^^^^^^
>         return (_currentPrice);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DecentribeIntegration
Line:        137
Source: 
>         
>         uint256 _value = hub_.playerVault(address(this));
>         ^^^^^^^^^^^^^^
>         require(_value >0);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DecentribeIntegration
Line:        147
Source: 
>         
>         uint256 _value = hub_.piggyBank(address(this));
>         ^^^^^^^^^^^^^^
>         require(_value >0);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PlincInterface
Line:        187
Source: 
>     
>     function IdToAdress(uint256 index) external view returns(address);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function nextPlayerID() external view returns(uint256);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DecentribeIntegration
Line:        76
Source: 
>     uint256 public daibalance;// original dai balance
>     address payable tribe; //decentrice distribution pot;
>     ^^^^^^^^^^^^^^^^^^^^^
>     // interfaces

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DecentribeIntegration
Line:        78
Source: 
>     // interfaces
>     UniswapExchangeInterface constant _swapDAI = UniswapExchangeInterface(0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667);// uniswap
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     PlincInterface constant hub_ = PlincInterface(0xd5D10172e8D8B84AC83031c16fE093cba4c84FC6);  // hubplinc

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DecentribeIntegration
Line:        79
Source: 
>     UniswapExchangeInterface constant _swapDAI = UniswapExchangeInterface(0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667);// uniswap
>     PlincInterface constant hub_ = PlincInterface(0xd5D10172e8D8B84AC83031c16fE093cba4c84FC6);  // hubplinc
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IIdleToken constant _idle = IIdleToken(0x78751B12Da02728F467A44eAc40F5cbc16Bd7934);         // idle

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DecentribeIntegration
Line:        80
Source: 
>     PlincInterface constant hub_ = PlincInterface(0xd5D10172e8D8B84AC83031c16fE093cba4c84FC6);  // hubplinc
>     IIdleToken constant _idle = IIdleToken(0x78751B12Da02728F467A44eAc40F5cbc16Bd7934);         // idle
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ERC20Interface constant _dai = ERC20Interface(0x6B175474E89094C44Da98b954EedeAC495271d0F);  //dai

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DecentribeIntegration
Line:        81
Source: 
>     IIdleToken constant _idle = IIdleToken(0x78751B12Da02728F467A44eAc40F5cbc16Bd7934);         // idle
>     ERC20Interface constant _dai = ERC20Interface(0x6B175474E89094C44Da98b954EedeAC495271d0F);  //dai
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DecentribeIntegration
Line:        88
Source: 
>         // aprove idle address, amount to aprove
>         _dai.approve(0x78751B12Da02728F467A44eAc40F5cbc16Bd7934,1000000000000000000000000000000000000000000);
>                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // approve uniswap

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DecentribeIntegration
Line:        90
Source: 
>         // approve uniswap
>         _dai.approve(0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667,1000000000000000000000000000000000000000000);
>                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    DecentribeIntegration
Line:        95
Source: 
>         uint256 deadline = block.timestamp.add(100);
>         _swapDAI.ethToTokenSwapInput.value(ethBalance)(1,deadline);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 myBalance = _dai.balanceOf(address(this));

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    DecentribeIntegration
Line:        120
Source: 
>         // buy bonds
>         hub_.buyBonds.value(ethBalance)(0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DecentribeIntegration
Line:        95
Source: 
>         uint256 deadline = block.timestamp.add(100);
>         _swapDAI.ethToTokenSwapInput.value(ethBalance)(1,deadline);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 myBalance = _dai.balanceOf(address(this));

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DecentribeIntegration
Line:        120
Source: 
>         // buy bonds
>         hub_.buyBonds.value(ethBalance)(0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DecentribeIntegration
Line:        142
Source: 
>         // SEND ETH TO DECENTRIBE POT
>         IDistributableInterface(tribe).distribute.value(_value)();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DecentribeIntegration
Line:        151
Source: 
>          // SEND ETH TO DECENTRIBE POT
>         IDistributableInterface(tribe).distribute.value(_value)();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DecentribeIntegration
Line:        96
Source: 
>         _swapDAI.ethToTokenSwapInput.value(ethBalance)(1,deadline);
>         uint256 myBalance = _dai.balanceOf(address(this));
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256[] memory empty;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DecentribeIntegration
Line:        137
Source: 
>         
>         uint256 _value = hub_.playerVault(address(this));
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_value >0);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DecentribeIntegration
Line:        147
Source: 
>         
>         uint256 _value = hub_.piggyBank(address(this));
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_value >0);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        88
Source: 
>         // aprove idle address, amount to aprove
>         _dai.approve(0x78751B12Da02728F467A44eAc40F5cbc16Bd7934,1000000000000000000000000000000000000000000);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // approve uniswap

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        90
Source: 
>         // approve uniswap
>         _dai.approve(0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667,1000000000000000000000000000000000000000000);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        95
Source: 
>         uint256 deadline = block.timestamp.add(100);
>         _swapDAI.ethToTokenSwapInput.value(ethBalance)(1,deadline);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 myBalance = _dai.balanceOf(address(this));

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        98
Source: 
>         uint256[] memory empty;
>         _idle.mintIdleToken(myBalance,empty);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         daibalance = daibalance.add(myBalance);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        100
Source: 
>         daibalance = daibalance.add(myBalance);
>         previousPrice = _idle.tokenPrice();
>                         ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        108
Source: 
>         uint256 myBalance = daibalance;
>         uint256 idlebalance = _idle.balanceOf(address(this));
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // fetch divs to contract (exitidle)

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        111
Source: 
>         
>         _idle.redeemIdleToken(idlebalance, false,empty);// get all dai
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _idle.mintIdleToken(myBalance,empty);// put back investment

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        112
Source: 
>         _idle.redeemIdleToken(idlebalance, false,empty);// get all dai
>         _idle.mintIdleToken(myBalance,empty);// put back investment
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // swap remaining dai to ether

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        114
Source: 
>         // swap remaining dai to ether
>         uint256 daiBalance = _dai.balanceOf(address(this));
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 deadline = block.timestamp.add(100);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        116
Source: 
>         uint256 deadline = block.timestamp.add(100);
>         _swapDAI.tokenToEthSwapInput(daiBalance,1, deadline) ;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         //

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        120
Source: 
>         // buy bonds
>         hub_.buyBonds.value(ethBalance)(0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        123
Source: 
>     function currentPrice() public view returns(uint256 price){
>         uint256 _currentPrice = _idle.tokenPrice();
>                                 ^^^^^^^^^^^^^^^^^^
>         return (_currentPrice);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        127
Source: 
>     function currentIdleBalance() public view returns(uint256 price){
>         uint256 _currentPrice = _idle.balanceOf(address(this));
>                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return (_currentPrice);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        133
Source: 
>         require(msg.sender == 0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220);
>         ERC20Interface(ofToken).transfer(0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        140
Source: 
>         //require(msg.sender == hubFundAdmin);
>         hub_.vaultToWallet();
>         ^^^^^^^^^^^^^^^^^^^^
>         // SEND ETH TO DECENTRIBE POT

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        142
Source: 
>         // SEND ETH TO DECENTRIBE POT
>         IDistributableInterface(tribe).distribute.value(_value)();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        149
Source: 
>         require(_value >0);
>         hub_.piggyToWallet();
>         ^^^^^^^^^^^^^^^^^^^^
>          // SEND ETH TO DECENTRIBE POT

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        151
Source: 
>          // SEND ETH TO DECENTRIBE POT
>         IDistributableInterface(tribe).distribute.value(_value)();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DecentribeIntegration
Line:        162
Source: 
>     {
>         hub_.setAuto(10);
>         ^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DecentribeIntegration
Line:        98
Source: 
>         uint256[] memory empty;
>         _idle.mintIdleToken(myBalance,empty);
>                                       ^^^^^
>         daibalance = daibalance.add(myBalance);

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DecentribeIntegration
Line:        111
Source: 
>         
>         _idle.redeemIdleToken(idlebalance, false,empty);// get all dai
>                                                  ^^^^^
>         _idle.mintIdleToken(myBalance,empty);// put back investment

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DecentribeIntegration
Line:        74
Source: 
>     // params 
>     uint256 public previousPrice;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public daibalance;// original dai balance

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DecentribeIntegration
Line:        75
Source: 
>     uint256 public previousPrice;
>     uint256 public daibalance;// original dai balance
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     address payable tribe; //decentrice distribution pot;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DecentribeIntegration
Line:        76
Source: 
>     uint256 public daibalance;// original dai balance
>     address payable tribe; //decentrice distribution pot;
>     ^^^^^^^^^^^^^^^^^^^^^
>     // interfaces

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    DecentribeIntegration
Line:        95
Source: 
>         uint256 deadline = block.timestamp.add(100);
>         _swapDAI.ethToTokenSwapInput.value(ethBalance)(1,deadline);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 myBalance = _dai.balanceOf(address(this));

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    DecentribeIntegration
Line:        120
Source: 
>         // buy bonds
>         hub_.buyBonds.value(ethBalance)(0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    DecentribeIntegration
Line:        142
Source: 
>         // SEND ETH TO DECENTRIBE POT
>         IDistributableInterface(tribe).distribute.value(_value)();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    DecentribeIntegration
Line:        151
Source: 
>          // SEND ETH TO DECENTRIBE POT
>         IDistributableInterface(tribe).distribute.value(_value)();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DecentribeIntegration
Line:        99
Source: 
>         _idle.mintIdleToken(myBalance,empty);
>         daibalance = daibalance.add(myBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         previousPrice = _idle.tokenPrice();

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DecentribeIntegration
Line:        100
Source: 
>         daibalance = daibalance.add(myBalance);
>         previousPrice = _idle.tokenPrice();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DecentribeIntegration
Line:        88
Source: 
>         // aprove idle address, amount to aprove
>         _dai.approve(0x78751B12Da02728F467A44eAc40F5cbc16Bd7934,1000000000000000000000000000000000000000000);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // approve uniswap

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DecentribeIntegration
Line:        90
Source: 
>         // approve uniswap
>         _dai.approve(0x2a1530C4C41db0B0b2bB646CB5Eb1A67b7158667,1000000000000000000000000000000000000000000);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DecentribeIntegration
Line:        95
Source: 
>         uint256 deadline = block.timestamp.add(100);
>         _swapDAI.ethToTokenSwapInput.value(ethBalance)(1,deadline);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 myBalance = _dai.balanceOf(address(this));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DecentribeIntegration
Line:        98
Source: 
>         uint256[] memory empty;
>         _idle.mintIdleToken(myBalance,empty);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         daibalance = daibalance.add(myBalance);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DecentribeIntegration
Line:        100
Source: 
>         daibalance = daibalance.add(myBalance);
>         previousPrice = _idle.tokenPrice();
>                         ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DecentribeIntegration
Line:        111
Source: 
>         
>         _idle.redeemIdleToken(idlebalance, false,empty);// get all dai
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _idle.mintIdleToken(myBalance,empty);// put back investment

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DecentribeIntegration
Line:        112
Source: 
>         _idle.redeemIdleToken(idlebalance, false,empty);// get all dai
>         _idle.mintIdleToken(myBalance,empty);// put back investment
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // swap remaining dai to ether

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DecentribeIntegration
Line:        116
Source: 
>         uint256 deadline = block.timestamp.add(100);
>         _swapDAI.tokenToEthSwapInput(daiBalance,1, deadline) ;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         //

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DecentribeIntegration
Line:        133
Source: 
>         require(msg.sender == 0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220);
>         ERC20Interface(ofToken).transfer(0x0B0eFad4aE088a88fFDC50BCe5Fb63c6936b9220, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DecentribeIntegration
Line:        74
Source: 
>     // params 
>     uint256 public previousPrice;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public daibalance;// original dai balance

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    DecentribeIntegration
Line:        94
Source: 
>         uint256 ethBalance = address(this).balance;
>         uint256 deadline = block.timestamp.add(100);
>                            ^^^^^^^^^^^^^^^
>         _swapDAI.ethToTokenSwapInput.value(ethBalance)(1,deadline);

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    DecentribeIntegration
Line:        115
Source: 
>         uint256 daiBalance = _dai.balanceOf(address(this));
>         uint256 deadline = block.timestamp.add(100);
>                            ^^^^^^^^^^^^^^^
>         _swapDAI.tokenToEthSwapInput(daiBalance,1, deadline) ;

[0m
