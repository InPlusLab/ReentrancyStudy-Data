Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DelegationStorage
Line:        30
Source: 
>      */
>     address public implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        423
Source: 
> 
>     function initialize(address _governance, address _regulator) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(governance == msg.sender, "UNAUTHORIZED");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        546
Source: 
> 
>     function exchangeForWantToken(uint256 _shardPoolId, uint256 shardAmount)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        580
Source: 
> 
>     function setVoteLenth(uint256 _voteLenth) external override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == governance, "UNAUTHORIZED");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        597
Source: 
> 
>     function setBuyoutTimes(uint256 _buyoutTimes) external override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == governance, "UNAUTHORIZED");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        602
Source: 
> 
>     function setMarket(address _market) external override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == governance, "UNAUTHORIZED");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        607
Source: 
> 
>     function setRegulator(address _regulator) external override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == governance, "UNAUTHORIZED");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        423
Source: 
> 
>     function initialize(address _governance, address _regulator) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(governance == msg.sender, "UNAUTHORIZED");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        546
Source: 
> 
>     function exchangeForWantToken(uint256 _shardPoolId, uint256 shardAmount)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        580
Source: 
> 
>     function setVoteLenth(uint256 _voteLenth) external override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == governance, "UNAUTHORIZED");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        597
Source: 
> 
>     function setBuyoutTimes(uint256 _buyoutTimes) external override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == governance, "UNAUTHORIZED");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        602
Source: 
> 
>     function setMarket(address _market) external override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == governance, "UNAUTHORIZED");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BuyoutProposals
Line:        607
Source: 
> 
>     function setRegulator(address _regulator) external override {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == governance, "UNAUTHORIZED");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BuyoutProposals
Line:        430
Source: 
> 
>     function createProposal(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _shardPoolId,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BuyoutProposals
Line:        477
Source: 
> 
>     function vote(
>     ^^^^^^^^^^^^^^
>         uint256 _shardPoolId,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BuyoutProposals
Line:        612
Source: 
> 
>     function getProposalsForExactPool(uint256 _shardPoolId)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BuyoutProposals
Line:        430
Source: 
> 
>     function createProposal(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _shardPoolId,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BuyoutProposals
Line:        477
Source: 
> 
>     function vote(
>     ^^^^^^^^^^^^^^
>         uint256 _shardPoolId,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BuyoutProposals
Line:        612
Source: 
> 
>     function getProposalsForExactPool(uint256 _shardPoolId)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BuyoutProposals
Line:        448
Source: 
>         require(
>             !IMarketRegulator(regulator).IsInBlackList(_shardPoolId),
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "ON THE BLACKLIST"

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    IBuyoutProposals
Line:        86
Source: 
>         address submitter
>     ) external virtual returns (uint256 proposalId, uint256 buyoutTimes);
>                                                     ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IMarketRegulator
Line:        10
Source: 
> interface IMarketRegulator {
>     function IsInWhiteList(address wantToken)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IMarketRegulator
Line:        15
Source: 
> 
>     function IsInBlackList(uint256 _shardPoolId)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         external

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        54
Source: 
> 
>     uint256 internal constant max = 100;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        197
Source: 
> 
> pragma solidity >=0.6.0 <0.8.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        58
Source: 
> 
>     mapping(uint256 => uint256) allVotes;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BuyoutProposals
Line:        448
Source: 
>         require(
>             !IMarketRegulator(regulator).IsInBlackList(_shardPoolId),
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "ON THE BLACKLIST"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BuyoutProposals
Line:        490
Source: 
>         uint256 blockHeight = proposals[proposalId].blockHeight;
>         balance = IShardToken(shard).getPriorVotes(voter, blockHeight);
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(balance > 0, "INSUFFICIENT VOTERIGHT");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BuyoutProposals
Line:        532
Source: 
>             votesRejected <= allVotes[proposalId].mul(rejectNeed).div(max) &&
>             !IMarketRegulator(regulator).IsInBlackList(_shardPoolId)
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ) {

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BuyoutProposals
Line:        448
Source: 
>         require(
>             !IMarketRegulator(regulator).IsInBlackList(_shardPoolId),
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "ON THE BLACKLIST"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BuyoutProposals
Line:        490
Source: 
>         uint256 blockHeight = proposals[proposalId].blockHeight;
>         balance = IShardToken(shard).getPriorVotes(voter, blockHeight);
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(balance > 0, "INSUFFICIENT VOTERIGHT");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BuyoutProposals
Line:        532
Source: 
>             votesRejected <= allVotes[proposalId].mul(rejectNeed).div(max) &&
>             !IMarketRegulator(regulator).IsInBlackList(_shardPoolId)
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ) {

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DelegationStorage
Line:        26
Source: 
> contract DelegationStorage {
>     address public governance;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     /**

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    IBuyoutProposalsStorge
Line:        34
Source: 
> contract IBuyoutProposalsStorge is DelegationStorage {
>     address public regulator;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     address public market;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    IBuyoutProposalsStorge
Line:        35
Source: 
>     address public regulator;
>     address public market;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    IBuyoutProposalsStorge
Line:        37
Source: 
> 
>     uint256 public proposolIdCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DelegationStorage
Line:        26
Source: 
> contract DelegationStorage {
>     address public governance;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     /**

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    IBuyoutProposalsStorge
Line:        34
Source: 
> contract IBuyoutProposalsStorge is DelegationStorage {
>     address public regulator;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     address public market;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    IBuyoutProposalsStorge
Line:        35
Source: 
>     address public regulator;
>     address public market;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    IBuyoutProposalsStorge
Line:        37
Source: 
> 
>     uint256 public proposolIdCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    DelegationStorage
Line:        26
Source: 
> contract DelegationStorage {
>     address public governance;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     /**

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    DelegationStorage
Line:        30
Source: 
>      */
>     address public implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    DelegationStorage
Line:        26
Source: 
> contract DelegationStorage {
>     address public governance;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     /**

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    DelegationStorage
Line:        30
Source: 
>      */
>     address public implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        34
Source: 
> contract IBuyoutProposalsStorge is DelegationStorage {
>     address public regulator;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     address public market;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        35
Source: 
>     address public regulator;
>     address public market;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        37
Source: 
> 
>     uint256 public proposolIdCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    DelegationStorage
Line:        30
Source: 
>      */
>     address public implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DelegationStorage
Line:        26
Source: 
> contract DelegationStorage {
>     address public governance;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     /**

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DelegationStorage
Line:        30
Source: 
>      */
>     address public implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DelegationStorage
Line:        26
Source: 
> contract DelegationStorage {
>     address public governance;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     /**

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DelegationStorage
Line:        30
Source: 
>      */
>     address public implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        34
Source: 
> contract IBuyoutProposalsStorge is DelegationStorage {
>     address public regulator;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     address public market;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        35
Source: 
>     address public regulator;
>     address public market;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        37
Source: 
> 
>     uint256 public proposolIdCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        39
Source: 
> 
>     uint256 public voteLenth = 259200;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        41
Source: 
> 
>     mapping(uint256 => uint256) public proposalIds;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        43
Source: 
> 
>     mapping(uint256 => uint256[]) internal proposalsHistory;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        45
Source: 
> 
>     mapping(uint256 => Proposal) public proposals;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        47
Source: 
> 
>     mapping(uint256 => mapping(address => bool)) public voted;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        49
Source: 
> 
>     uint256 public passNeeded = 75;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        52
Source: 
>     // n times higher than the market price to buyout
>     uint256 public buyoutTimes = 100;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        54
Source: 
> 
>     uint256 internal constant max = 100;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        56
Source: 
> 
>     uint256 public buyoutProportion = 15;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    IBuyoutProposalsStorge
Line:        58
Source: 
> 
>     mapping(uint256 => uint256) allVotes;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DelegationStorage
Line:        30
Source: 
>      */
>     address public implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    BuyoutProposals
Line:        453
Source: 
>         proposalIds[_shardPoolId] = proposalId;
>         uint256 timestamp = block.timestamp.add(voteLenth);
>                             ^^^^^^^^^^^^^^^
>         proposals[proposalId] = Proposal({

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    BuyoutProposals
Line:        486
Source: 
>         require(
>             block.timestamp <= proposals[proposalId].voteDeadline,
>             ^^^^^^^^^^^^^^^
>             "EXPIRED"

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    BuyoutProposals
Line:        522
Source: 
>         require(
>             block.timestamp > proposals[proposalId].voteDeadline,
>             ^^^^^^^^^^^^^^^
>             "NOT READY"

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    BuyoutProposals
Line:        453
Source: 
>         proposalIds[_shardPoolId] = proposalId;
>         uint256 timestamp = block.timestamp.add(voteLenth);
>                             ^^^^^^^^^^^^^^^
>         proposals[proposalId] = Proposal({

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    BuyoutProposals
Line:        486
Source: 
>         require(
>             block.timestamp <= proposals[proposalId].voteDeadline,
>             ^^^^^^^^^^^^^^^
>             "EXPIRED"

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    BuyoutProposals
Line:        522
Source: 
>         require(
>             block.timestamp > proposals[proposalId].voteDeadline,
>             ^^^^^^^^^^^^^^^
>             "NOT READY"

[0m
