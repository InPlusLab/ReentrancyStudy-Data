Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Burn
Line:        32
Source: 
>     function setTimer() external {
>         require(timer == 0);
>                 ^^^^^^^^^^
>         require(VSN.balanceOf(address(this)) > 0);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Burn
Line:        33
Source: 
>         require(timer == 0);
>         require(VSN.balanceOf(address(this)) > 0);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         timer = now + 24 hours;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Burn
Line:        42
Source: 
>         require(timer != 0  && now > timer);
>         uint256 balance = VSN.balanceOf(address(this));
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         VSN.transfer(address(0), balance);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Burn
Line:        43
Source: 
>         uint256 balance = VSN.balanceOf(address(this));
>         VSN.transfer(address(0), balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit tokensBurnt(balance);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Burn
Line:        23
Source: 
> 
>     event tokensBurnt(uint256 tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.5.17;
> ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Burn
Line:        19
Source: 
>     
>     ERC20 constant VSN = ERC20(0x456AE45c0CE901E2e7c99c0718031cEc0A7A59Ff);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Burn
Line:        33
Source: 
>         require(timer == 0);
>         require(VSN.balanceOf(address(this)) > 0);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         timer = now + 24 hours;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Burn
Line:        42
Source: 
>         require(timer != 0  && now > timer);
>         uint256 balance = VSN.balanceOf(address(this));
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         VSN.transfer(address(0), balance);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Burn
Line:        43
Source: 
>         uint256 balance = VSN.balanceOf(address(this));
>         VSN.transfer(address(0), balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit tokensBurnt(balance);

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Burn
Line:        21
Source: 
>     
>     uint256 public timer;
>     ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Burn
Line:        34
Source: 
>         require(VSN.balanceOf(address(this)) > 0);
>         timer = now + 24 hours;
>         ^^^^^^^^^^^^^^^^^^^^^^
>     } 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Burn
Line:        45
Source: 
>         emit tokensBurnt(balance);
>         timer = 0;
>         ^^^^^^^^^
>     } 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Burn
Line:        43
Source: 
>         uint256 balance = VSN.balanceOf(address(this));
>         VSN.transfer(address(0), balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit tokensBurnt(balance);

[0m
