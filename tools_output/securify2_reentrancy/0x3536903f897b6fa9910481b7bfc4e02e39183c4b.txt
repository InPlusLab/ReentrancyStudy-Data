Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.8. Changing pragma version to 0.5.8....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CoveredCall
Line:        158
Source: 
> 
> 	function initialize() public {
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 		require(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CoveredCall
Line:        179
Source: 
> 	 */
> 	function updatePremium(uint256 _premiumAmount) public {
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 		// Validate contract state

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CoveredCall
Line:        201
Source: 
> 	 */
> 	function open() public {
>  ^^^^^^^^^^^^^^^^^^^^^^^^
> 		// Validate contract state

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CoveredCall
Line:        223
Source: 
> 	 */
> 	function close() public {
>  ^^^^^^^^^^^^^^^^^^^^^^^^^
> 		// Validate contract state

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    CoveredCall
Line:        248
Source: 
> 	 */
> 	function redeem() public {
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 		// Validate contract state

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    CoveredCall
Line:        179
Source: 
> 	 */
> 	function updatePremium(uint256 _premiumAmount) public {
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 		// Validate contract state

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    CoveredCall
Line:        167
Source: 
> 		// Transfer in the underlying asset to escrow
> 		require(underlyingAssetToken.transferFrom(seller, address(this), underlyingAssetAmount), "Must provide initial escrow token");
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    CoveredCall
Line:        210
Source: 
> 		// Transfer the tokens over to the seller
> 		require(purchasingToken.transferFrom(buyer, seller, premiumAmount), "Must pay premium to open contract");
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    CoveredCall
Line:        233
Source: 
> 		// Transfer out the tokens from escrow
> 		underlyingAssetToken.transfer(seller, underlyingAssetAmount);
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    CoveredCall
Line:        260
Source: 
> 		// Move the payment from the buyer to the seller
> 		require(purchasingToken.transferFrom(buyer, seller, paymentAmount), "Must pay amount * strike to redeem contract");
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    CoveredCall
Line:        263
Source: 
> 		// Pay out the buyer from escrow
> 		underlyingAssetToken.transfer(buyer, underlyingAssetAmount);
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    CoveredCall
Line:        167
Source: 
> 		// Transfer in the underlying asset to escrow
> 		require(underlyingAssetToken.transferFrom(seller, address(this), underlyingAssetAmount), "Must provide initial escrow token");
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    CoveredCall
Line:        210
Source: 
> 		// Transfer the tokens over to the seller
> 		require(purchasingToken.transferFrom(buyer, seller, premiumAmount), "Must pay premium to open contract");
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    CoveredCall
Line:        260
Source: 
> 		// Move the payment from the buyer to the seller
> 		require(purchasingToken.transferFrom(buyer, seller, paymentAmount), "Must pay amount * strike to redeem contract");
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    CoveredCall
Line:        233
Source: 
> 		// Transfer out the tokens from escrow
> 		underlyingAssetToken.transfer(seller, underlyingAssetAmount);
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    CoveredCall
Line:        263
Source: 
> 		// Pay out the buyer from escrow
> 		underlyingAssetToken.transfer(buyer, underlyingAssetAmount);
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    CoveredCall
Line:        111
Source: 
> 
> 	address public buyer; // The address that created the contract
>  ^^^^^^^^^^^^^^^^^^^^
> 	address public seller; // The address that purchased the option

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    CoveredCall
Line:        207
Source: 
> 		// Save off the buyer
> 		buyer = msg.sender;
>   ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    CoveredCall
Line:        213
Source: 
> 		// Set the status to open
> 		currentState = ContractStates.STATUS_OPEN;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    CoveredCall
Line:        233
Source: 
> 		// Transfer out the tokens from escrow
> 		underlyingAssetToken.transfer(seller, underlyingAssetAmount);
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    CoveredCall
Line:        263
Source: 
> 		// Pay out the buyer from escrow
> 		underlyingAssetToken.transfer(buyer, underlyingAssetAmount);
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
