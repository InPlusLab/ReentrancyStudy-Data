[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LiquidityVault
Line:        25
Source: 
>     
>     address blobby = msg.sender;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public lastTradingFeeDistribution;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LiquidityVault
Line:        61
Source: 
>     
>     function getBlobby() public view returns (address){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return blobby;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LiquidityVault
Line:        64
Source: 
>     }
>     function getLiquidityBalance() public view returns (uint256){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return liquidityToken.balanceOf(address(this));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LiquidityVault
Line:        32
Source: 
>  
>     function distributeWeekly(address recipient) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 liquidityBalance = liquidityToken.balanceOf(address(this));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    LiquidityVault
Line:        42
Source: 
>  
>     function startLiquidityMigration(address recipient) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == blobby);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LiquidityVault
Line:        33
Source: 
>     function distributeWeekly(address recipient) external {
>         uint256 liquidityBalance = liquidityToken.balanceOf(address(this));
>                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(lastTradingFeeDistribution + 7 days < now); // Max once a day

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LiquidityVault
Line:        36
Source: 
>         require(msg.sender == blobby);
>         liquidityToken.transfer(recipient, (liquidityBalance / 100));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         lastTradingFeeDistribution = now;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    LiquidityVault
Line:        22
Source: 
>     
>     ERC20 constant ulluToken = ERC20(0x5313E18463Cf2F4b68b392a5b11f94dE5528D01d);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ERC20 constant liquidityToken = ERC20(0xc631b3526DB4A61f81Ab23a0a4E265267dED4e64);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    LiquidityVault
Line:        23
Source: 
>     ERC20 constant ulluToken = ERC20(0x5313E18463Cf2F4b68b392a5b11f94dE5528D01d);
>     ERC20 constant liquidityToken = ERC20(0xc631b3526DB4A61f81Ab23a0a4E265267dED4e64);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        9
Source: 
> 
> pragma solidity ^0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LiquidityVault
Line:        22
Source: 
>     
>     ERC20 constant ulluToken = ERC20(0x5313E18463Cf2F4b68b392a5b11f94dE5528D01d);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ERC20 constant liquidityToken = ERC20(0xc631b3526DB4A61f81Ab23a0a4E265267dED4e64);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LiquidityVault
Line:        23
Source: 
>     ERC20 constant ulluToken = ERC20(0x5313E18463Cf2F4b68b392a5b11f94dE5528D01d);
>     ERC20 constant liquidityToken = ERC20(0xc631b3526DB4A61f81Ab23a0a4E265267dED4e64);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LiquidityVault
Line:        25
Source: 
>     
>     address blobby = msg.sender;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public lastTradingFeeDistribution;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LiquidityVault
Line:        33
Source: 
>     function distributeWeekly(address recipient) external {
>         uint256 liquidityBalance = liquidityToken.balanceOf(address(this));
>                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(lastTradingFeeDistribution + 7 days < now); // Max once a day

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LiquidityVault
Line:        36
Source: 
>         require(msg.sender == blobby);
>         liquidityToken.transfer(recipient, (liquidityBalance / 100));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         lastTradingFeeDistribution = now;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LiquidityVault
Line:        55
Source: 
>         
>         uint256 liquidityBalance = liquidityToken.balanceOf(address(this));
>                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         liquidityToken.transfer(migrationRecipient, liquidityBalance);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LiquidityVault
Line:        56
Source: 
>         uint256 liquidityBalance = liquidityToken.balanceOf(address(this));
>         liquidityToken.transfer(migrationRecipient, liquidityBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LiquidityVault
Line:        65
Source: 
>     function getLiquidityBalance() public view returns (uint256){
>         return liquidityToken.balanceOf(address(this));
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    LiquidityVault
Line:        26
Source: 
>     address blobby = msg.sender;
>     uint256 public lastTradingFeeDistribution;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public migrationLock;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    LiquidityVault
Line:        27
Source: 
>     uint256 public lastTradingFeeDistribution;
>     uint256 public migrationLock;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public migrationRecipient;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    LiquidityVault
Line:        28
Source: 
>     uint256 public migrationLock;
>     address public migrationRecipient;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    LiquidityVault
Line:        36
Source: 
>         require(msg.sender == blobby);
>         liquidityToken.transfer(recipient, (liquidityBalance / 100));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         lastTradingFeeDistribution = now;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    LiquidityVault
Line:        56
Source: 
>         uint256 liquidityBalance = liquidityToken.balanceOf(address(this));
>         liquidityToken.transfer(migrationRecipient, liquidityBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    LiquidityVault
Line:        22
Source: 
>     
>     ERC20 constant ulluToken = ERC20(0x5313E18463Cf2F4b68b392a5b11f94dE5528D01d);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ERC20 constant liquidityToken = ERC20(0xc631b3526DB4A61f81Ab23a0a4E265267dED4e64);

[0m
