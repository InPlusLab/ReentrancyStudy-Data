pragma directive defines a prior version to 0.6.10. Changing pragma version to 0.6.10....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    HasAdmin
Line:        45
Source: 
> 
>   function setAdmin( address payable newadmin ) public isAdmin {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     admin_ = newadmin;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SEXBot
Line:        95
Source: 
> 
>   function make( uint256 _sellunits,
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                  address _selltok,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SEXBot
Line:        125
Source: 
> 
>   function take( bytes32 _id ) public payable {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SEXBot
Line:        168
Source: 
> 
>   function update( bytes32 _id, uint256 _askunits, address _asktok )
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public payable {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SEXBot
Line:        181
Source: 
> 
>   function cancel( bytes32 _id ) public payable {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require( msg.sender == listings[_id].seller, "must be seller" );

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SEXBot
Line:        215
Source: 
> 
>   function setFee( uint8 _which, uint256 _amtwei ) public isAdmin {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (_which == uint8(0)) makerfee = _amtwei;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SEXBot
Line:        223
Source: 
> 
>   function tokenCount() public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return tokenSCAs.length;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SEXBot
Line:        227
Source: 
> 
>   function listToken( address _toksca, bool _stat ) public isAdmin {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     tokenSCAs.push( _toksca );

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SEXBot
Line:        232
Source: 
> 
>   function setClient( string memory _client ) public isAdmin {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     clientIPFSHash = _client;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    HasAdmin
Line:        45
Source: 
> 
>   function setAdmin( address payable newadmin ) public isAdmin {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     admin_ = newadmin;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SEXBot
Line:        215
Source: 
> 
>   function setFee( uint8 _which, uint256 _amtwei ) public isAdmin {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (_which == uint8(0)) makerfee = _amtwei;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SEXBot
Line:        95
Source: 
> 
>   function make( uint256 _sellunits,
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                  address _selltok,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SEXBot
Line:        168
Source: 
> 
>   function update( bytes32 _id, uint256 _askunits, address _asktok )
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   public payable {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SEXBot
Line:        227
Source: 
> 
>   function listToken( address _toksca, bool _stat ) public isAdmin {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     tokenSCAs.push( _toksca );

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SEXBot
Line:        232
Source: 
> 
>   function setClient( string memory _client ) public isAdmin {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     clientIPFSHash = _client;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SEXBot
Line:        252
Source: 
>   // ERC721 (NFT) transfer callback
>   function onERC721Received( address _operator,
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                              address _from,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SEXBot
Line:        110
Source: 
>       ERC20 tok = ERC20(_selltok);
>       require( tok.transferFrom(msg.sender, address(this), _sellunits),
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                "failed transferFrom()" );

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SEXBot
Line:        106
Source: 
>       require( msg.value >= _sellunits + makerfee, "insufficient fee" );
>       admin_.transfer( msg.value - _sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SEXBot
Line:        112
Source: 
>                "failed transferFrom()" );
>       admin_.transfer( msg.value );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SEXBot
Line:        135
Source: 
>       require( msg.value >= listings[_id].askunits + takerfee, "low value" );
>       admin_.transfer( msg.value - listings[_id].askunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SEXBot
Line:        149
Source: 
>     if (listings[_id].selltoken == address(0)) { // ETH
>       msg.sender.transfer( listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SEXBot
Line:        157
Source: 
>     if (listings[_id].asktoken == address(0)) { // ETH
>       listings[_id].seller.transfer( listings[_id].askunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SEXBot
Line:        141
Source: 
>                "transferFrom() failed" );
>       admin_.transfer( msg.value );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SEXBot
Line:        177
Source: 
> 
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Updated( _id );

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SEXBot
Line:        186
Source: 
>     if (listings[_id].selltoken == address(0)) {
>       listings[_id].seller.transfer( listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SEXBot
Line:        194
Source: 
>     listings[_id].seller = address(0); // mark as canceled
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Canceled( _id );

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SEXBot
Line:        93
Source: 
> 
>   bytes4 magic; // required return value from onERC721Received() function
>   ^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    SEXBot
Line:        106
Source: 
>       require( msg.value >= _sellunits + makerfee, "insufficient fee" );
>       admin_.transfer( msg.value - _sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        135
Source: 
>       require( msg.value >= listings[_id].askunits + takerfee, "low value" );
>       admin_.transfer( msg.value - listings[_id].askunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        149
Source: 
>     if (listings[_id].selltoken == address(0)) { // ETH
>       msg.sender.transfer( listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        157
Source: 
>     if (listings[_id].asktoken == address(0)) { // ETH
>       listings[_id].seller.transfer( listings[_id].askunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        186
Source: 
>     if (listings[_id].selltoken == address(0)) {
>       listings[_id].seller.transfer( listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        106
Source: 
>       require( msg.value >= _sellunits + makerfee, "insufficient fee" );
>       admin_.transfer( msg.value - _sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        112
Source: 
>                "failed transferFrom()" );
>       admin_.transfer( msg.value );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        135
Source: 
>       require( msg.value >= listings[_id].askunits + takerfee, "low value" );
>       admin_.transfer( msg.value - listings[_id].askunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        149
Source: 
>     if (listings[_id].selltoken == address(0)) { // ETH
>       msg.sender.transfer( listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        157
Source: 
>     if (listings[_id].asktoken == address(0)) { // ETH
>       listings[_id].seller.transfer( listings[_id].askunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        141
Source: 
>                "transferFrom() failed" );
>       admin_.transfer( msg.value );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        177
Source: 
> 
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Updated( _id );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        186
Source: 
>     if (listings[_id].selltoken == address(0)) {
>       listings[_id].seller.transfer( listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        194
Source: 
>     listings[_id].seller = address(0); // mark as canceled
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Canceled( _id );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        243
Source: 
>   receive() external payable {
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SEXBot
Line:        248
Source: 
>   fallback() external payable {
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        106
Source: 
>       require( msg.value >= _sellunits + makerfee, "insufficient fee" );
>       admin_.transfer( msg.value - _sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        112
Source: 
>                "failed transferFrom()" );
>       admin_.transfer( msg.value );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        135
Source: 
>       require( msg.value >= listings[_id].askunits + takerfee, "low value" );
>       admin_.transfer( msg.value - listings[_id].askunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        149
Source: 
>     if (listings[_id].selltoken == address(0)) { // ETH
>       msg.sender.transfer( listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        157
Source: 
>     if (listings[_id].asktoken == address(0)) { // ETH
>       listings[_id].seller.transfer( listings[_id].askunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        141
Source: 
>                "transferFrom() failed" );
>       admin_.transfer( msg.value );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        177
Source: 
> 
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Updated( _id );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        186
Source: 
>     if (listings[_id].selltoken == address(0)) {
>       listings[_id].seller.transfer( listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        194
Source: 
>     listings[_id].seller = address(0); // mark as canceled
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Canceled( _id );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        243
Source: 
>   receive() external payable {
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SEXBot
Line:        248
Source: 
>   fallback() external payable {
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SEXBot
Line:        110
Source: 
>       ERC20 tok = ERC20(_selltok);
>       require( tok.transferFrom(msg.sender, address(this), _sellunits),
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                "failed transferFrom()" );

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SEXBot
Line:        138
Source: 
>     else {
>       require( ERC20( listings[_id].asktoken )
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                .transferFrom(msg.sender, address(this), listings[_id].askunits),

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SEXBot
Line:        160
Source: 
>     else {
>       ERC20( listings[_id].asktoken )
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       .transfer( listings[_id].seller, listings[_id].askunits );

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SEXBot
Line:        152
Source: 
>     else {
>       ERC20( listings[_id].selltoken )
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       .transfer( msg.sender, listings[_id].sellunits );

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SEXBot
Line:        190
Source: 
>       ERC20 tok = ERC20( listings[_id].selltoken );
>       tok.transfer( msg.sender, listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SEXBot
Line:        260
Source: 
> 
>     ERC721(msg.sender).transferFrom( address(this), admin_, _tokenId );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return magic;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SEXBot
Line:        89
Source: 
>   uint256 public takerfee;
>   uint256 public counter;
>   ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SEXBot
Line:        91
Source: 
> 
>   string public clientIPFSHash;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    SEXBot
Line:        106
Source: 
>       require( msg.value >= _sellunits + makerfee, "insufficient fee" );
>       admin_.transfer( msg.value - _sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    SEXBot
Line:        135
Source: 
>       require( msg.value >= listings[_id].askunits + takerfee, "low value" );
>       admin_.transfer( msg.value - listings[_id].askunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    SEXBot
Line:        149
Source: 
>     if (listings[_id].selltoken == address(0)) { // ETH
>       msg.sender.transfer( listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    SEXBot
Line:        157
Source: 
>     if (listings[_id].asktoken == address(0)) { // ETH
>       listings[_id].seller.transfer( listings[_id].askunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    SEXBot
Line:        112
Source: 
>                "failed transferFrom()" );
>       admin_.transfer( msg.value );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    SEXBot
Line:        141
Source: 
>                "transferFrom() failed" );
>       admin_.transfer( msg.value );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    SEXBot
Line:        243
Source: 
>   receive() external payable {
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    SEXBot
Line:        248
Source: 
>   fallback() external payable {
>     admin_.transfer( msg.value );
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SEXBot
Line:        116
Source: 
>     bytes32 id = keccak256( abi.encodePacked(
>       counter++, now, msg.sender, _sellunits, _selltok, _askunits, _asktok) );
>       ^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SEXBot
Line:        164
Source: 
> 
>     listings[_id].seller = address(0);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Taken( _id, msg.sender );

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SEXBot
Line:        160
Source: 
>     else {
>       ERC20( listings[_id].asktoken )
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       .transfer( listings[_id].seller, listings[_id].askunits );

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SEXBot
Line:        152
Source: 
>     else {
>       ERC20( listings[_id].selltoken )
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       .transfer( msg.sender, listings[_id].sellunits );

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SEXBot
Line:        190
Source: 
>       ERC20 tok = ERC20( listings[_id].selltoken );
>       tok.transfer( msg.sender, listings[_id].sellunits );
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SEXBot
Line:        91
Source: 
> 
>   string public clientIPFSHash;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
