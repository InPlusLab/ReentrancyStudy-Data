[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DssSpell
Line:        157
Source: 
>         address _action = action;
>         assembly { _tag := extcodehash(_action) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         tag = _tag;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DssSpell
Line:        143
Source: 
> contract DssSpell {
>     DSPauseAbstract  public pause =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         DSPauseAbstract(0xbE286431454714F511008713973d3B053A2d38f3);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    DssSpell
Line:        168
Source: 
>         require(now <= expiration, "This contract has expired");
>         require(eta == 0, "This spell has already been scheduled");
>                 ^^^^^^^^
>         eta = now + DSPauseAbstract(pause).delay();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        162
Source: 
> 
>     function description() public view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return SpellAction(action).description();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        166
Source: 
> 
>     function schedule() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(now <= expiration, "This contract has expired");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        173
Source: 
> 
>     function cast() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!done, "spell-already-cast");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        169
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        170
Source: 
>         eta = now + DSPauseAbstract(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        176
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    PotAbstract
Line:        41
Source: 
>     function pie(address) public view returns (uint256);
>     function Pie() public view returns (uint256);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function dsr() public view returns (uint256);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        75
Source: 
>     // This should be modified weekly to provide a summary of the actions
>     string constant public description = "2020-06-12 MakerDAO Executive Spell";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        115
Source: 
> 
>         uint256 ETH_FEE = ONE_PCT_RATE;
>         ^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).file("ETH-A", "duty", ETH_FEE);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        118
Source: 
> 
>         uint256 BAT_FEE = ONE_PCT_RATE;
>         ^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).file("BAT-A", "duty", BAT_FEE);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        121
Source: 
> 
>         uint256 USDC_FEE_A = ONE_SEVENTY_FIVE_PCT_RATE;
>         ^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).file("USDC-A", "duty", USDC_FEE_A);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        124
Source: 
> 
>         uint256 USDC_FEE_B = FIFTY_ONE_PCT_RATE;
>         ^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).file("USDC-B", "duty", USDC_FEE_B);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        127
Source: 
> 
>         uint256 WBTC_FEE = TWO_PCT_RATE;
>         ^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).file("WBTC-A", "duty", WBTC_FEE);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        130
Source: 
> 
>         uint256 TUSD_FEE = ONE_PCT_RATE;
>         ^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).file("TUSD-A", "duty", TUSD_FEE);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        137
Source: 
>         // New Rate: 1%
>         uint256 DSR_RATE = ONE_PCT_RATE;
>         ^^^^^^^^^^^^^^^^
>         PotAbstract(MCD_POT).file("dsr", DSR_RATE);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        155
Source: 
>         action = address(new SpellAction());
>         bytes32 _tag;
>         ^^^^^^^^^^^^
>         address _action = action;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        156
Source: 
>         bytes32 _tag;
>         address _action = action;
>         ^^^^^^^^^^^^^^^
>         assembly { _tag := extcodehash(_action) }

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpellAction
Line:        92
Source: 
>     //
>     uint256 constant public ONE_PCT_RATE = 1000000000315522921573372069;
>                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant public ONE_SEVENTY_FIVE_PCT_RATE = 1000000000550121712943459312;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpellAction
Line:        93
Source: 
>     uint256 constant public ONE_PCT_RATE = 1000000000315522921573372069;
>     uint256 constant public ONE_SEVENTY_FIVE_PCT_RATE = 1000000000550121712943459312;
>                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant public TWO_PCT_RATE = 1000000000627937192491029810;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpellAction
Line:        94
Source: 
>     uint256 constant public ONE_SEVENTY_FIVE_PCT_RATE = 1000000000550121712943459312;
>     uint256 constant public TWO_PCT_RATE = 1000000000627937192491029810;
>                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant public FIFTY_ONE_PCT_RATE = 1000000013067911387605883890;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpellAction
Line:        95
Source: 
>     uint256 constant public TWO_PCT_RATE = 1000000000627937192491029810;
>     uint256 constant public FIFTY_ONE_PCT_RATE = 1000000013067911387605883890;
>                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DssSpell
Line:        169
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        103
Source: 
> 
>         PotAbstract(MCD_POT).drip();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("ETH-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        104
Source: 
>         PotAbstract(MCD_POT).drip();
>         JugAbstract(MCD_JUG).drip("ETH-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("BAT-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        105
Source: 
>         JugAbstract(MCD_JUG).drip("ETH-A");
>         JugAbstract(MCD_JUG).drip("BAT-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("USDC-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        106
Source: 
>         JugAbstract(MCD_JUG).drip("BAT-A");
>         JugAbstract(MCD_JUG).drip("USDC-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("USDC-B");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        107
Source: 
>         JugAbstract(MCD_JUG).drip("USDC-A");
>         JugAbstract(MCD_JUG).drip("USDC-B");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("WBTC-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        108
Source: 
>         JugAbstract(MCD_JUG).drip("USDC-B");
>         JugAbstract(MCD_JUG).drip("WBTC-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("TUSD-A");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        109
Source: 
>         JugAbstract(MCD_JUG).drip("WBTC-A");
>         JugAbstract(MCD_JUG).drip("TUSD-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        116
Source: 
>         uint256 ETH_FEE = ONE_PCT_RATE;
>         JugAbstract(MCD_JUG).file("ETH-A", "duty", ETH_FEE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        119
Source: 
>         uint256 BAT_FEE = ONE_PCT_RATE;
>         JugAbstract(MCD_JUG).file("BAT-A", "duty", BAT_FEE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        122
Source: 
>         uint256 USDC_FEE_A = ONE_SEVENTY_FIVE_PCT_RATE;
>         JugAbstract(MCD_JUG).file("USDC-A", "duty", USDC_FEE_A);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        125
Source: 
>         uint256 USDC_FEE_B = FIFTY_ONE_PCT_RATE;
>         JugAbstract(MCD_JUG).file("USDC-B", "duty", USDC_FEE_B);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        128
Source: 
>         uint256 WBTC_FEE = TWO_PCT_RATE;
>         JugAbstract(MCD_JUG).file("WBTC-A", "duty", WBTC_FEE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        131
Source: 
>         uint256 TUSD_FEE = ONE_PCT_RATE;
>         JugAbstract(MCD_JUG).file("TUSD-A", "duty", TUSD_FEE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        138
Source: 
>         uint256 DSR_RATE = ONE_PCT_RATE;
>         PotAbstract(MCD_POT).file("dsr", DSR_RATE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        163
Source: 
>     function description() public view returns (string memory) {
>         return SpellAction(action).description();
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        170
Source: 
>         eta = now + DSPauseAbstract(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        176
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DssSpell
Line:        158
Source: 
>         assembly { _tag := extcodehash(_action) }
>         tag = _tag;
>               ^^^^
>         expiration = now + 30 days;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell
Line:        147
Source: 
>     bytes32          public tag;
>     uint256          public eta;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes            public sig;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell
Line:        150
Source: 
>     uint256          public expiration;
>     bool             public done;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell
Line:        169
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell
Line:        175
Source: 
>         require(!done, "spell-already-cast");
>         done = true;
>         ^^^^^^^^^^^
>         pause.exec(action, tag, sig, eta);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        103
Source: 
> 
>         PotAbstract(MCD_POT).drip();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("ETH-A");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        104
Source: 
>         PotAbstract(MCD_POT).drip();
>         JugAbstract(MCD_JUG).drip("ETH-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("BAT-A");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        105
Source: 
>         JugAbstract(MCD_JUG).drip("ETH-A");
>         JugAbstract(MCD_JUG).drip("BAT-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("USDC-A");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        106
Source: 
>         JugAbstract(MCD_JUG).drip("BAT-A");
>         JugAbstract(MCD_JUG).drip("USDC-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("USDC-B");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        107
Source: 
>         JugAbstract(MCD_JUG).drip("USDC-A");
>         JugAbstract(MCD_JUG).drip("USDC-B");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("WBTC-A");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        108
Source: 
>         JugAbstract(MCD_JUG).drip("USDC-B");
>         JugAbstract(MCD_JUG).drip("WBTC-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).drip("TUSD-A");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SpellAction
Line:        109
Source: 
>         JugAbstract(MCD_JUG).drip("WBTC-A");
>         JugAbstract(MCD_JUG).drip("TUSD-A");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DssSpell
Line:        176
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        75
Source: 
>     // This should be modified weekly to provide a summary of the actions
>     string constant public description = "2020-06-12 MakerDAO Executive Spell";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        98
Source: 
>     // decimals & precision
>     uint256 constant public MILLION             = 10 ** 6;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant public RAD                 = 10 ** 45;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        99
Source: 
>     uint256 constant public MILLION             = 10 ** 6;
>     uint256 constant public RAD                 = 10 ** 45;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
