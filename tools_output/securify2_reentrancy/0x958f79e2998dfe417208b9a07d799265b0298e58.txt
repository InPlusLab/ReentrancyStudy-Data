Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    InitializableOwnable
Line:        173
Source: 
> 
>     function initOwner(address newOwner) public notInitialized {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _INITIALIZED_ = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    InitializableOwnable
Line:        178
Source: 
> 
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferPrepared(_OWNER_, newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    InitializableOwnable
Line:        183
Source: 
> 
>     function claimOwnership() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _NEW_OWNER_, "INVALID_CLAIM");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    InitializableOwnable
Line:        178
Source: 
> 
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferPrepared(_OWNER_, newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    InitializableOwnable
Line:        183
Source: 
> 
>     function claimOwnership() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _NEW_OWNER_, "INVALID_CLAIM");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DODOApproveProxy
Line:        241
Source: 
> 
>     function unlockAddProxy(address newDodoProxy) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _TIMELOCK_ = block.timestamp + _TIMELOCK_DURATION_;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DODOApproveProxy
Line:        257
Source: 
> 
>     function removeDODOProxy (address oldDodoProxy) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _IS_ALLOWED_PROXY_[oldDodoProxy] = false;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    InitializableOwnable
Line:        173
Source: 
> 
>     function initOwner(address newOwner) public notInitialized {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _INITIALIZED_ = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    InitializableOwnable
Line:        178
Source: 
> 
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferPrepared(_OWNER_, newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    InitializableOwnable
Line:        183
Source: 
> 
>     function claimOwnership() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _NEW_OWNER_, "INVALID_CLAIM");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    InitializableOwnable
Line:        173
Source: 
> 
>     function initOwner(address newOwner) public notInitialized {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _INITIALIZED_ = true;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    InitializableOwnable
Line:        178
Source: 
> 
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferPrepared(_OWNER_, newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    InitializableOwnable
Line:        173
Source: 
> 
>     function initOwner(address newOwner) public notInitialized {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _INITIALIZED_ = true;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    InitializableOwnable
Line:        178
Source: 
> 
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferPrepared(_OWNER_, newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DODOApproveProxy
Line:        235
Source: 
> 
>     function init(address owner, address[] memory proxies) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         initOwner(owner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    InitializableOwnable
Line:        173
Source: 
> 
>     function initOwner(address newOwner) public notInitialized {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _INITIALIZED_ = true;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    InitializableOwnable
Line:        178
Source: 
> 
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferPrepared(_OWNER_, newOwner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DODOApproveProxy
Line:        241
Source: 
> 
>     function unlockAddProxy(address newDodoProxy) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _TIMELOCK_ = block.timestamp + _TIMELOCK_DURATION_;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DODOApproveProxy
Line:        257
Source: 
> 
>     function removeDODOProxy (address oldDodoProxy) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _IS_ALLOWED_PROXY_[oldDodoProxy] = false;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DODOApproveProxy
Line:        261
Source: 
>     
>     function claimTokens(
>     ^^^^^^^^^^^^^^^^^^^^^
>         address token,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DODOApproveProxy
Line:        276
Source: 
> 
>     function isAllowedProxy(address _proxy) external view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _IS_ALLOWED_PROXY_[_proxy];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DODOMigrationBSC
Line:        311
Source: 
> 
>     function lock(uint256 amount, address mintToBscAccount) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IDODOApproveProxy(_DODO_APPROVE_PROXY_).claimTokens(

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DODOMigrationBSC
Line:        312
Source: 
>     function lock(uint256 amount, address mintToBscAccount) external {
>         IDODOApproveProxy(_DODO_APPROVE_PROXY_).claimTokens(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _ETH_DODO_TOKEN_,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DODOMigrationBSC
Line:        325
Source: 
>         balances[unlockTo] = balances[unlockTo].sub(amount);
>         IERC20(_ETH_DODO_TOKEN_).transfer(unlockTo, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Unlock(unlockTo, amount);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableOwnable
Line:        149
Source: 
> contract InitializableOwnable {
>     address public _OWNER_;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     address public _NEW_OWNER_;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableOwnable
Line:        150
Source: 
>     address public _OWNER_;
>     address public _NEW_OWNER_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool internal _INITIALIZED_;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    InitializableOwnable
Line:        151
Source: 
>     address public _NEW_OWNER_;
>     bool internal _INITIALIZED_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOApproveProxy
Line:        217
Source: 
>     uint256 private constant _TIMELOCK_DURATION_ = 3 days;
>     mapping (address => bool) public _IS_ALLOWED_PROXY_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public _TIMELOCK_;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOApproveProxy
Line:        218
Source: 
>     mapping (address => bool) public _IS_ALLOWED_PROXY_;
>     uint256 public _TIMELOCK_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public _PENDING_ADD_DODO_PROXY_;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOApproveProxy
Line:        219
Source: 
>     uint256 public _TIMELOCK_;
>     address public _PENDING_ADD_DODO_PROXY_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public immutable _DODO_APPROVE_;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOApproveProxy
Line:        220
Source: 
>     address public _PENDING_ADD_DODO_PROXY_;
>     address public immutable _DODO_APPROVE_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOMigrationBSC
Line:        295
Source: 
> 
>     address public immutable _ETH_DODO_TOKEN_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public immutable _DODO_APPROVE_PROXY_;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOMigrationBSC
Line:        296
Source: 
>     address public immutable _ETH_DODO_TOKEN_;
>     address public immutable _DODO_APPROVE_PROXY_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => uint256) internal balances;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DODOApproveProxy
Line:        268
Source: 
>         require(_IS_ALLOWED_PROXY_[msg.sender], "DODOApproveProxy:Access restricted");
>         IDODOApprove(_DODO_APPROVE_).claimTokens(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             token,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DODOMigrationBSC
Line:        312
Source: 
>     function lock(uint256 amount, address mintToBscAccount) external {
>         IDODOApproveProxy(_DODO_APPROVE_PROXY_).claimTokens(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _ETH_DODO_TOKEN_,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DODOMigrationBSC
Line:        325
Source: 
>         balances[unlockTo] = balances[unlockTo].sub(amount);
>         IERC20(_ETH_DODO_TOKEN_).transfer(unlockTo, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Unlock(unlockTo, amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableOwnable
Line:        149
Source: 
> contract InitializableOwnable {
>     address public _OWNER_;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     address public _NEW_OWNER_;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableOwnable
Line:        150
Source: 
>     address public _OWNER_;
>     address public _NEW_OWNER_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool internal _INITIALIZED_;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableOwnable
Line:        151
Source: 
>     address public _NEW_OWNER_;
>     bool internal _INITIALIZED_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableOwnable
Line:        149
Source: 
> contract InitializableOwnable {
>     address public _OWNER_;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     address public _NEW_OWNER_;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableOwnable
Line:        150
Source: 
>     address public _OWNER_;
>     address public _NEW_OWNER_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool internal _INITIALIZED_;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableOwnable
Line:        151
Source: 
>     address public _NEW_OWNER_;
>     bool internal _INITIALIZED_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DODOApproveProxy
Line:        218
Source: 
>     mapping (address => bool) public _IS_ALLOWED_PROXY_;
>     uint256 public _TIMELOCK_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public _PENDING_ADD_DODO_PROXY_;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DODOApproveProxy
Line:        219
Source: 
>     uint256 public _TIMELOCK_;
>     address public _PENDING_ADD_DODO_PROXY_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public immutable _DODO_APPROVE_;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableOwnable
Line:        149
Source: 
> contract InitializableOwnable {
>     address public _OWNER_;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     address public _NEW_OWNER_;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableOwnable
Line:        150
Source: 
>     address public _OWNER_;
>     address public _NEW_OWNER_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool internal _INITIALIZED_;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    InitializableOwnable
Line:        151
Source: 
>     address public _NEW_OWNER_;
>     bool internal _INITIALIZED_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    InitializableOwnable
Line:        174
Source: 
>     function initOwner(address newOwner) public notInitialized {
>         _INITIALIZED_ = true;
>         ^^^^^^^^^^^^^^^^^^^^
>         _OWNER_ = newOwner;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    InitializableOwnable
Line:        175
Source: 
>         _INITIALIZED_ = true;
>         _OWNER_ = newOwner;
>         ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    InitializableOwnable
Line:        174
Source: 
>     function initOwner(address newOwner) public notInitialized {
>         _INITIALIZED_ = true;
>         ^^^^^^^^^^^^^^^^^^^^
>         _OWNER_ = newOwner;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    InitializableOwnable
Line:        175
Source: 
>         _INITIALIZED_ = true;
>         _OWNER_ = newOwner;
>         ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DODOApproveProxy
Line:        238
Source: 
>         for(uint i = 0; i < proxies.length; i++) 
>             _IS_ALLOWED_PROXY_[proxies[i]] = true;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    InitializableOwnable
Line:        174
Source: 
>     function initOwner(address newOwner) public notInitialized {
>         _INITIALIZED_ = true;
>         ^^^^^^^^^^^^^^^^^^^^
>         _OWNER_ = newOwner;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    InitializableOwnable
Line:        175
Source: 
>         _INITIALIZED_ = true;
>         _OWNER_ = newOwner;
>         ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DODOMigrationBSC
Line:        325
Source: 
>         balances[unlockTo] = balances[unlockTo].sub(amount);
>         IERC20(_ETH_DODO_TOKEN_).transfer(unlockTo, amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Unlock(unlockTo, amount);

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    DODOApproveProxy
Line:        242
Source: 
>     function unlockAddProxy(address newDodoProxy) public onlyOwner {
>         _TIMELOCK_ = block.timestamp + _TIMELOCK_DURATION_;
>                      ^^^^^^^^^^^^^^^
>         _PENDING_ADD_DODO_PROXY_ = newDodoProxy;

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    DODOApproveProxy
Line:        225
Source: 
>         require(
>             _TIMELOCK_ <= block.timestamp,
>                           ^^^^^^^^^^^^^^^
>             "SetProxy is timelocked"

[0m
