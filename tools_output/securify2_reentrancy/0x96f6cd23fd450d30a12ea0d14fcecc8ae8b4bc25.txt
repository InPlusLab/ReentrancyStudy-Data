[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DssSpell
Line:        482
Source: 
>         address _action = action;
>         assembly { _tag := extcodehash(_action) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         tag = _tag;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DssSpell
Line:        461
Source: 
> contract DssSpell {
>     DSPauseAbstract public pause =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         DSPauseAbstract(0xbE286431454714F511008713973d3B053A2d38f3);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    DssSpell
Line:        497
Source: 
>         require(now <= expiration, "This contract has expired");
>         require(eta == 0, "This spell has already been scheduled");
>                 ^^^^^^^^
>         eta = now + DSPauseAbstract(pause).delay();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        495
Source: 
> 
>     function schedule() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(now <= expiration, "This contract has expired");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        502
Source: 
> 
>     function cast() public officeHours {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!done, "spell-already-cast");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        498
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        499
Source: 
>         eta = now + DSPauseAbstract(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        505
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    VatAbstract
Line:        280
Source: 
>     function vice() external view returns (uint256);
>     function Line() external view returns (uint256);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function live() external view returns (uint256);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        474
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/community/6a97b8f1f145d86b2ea898826cd3232a5abc7c1d/governance/votes/Executive%20vote%20-%20October%2016%2C%202020.md -q -O - 2>/dev/null)"
>     string constant public description =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         "2020-10-16 MakerDAO Executive Spell | Hash: 0xbaf455a1f3360f0d9f9941f79626e38344c5c58e96c4d2cf03461995fa1fe913";

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        480
Source: 
>         action = address(new SpellAction());
>         bytes32 _tag;
>         ^^^^^^^^^^^^
>         address _action = action;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        481
Source: 
>         bytes32 _tag;
>         address _action = action;
>         ^^^^^^^^^^^^^^^
>         assembly { _tag := extcodehash(_action) }

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> // hevm: flattened sources of src/DssSpell.sol
> pragma solidity =0.5.12 >0.4.13 >=0.4.23 >=0.5.12;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        335
Source: 
> 
>     address constant MCD_VAT         = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_CAT         = 0xa5679C04fc3d9d8b0AaB1F0ab83555b301cA70Ea;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        336
Source: 
>     address constant MCD_VAT         = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;
>     address constant MCD_CAT         = 0xa5679C04fc3d9d8b0AaB1F0ab83555b301cA70Ea;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_JUG         = 0x19c0976f590D67707E62397C87829d896Dc0f1F1;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        337
Source: 
>     address constant MCD_CAT         = 0xa5679C04fc3d9d8b0AaB1F0ab83555b301cA70Ea;
>     address constant MCD_JUG         = 0x19c0976f590D67707E62397C87829d896Dc0f1F1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_SPOT        = 0x65C79fcB50Ca1594B025960e539eD7A9a6D434A3;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        338
Source: 
>     address constant MCD_JUG         = 0x19c0976f590D67707E62397C87829d896Dc0f1F1;
>     address constant MCD_SPOT        = 0x65C79fcB50Ca1594B025960e539eD7A9a6D434A3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_POT         = 0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        339
Source: 
>     address constant MCD_SPOT        = 0x65C79fcB50Ca1594B025960e539eD7A9a6D434A3;
>     address constant MCD_POT         = 0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_END         = 0xaB14d3CE3F733CACB76eC2AbE7d2fcb00c99F3d5;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        340
Source: 
>     address constant MCD_POT         = 0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7;
>     address constant MCD_END         = 0xaB14d3CE3F733CACB76eC2AbE7d2fcb00c99F3d5;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant FLIPPER_MOM     = 0xc4bE7F74Ee3743bDEd8E0fA218ee5cf06397f472;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        341
Source: 
>     address constant MCD_END         = 0xaB14d3CE3F733CACB76eC2AbE7d2fcb00c99F3d5;
>     address constant FLIPPER_MOM     = 0xc4bE7F74Ee3743bDEd8E0fA218ee5cf06397f472;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant OSM_MOM         = 0x76416A4d5190d071bfed309861527431304aA14f;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        342
Source: 
>     address constant FLIPPER_MOM     = 0xc4bE7F74Ee3743bDEd8E0fA218ee5cf06397f472;
>     address constant OSM_MOM         = 0x76416A4d5190d071bfed309861527431304aA14f;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant ILK_REGISTRY    = 0x8b4ce5DCbb01e0e1f0521cd8dCfb31B308E52c24;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        343
Source: 
>     address constant OSM_MOM         = 0x76416A4d5190d071bfed309861527431304aA14f;
>     address constant ILK_REGISTRY    = 0x8b4ce5DCbb01e0e1f0521cd8dCfb31B308E52c24;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant CHAINLOG        = 0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        344
Source: 
>     address constant ILK_REGISTRY    = 0x8b4ce5DCbb01e0e1f0521cd8dCfb31B308E52c24;
>     address constant CHAINLOG        = 0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        347
Source: 
>     // ETH-B specific addresses
>     address constant ETH            = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_JOIN_ETH_B = 0x08638eF1A205bE6762A8b935F5da9b700Cf7322c;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        348
Source: 
>     address constant ETH            = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;
>     address constant MCD_JOIN_ETH_B = 0x08638eF1A205bE6762A8b935F5da9b700Cf7322c;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_FLIP_ETH_B = 0xD499d71bE9e9E5D236A07ac562F7B6CeacCa624c;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        349
Source: 
>     address constant MCD_JOIN_ETH_B = 0x08638eF1A205bE6762A8b935F5da9b700Cf7322c;
>     address constant MCD_FLIP_ETH_B = 0xD499d71bE9e9E5D236A07ac562F7B6CeacCa624c;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant PIP_ETH        = 0x81FE72B5A8d1A857d176C3E7d5Bd2679A9B85763; // OSM

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        350
Source: 
>     address constant MCD_FLIP_ETH_B = 0xD499d71bE9e9E5D236A07ac562F7B6CeacCa624c;
>     address constant PIP_ETH        = 0x81FE72B5A8d1A857d176C3E7d5Bd2679A9B85763; // OSM
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        353
Source: 
>     // Decimals & precision
>     uint256 constant THOUSAND = 10 ** 3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant MILLION  = 10 ** 6;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        354
Source: 
>     uint256 constant THOUSAND = 10 ** 3;
>     uint256 constant MILLION  = 10 ** 6;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant WAD      = 10 ** 18;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        355
Source: 
>     uint256 constant MILLION  = 10 ** 6;
>     uint256 constant WAD      = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant RAY      = 10 ** 27;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        356
Source: 
>     uint256 constant WAD      = 10 ** 18;
>     uint256 constant RAY      = 10 ** 27;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant RAD      = 10 ** 45;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        357
Source: 
>     uint256 constant RAY      = 10 ** 27;
>     uint256 constant RAD      = 10 ** 45;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        367
Source: 
>     //    https://ipfs.io/ipfs/QmefQMseb3AiTapiAKKexdKHig8wroKuZbmLtPLv4u2YwW
>     uint256 constant         SIX_PCT_RATE = 1000000001847694957439350562;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DssSpell
Line:        488
Source: 
>     modifier officeHours {
>         uint day = (now / 1 days + 3) % 7;
>         ^^^^^^^^
>         require(day < 5, "Can only be cast on a weekday");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DssSpell
Line:        490
Source: 
>         require(day < 5, "Can only be cast on a weekday");
>         uint hour = now / 1 hours % 24;
>         ^^^^^^^^^
>         require(hour >= 14 && hour < 21, "Outside office hours");

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SpellAction
Line:        367
Source: 
>     //    https://ipfs.io/ipfs/QmefQMseb3AiTapiAKKexdKHig8wroKuZbmLtPLv4u2YwW
>     uint256 constant         SIX_PCT_RATE = 1000000001847694957439350562;
>                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        378
Source: 
>         // Sanity checks
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).vat() == MCD_VAT, "join-vat-not-match");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).ilk() == ilk, "join-ilk-not-match");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        379
Source: 
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).vat() == MCD_VAT, "join-vat-not-match");
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).ilk() == ilk, "join-ilk-not-match");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).gem() == ETH, "join-gem-not-match");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        380
Source: 
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).ilk() == ilk, "join-ilk-not-match");
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).gem() == ETH, "join-gem-not-match");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).dec() == 18, "join-dec-not-match");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        381
Source: 
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).gem() == ETH, "join-gem-not-match");
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).dec() == 18, "join-dec-not-match");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(FlipAbstract(MCD_FLIP_ETH_B).vat() == MCD_VAT, "flip-vat-not-match");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        382
Source: 
>         require(GemJoinAbstract(MCD_JOIN_ETH_B).dec() == 18, "join-dec-not-match");
>         require(FlipAbstract(MCD_FLIP_ETH_B).vat() == MCD_VAT, "flip-vat-not-match");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(FlipAbstract(MCD_FLIP_ETH_B).cat() == MCD_CAT, "flip-cat-not-match");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        383
Source: 
>         require(FlipAbstract(MCD_FLIP_ETH_B).vat() == MCD_VAT, "flip-vat-not-match");
>         require(FlipAbstract(MCD_FLIP_ETH_B).cat() == MCD_CAT, "flip-cat-not-match");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(FlipAbstract(MCD_FLIP_ETH_B).ilk() == ilk, "flip-ilk-not-match");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        384
Source: 
>         require(FlipAbstract(MCD_FLIP_ETH_B).cat() == MCD_CAT, "flip-cat-not-match");
>         require(FlipAbstract(MCD_FLIP_ETH_B).ilk() == ilk, "flip-ilk-not-match");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DssSpell
Line:        498
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        387
Source: 
>         // Add the new flip and join to the Chainlog
>         ChainlogAbstract(CHAINLOG).setAddress("MCD_JOIN_ETH_B", MCD_JOIN_ETH_B);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ChainlogAbstract(CHAINLOG).setAddress("MCD_FLIP_ETH_B", MCD_FLIP_ETH_B);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        388
Source: 
>         ChainlogAbstract(CHAINLOG).setAddress("MCD_JOIN_ETH_B", MCD_JOIN_ETH_B);
>         ChainlogAbstract(CHAINLOG).setAddress("MCD_FLIP_ETH_B", MCD_FLIP_ETH_B);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         ChainlogAbstract(CHAINLOG).setVersion("1.1.3");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        389
Source: 
>         ChainlogAbstract(CHAINLOG).setAddress("MCD_FLIP_ETH_B", MCD_FLIP_ETH_B);
>         ChainlogAbstract(CHAINLOG).setVersion("1.1.3");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        392
Source: 
>         // Set the TOKEN PIP in the Spotter
>         SpotAbstract(MCD_SPOT).file(ilk, "pip", PIP_ETH);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        395
Source: 
>         // Set the TOKEN-LETTER Flipper in the Cat
>         CatAbstract(MCD_CAT).file(ilk, "flip", MCD_FLIP_ETH_B);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        398
Source: 
>         // Init TOKEN-LETTER ilk in Vat & Jug
>         VatAbstract(MCD_VAT).init(ilk);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         JugAbstract(MCD_JUG).init(ilk);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        399
Source: 
>         VatAbstract(MCD_VAT).init(ilk);
>         JugAbstract(MCD_JUG).init(ilk);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        402
Source: 
>         // Allow TOKEN-LETTER Join to modify Vat registry
>         VatAbstract(MCD_VAT).rely(MCD_JOIN_ETH_B);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Allow the TOKEN-LETTER Flipper to reduce the Cat litterbox on deal()

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        404
Source: 
>         // Allow the TOKEN-LETTER Flipper to reduce the Cat litterbox on deal()
>         CatAbstract(MCD_CAT).rely(MCD_FLIP_ETH_B);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Allow Cat to kick auctions in TOKEN-LETTER Flipper

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        406
Source: 
>         // Allow Cat to kick auctions in TOKEN-LETTER Flipper
>         FlipAbstract(MCD_FLIP_ETH_B).rely(MCD_CAT);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Allow End to yank auctions in TOKEN-LETTER Flipper

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        408
Source: 
>         // Allow End to yank auctions in TOKEN-LETTER Flipper
>         FlipAbstract(MCD_FLIP_ETH_B).rely(MCD_END);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Allow FlipperMom to access to the TOKEN-LETTER Flipper

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        410
Source: 
>         // Allow FlipperMom to access to the TOKEN-LETTER Flipper
>         FlipAbstract(MCD_FLIP_ETH_B).rely(FLIPPER_MOM);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Disallow Cat to kick auctions in TOKEN-LETTER Flipper

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        429
Source: 
>         // !!!!!!!! Only if PIP_TOKEN = Osm
>         OsmMomAbstract(OSM_MOM).setOsm(ilk, PIP_ETH);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        432
Source: 
>         // Set the global debt ceiling
>         VatAbstract(MCD_VAT).file("Line", 1476 * MILLION * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set the TOKEN-LETTER debt ceiling

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        434
Source: 
>         // Set the TOKEN-LETTER debt ceiling
>         VatAbstract(MCD_VAT).file(ilk, "line", 20 * MILLION * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set the TOKEN-LETTER dust

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        436
Source: 
>         // Set the TOKEN-LETTER dust
>         VatAbstract(MCD_VAT).file(ilk, "dust", 100 * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set the Lot size

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        438
Source: 
>         // Set the Lot size
>         CatAbstract(MCD_CAT).file(ilk, "dunk", 50 * THOUSAND * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set the TOKEN-LETTER liquidation penalty (e.g. 13% => X = 113)

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        440
Source: 
>         // Set the TOKEN-LETTER liquidation penalty (e.g. 13% => X = 113)
>         CatAbstract(MCD_CAT).file(ilk, "chop", 113 * WAD / 100);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set the TOKEN-LETTER stability fee (e.g. 1% = 1000000000315522921573372069)

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        442
Source: 
>         // Set the TOKEN-LETTER stability fee (e.g. 1% = 1000000000315522921573372069)
>         JugAbstract(MCD_JUG).file(ilk, "duty", SIX_PCT_RATE);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set the TOKEN-LETTER percentage between bids (e.g. 3% => X = 103)

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        444
Source: 
>         // Set the TOKEN-LETTER percentage between bids (e.g. 3% => X = 103)
>         FlipAbstract(MCD_FLIP_ETH_B).file("beg", 103 * WAD / 100);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set the TOKEN-LETTER time max time between bids

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        446
Source: 
>         // Set the TOKEN-LETTER time max time between bids
>         FlipAbstract(MCD_FLIP_ETH_B).file("ttl", 6 hours);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set the TOKEN-LETTER max auction duration to

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        448
Source: 
>         // Set the TOKEN-LETTER max auction duration to
>         FlipAbstract(MCD_FLIP_ETH_B).file("tau", 6 hours);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Set the TOKEN-LETTER min collateralization ratio (e.g. 150% => X = 150)

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        450
Source: 
>         // Set the TOKEN-LETTER min collateralization ratio (e.g. 150% => X = 150)
>         SpotAbstract(MCD_SPOT).file(ilk, "mat", 130 * RAY / 100);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        453
Source: 
>         // Update TOKEN-LETTER spot value in Vat
>         SpotAbstract(MCD_SPOT).poke(ilk);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        456
Source: 
>         // Add new ilk to the IlkRegistry
>         IlkRegistryAbstract(ILK_REGISTRY).add(MCD_JOIN_ETH_B);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        499
Source: 
>         eta = now + DSPauseAbstract(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        505
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DssSpell
Line:        483
Source: 
>         assembly { _tag := extcodehash(_action) }
>         tag = _tag;
>               ^^^^
>         expiration = now + 30 days;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell
Line:        465
Source: 
>     bytes32         public tag;
>     uint256         public eta;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes           public sig;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell
Line:        468
Source: 
>     uint256         public expiration;
>     bool            public done;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell
Line:        498
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell
Line:        504
Source: 
>         require(!done, "spell-already-cast");
>         done = true;
>         ^^^^^^^^^^^
>         pause.exec(action, tag, sig, eta);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DssSpell
Line:        505
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        339
Source: 
>     address constant MCD_SPOT        = 0x65C79fcB50Ca1594B025960e539eD7A9a6D434A3;
>     address constant MCD_POT         = 0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant MCD_END         = 0xaB14d3CE3F733CACB76eC2AbE7d2fcb00c99F3d5;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DssSpell
Line:        474
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/community/6a97b8f1f145d86b2ea898826cd3232a5abc7c1d/governance/votes/Executive%20vote%20-%20October%2016%2C%202020.md -q -O - 2>/dev/null)"
>     string constant public description =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         "2020-10-16 MakerDAO Executive Spell | Hash: 0xbaf455a1f3360f0d9f9941f79626e38344c5c58e96c4d2cf03461995fa1fe913";

[0m
