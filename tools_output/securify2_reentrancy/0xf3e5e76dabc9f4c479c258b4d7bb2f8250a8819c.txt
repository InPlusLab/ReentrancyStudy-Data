[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        195
Source: 
>     function fetchReturnData() internal pure returns (bool success){
>         assembly {
>         ^^^^^^^^^^
>             switch returndatasize()

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Utils
Line:        248
Source: 
>         /// implementation: https://github.com/ethereum/solidity/issues/2884
>         assembly {
>         ^^^^^^^^^^
>             // Pointer to next free memory slot

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    PartnerRegistry
Line:        450
Source: 
>         bytes20 targetBytes = bytes20(target);
>         assembly {
>         ^^^^^^^^^^
>             let clone := mload(0x40)

[0m
[0;33mSeverity:    LOW
Pattern:     Benign Reentrancy
Description: Reentrancy is equivalent with two consecutive calls of
             the function
Type:        Warning
Contract:    PartnerRegistry
Line:        427
Source: 
>         Partner newPartner = Partner(createClone());
>         newPartner.init(companyBeneficiary, companyPercentage, partnerBeneficiary, partnerPercentage);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         partnerContracts[address(newPartner)] = true;

[0m
[0;33mSeverity:    LOW
Pattern:     Benign Reentrancy
Description: Reentrancy is equivalent with two consecutive calls of
             the function
Type:        Warning
Contract:    PartnerRegistry
Line:        439
Source: 
>         Partner newPartner = Partner(createClone());
>         newPartner.init(_companyBeneficiary, _companyPercentage, partnerBeneficiary, partnerPercentage);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         partnerContracts[address(newPartner)] = true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Partner
Line:        375
Source: 
>     ) public {
>         require(companyBeneficiary == address(0x0) && partnerBeneficiary == address(0x0));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         companyBeneficiary = _companyBeneficiary;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Partner
Line:        387
Source: 
>         for(uint256 index = 0; index<tokens.length; index++){
>             uint256 balance = tokens[index] == Utils.eth_address()? address(this).balance : ERC20(tokens[index]).balanceOf(address(this));
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             uint256 partnerAmount = SafeMath.div(SafeMath.mul(balance, partnerPercentage), getTotalFeePercentage());

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Partner
Line:        390
Source: 
>             uint256 companyAmount = balance - partnerAmount;
>             if(tokens[index] == Utils.eth_address()){
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 partnerBeneficiary.transfer(partnerAmount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        86
Source: 
>     // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522
>     if (_a == 0) {
>         ^^^^^^^
>       return 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        91
Source: 
>     uint256 c = _a * _b;
>     require(c / _a == _b);
>             ^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        49
Source: 
>    */
>   function renounceOwnership() public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit OwnershipRenounced(owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        58
Source: 
>    */
>   function transferOwnership(address payable _newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(_newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Partner
Line:        369
Source: 
> 
>     function init(
>     ^^^^^^^^^^^^^^
>         address payable _companyBeneficiary,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Partner
Line:        382
Source: 
> 
>     function payout(
>     ^^^^^^^^^^^^^^^^
>         address[] memory tokens

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        49
Source: 
>    */
>   function renounceOwnership() public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit OwnershipRenounced(owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        58
Source: 
>    */
>   function transferOwnership(address payable _newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(_newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PartnerRegistry
Line:        444
Source: 
> 
>     function deletePartner(address _partnerAddress) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         partnerContracts[_partnerAddress] = false;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PartnerRegistry
Line:        459
Source: 
> 
>     function isValidPartner(address partnerContract) public view returns(bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return partnerContracts[partnerContract];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    PartnerRegistry
Line:        463
Source: 
> 
>     function updateCompanyInfo(address payable newCompanyBeneficiary, uint256 newCompanyPercentage) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         companyBeneficiary = newCompanyBeneficiary;

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Partner
Line:        391
Source: 
>             if(tokens[index] == Utils.eth_address()){
>                 partnerBeneficiary.transfer(partnerAmount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 companyBeneficiary.transfer(companyAmount);

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Partner
Line:        392
Source: 
>                 partnerBeneficiary.transfer(partnerAmount);
>                 companyBeneficiary.transfer(companyAmount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        174
Source: 
>     function safeTransfer(address _tokenAddress, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transfer(address,uint256)", _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Partner
Line:        387
Source: 
>         for(uint256 index = 0; index<tokens.length; index++){
>             uint256 balance = tokens[index] == Utils.eth_address()? address(this).balance : ERC20(tokens[index]).balanceOf(address(this));
>                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             uint256 partnerAmount = SafeMath.div(SafeMath.mul(balance, partnerPercentage), getTotalFeePercentage());

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        174
Source: 
>     function safeTransfer(address _tokenAddress, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transfer(address,uint256)", _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        181
Source: 
>     function safeTransferFrom(address _tokenAddress, address _from, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transferFrom(address,address,uint256)", _from, _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer From failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        188
Source: 
>     function safeApprove(address _tokenAddress, address _spender, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("approve(address,uint256)", _spender, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success,  "Approve failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        174
Source: 
>     function safeTransfer(address _tokenAddress, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transfer(address,uint256)", _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        181
Source: 
>     function safeTransferFrom(address _tokenAddress, address _from, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transferFrom(address,address,uint256)", _from, _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer From failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        188
Source: 
>     function safeApprove(address _tokenAddress, address _spender, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("approve(address,uint256)", _spender, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success,  "Approve failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        174
Source: 
>     function safeTransfer(address _tokenAddress, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transfer(address,uint256)", _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        181
Source: 
>     function safeTransferFrom(address _tokenAddress, address _from, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transferFrom(address,address,uint256)", _from, _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer From failed");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        188
Source: 
>     function safeApprove(address _tokenAddress, address _spender, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("approve(address,uint256)", _spender, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success,  "Approve failed");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        58
Source: 
>    */
>   function transferOwnership(address payable _newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(_newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Partner
Line:        369
Source: 
> 
>     function init(
>     ^^^^^^^^^^^^^^
>         address payable _companyBeneficiary,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        58
Source: 
>    */
>   function transferOwnership(address payable _newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(_newOwner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PartnerRegistry
Line:        425
Source: 
> 
>     function registerPartner(address payable partnerBeneficiary, uint256 partnerPercentage) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Partner newPartner = Partner(createClone());

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PartnerRegistry
Line:        432
Source: 
> 
>     function overrideRegisterPartner(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address payable _companyBeneficiary,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PartnerRegistry
Line:        444
Source: 
> 
>     function deletePartner(address _partnerAddress) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         partnerContracts[_partnerAddress] = false;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PartnerRegistry
Line:        459
Source: 
> 
>     function isValidPartner(address partnerContract) public view returns(bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return partnerContracts[partnerContract];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    PartnerRegistry
Line:        463
Source: 
> 
>     function updateCompanyInfo(address payable newCompanyBeneficiary, uint256 newCompanyPercentage) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         companyBeneficiary = newCompanyBeneficiary;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Utils
Line:        228
Source: 
>     function precision() internal pure returns (uint256) { return PRECISION; }
>     function max_qty() internal pure returns (uint256) { return MAX_QTY; }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function max_rate() internal pure returns (uint256) { return MAX_RATE; }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Utils
Line:        229
Source: 
>     function max_qty() internal pure returns (uint256) { return MAX_QTY; }
>     function max_rate() internal pure returns (uint256) { return MAX_RATE; }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function max_decimals() internal pure returns (uint256) { return MAX_DECIMALS; }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Utils
Line:        230
Source: 
>     function max_rate() internal pure returns (uint256) { return MAX_RATE; }
>     function max_decimals() internal pure returns (uint256) { return MAX_DECIMALS; }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function eth_decimals() internal pure returns (uint256) { return ETH_DECIMALS; }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Utils
Line:        231
Source: 
>     function max_decimals() internal pure returns (uint256) { return MAX_DECIMALS; }
>     function eth_decimals() internal pure returns (uint256) { return ETH_DECIMALS; }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function max_uint() internal pure returns (uint256) { return MAX_UINT; }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Utils
Line:        232
Source: 
>     function eth_decimals() internal pure returns (uint256) { return ETH_DECIMALS; }
>     function max_uint() internal pure returns (uint256) { return MAX_UINT; }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function eth_address() internal pure returns (address) { return ETH_ADDRESS; }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Utils
Line:        233
Source: 
>     function max_uint() internal pure returns (uint256) { return MAX_UINT; }
>     function eth_address() internal pure returns (address) { return ETH_ADDRESS; }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    PartnerRegistry
Line:        411
Source: 
> 
>     address target;
>     ^^^^^^^^^^^^^^
>     mapping(address => bool) partnerContracts;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    PartnerRegistry
Line:        412
Source: 
>     address target;
>     mapping(address => bool) partnerContracts;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address payable public companyBeneficiary;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Partner
Line:        391
Source: 
>             if(tokens[index] == Utils.eth_address()){
>                 partnerBeneficiary.transfer(partnerAmount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 companyBeneficiary.transfer(companyAmount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    Partner
Line:        392
Source: 
>                 partnerBeneficiary.transfer(partnerAmount);
>                 companyBeneficiary.transfer(companyAmount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    Partner
Line:        391
Source: 
>             if(tokens[index] == Utils.eth_address()){
>                 partnerBeneficiary.transfer(partnerAmount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 companyBeneficiary.transfer(companyAmount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    Partner
Line:        392
Source: 
>                 partnerBeneficiary.transfer(partnerAmount);
>                 companyBeneficiary.transfer(companyAmount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Partner
Line:        391
Source: 
>             if(tokens[index] == Utils.eth_address()){
>                 partnerBeneficiary.transfer(partnerAmount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 companyBeneficiary.transfer(companyAmount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Partner
Line:        392
Source: 
>                 partnerBeneficiary.transfer(partnerAmount);
>                 companyBeneficiary.transfer(companyAmount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Partner
Line:        387
Source: 
>         for(uint256 index = 0; index<tokens.length; index++){
>             uint256 balance = tokens[index] == Utils.eth_address()? address(this).balance : ERC20(tokens[index]).balanceOf(address(this));
>                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             uint256 partnerAmount = SafeMath.div(SafeMath.mul(balance, partnerPercentage), getTotalFeePercentage());

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PartnerRegistry
Line:        427
Source: 
>         Partner newPartner = Partner(createClone());
>         newPartner.init(companyBeneficiary, companyPercentage, partnerBeneficiary, partnerPercentage);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         partnerContracts[address(newPartner)] = true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    PartnerRegistry
Line:        439
Source: 
>         Partner newPartner = Partner(createClone());
>         newPartner.init(_companyBeneficiary, _companyPercentage, partnerBeneficiary, partnerPercentage);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         partnerContracts[address(newPartner)] = true;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Partner
Line:        357
Source: 
> 
>     address payable public partnerBeneficiary;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public partnerPercentage; //This is out of 1 ETH, e.g. 0.5 ETH is 50% of the fee

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Partner
Line:        358
Source: 
>     address payable public partnerBeneficiary;
>     uint256 public partnerPercentage; //This is out of 1 ETH, e.g. 0.5 ETH is 50% of the fee
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Partner
Line:        360
Source: 
> 
>     uint256 public companyPercentage;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address payable public companyBeneficiary;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Partner
Line:        361
Source: 
>     uint256 public companyPercentage;
>     address payable public companyBeneficiary;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        218
Source: 
> 
>     uint256 constant internal PRECISION = (10**18);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        219
Source: 
>     uint256 constant internal PRECISION = (10**18);
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        220
Source: 
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_DECIMALS = 18;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        221
Source: 
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     uint256 constant internal MAX_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal ETH_DECIMALS = 18;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        222
Source: 
>     uint256 constant internal MAX_DECIMALS = 18;
>     uint256 constant internal ETH_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_UINT = 2**256-1;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        223
Source: 
>     uint256 constant internal ETH_DECIMALS = 18;
>     uint256 constant internal MAX_UINT = 2**256-1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant internal ETH_ADDRESS = address(0x0);

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        224
Source: 
>     uint256 constant internal MAX_UINT = 2**256-1;
>     address constant internal ETH_ADDRESS = address(0x0);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        218
Source: 
> 
>     uint256 constant internal PRECISION = (10**18);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        219
Source: 
>     uint256 constant internal PRECISION = (10**18);
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        220
Source: 
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_DECIMALS = 18;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        221
Source: 
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     uint256 constant internal MAX_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal ETH_DECIMALS = 18;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        222
Source: 
>     uint256 constant internal MAX_DECIMALS = 18;
>     uint256 constant internal ETH_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_UINT = 2**256-1;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        223
Source: 
>     uint256 constant internal ETH_DECIMALS = 18;
>     uint256 constant internal MAX_UINT = 2**256-1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant internal ETH_ADDRESS = address(0x0);

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        224
Source: 
>     uint256 constant internal MAX_UINT = 2**256-1;
>     address constant internal ETH_ADDRESS = address(0x0);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        218
Source: 
> 
>     uint256 constant internal PRECISION = (10**18);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        219
Source: 
>     uint256 constant internal PRECISION = (10**18);
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        220
Source: 
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_DECIMALS = 18;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        221
Source: 
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     uint256 constant internal MAX_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal ETH_DECIMALS = 18;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        222
Source: 
>     uint256 constant internal MAX_DECIMALS = 18;
>     uint256 constant internal ETH_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_UINT = 2**256-1;

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        223
Source: 
>     uint256 constant internal ETH_DECIMALS = 18;
>     uint256 constant internal MAX_UINT = 2**256-1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant internal ETH_ADDRESS = address(0x0);

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    Utils
Line:        224
Source: 
>     uint256 constant internal MAX_UINT = 2**256-1;
>     address constant internal ETH_ADDRESS = address(0x0);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    Partner
Line:        391
Source: 
>             if(tokens[index] == Utils.eth_address()){
>                 partnerBeneficiary.transfer(partnerAmount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 companyBeneficiary.transfer(companyAmount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    Partner
Line:        392
Source: 
>                 partnerBeneficiary.transfer(partnerAmount);
>                 companyBeneficiary.transfer(companyAmount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Partner
Line:        376
Source: 
>         require(companyBeneficiary == address(0x0) && partnerBeneficiary == address(0x0));
>         companyBeneficiary = _companyBeneficiary;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         companyPercentage = _companyPercentage;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Partner
Line:        377
Source: 
>         companyBeneficiary = _companyBeneficiary;
>         companyPercentage = _companyPercentage;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         partnerBeneficiary = _partnerBeneficiary;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Partner
Line:        378
Source: 
>         companyPercentage = _companyPercentage;
>         partnerBeneficiary = _partnerBeneficiary;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         partnerPercentage = _partnerPercentage;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Partner
Line:        379
Source: 
>         partnerBeneficiary = _partnerBeneficiary;
>         partnerPercentage = _partnerPercentage;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    PartnerRegistry
Line:        428
Source: 
>         newPartner.init(companyBeneficiary, companyPercentage, partnerBeneficiary, partnerPercentage);
>         partnerContracts[address(newPartner)] = true;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit PartnerRegistered(address(msg.sender), partnerBeneficiary, address(newPartner));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        174
Source: 
>     function safeTransfer(address _tokenAddress, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transfer(address,uint256)", _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        177
Source: 
> 
>         return fetchReturnData();
>                ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        181
Source: 
>     function safeTransferFrom(address _tokenAddress, address _from, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transferFrom(address,address,uint256)", _from, _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer From failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        184
Source: 
> 
>         return fetchReturnData();
>                ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        188
Source: 
>     function safeApprove(address _tokenAddress, address _spender, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("approve(address,uint256)", _spender, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success,  "Approve failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        191
Source: 
> 
>         return fetchReturnData();
>                ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        294
Source: 
>         return (
>             ERC20(tokenAddress).allowance(tokenOwner, addressToAllow) >= tokenAmount &&
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             ERC20(tokenAddress).balanceOf(tokenOwner) >= tokenAmount

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        295
Source: 
>             ERC20(tokenAddress).allowance(tokenOwner, addressToAllow) >= tokenAmount &&
>             ERC20(tokenAddress).balanceOf(tokenOwner) >= tokenAmount
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        327
Source: 
>     function calcDestAmount(ERC20 src, ERC20 dest, uint srcAmount, uint rate) internal returns (uint) {
>         return calcDstQty(srcAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        327
Source: 
>     function calcDestAmount(ERC20 src, ERC20 dest, uint srcAmount, uint rate) internal returns (uint) {
>         return calcDstQty(srcAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        331
Source: 
>     function calcSrcAmount(ERC20 src, ERC20 dest, uint destAmount, uint rate) internal returns (uint) {
>         return calcSrcQty(destAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        331
Source: 
>     function calcSrcAmount(ERC20 src, ERC20 dest, uint destAmount, uint rate) internal returns (uint) {
>         return calcSrcQty(destAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        181
Source: 
>     function safeTransferFrom(address _tokenAddress, address _from, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transferFrom(address,address,uint256)", _from, _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer From failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        184
Source: 
> 
>         return fetchReturnData();
>                ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        188
Source: 
>     function safeApprove(address _tokenAddress, address _spender, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("approve(address,uint256)", _spender, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success,  "Approve failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        191
Source: 
> 
>         return fetchReturnData();
>                ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        294
Source: 
>         return (
>             ERC20(tokenAddress).allowance(tokenOwner, addressToAllow) >= tokenAmount &&
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             ERC20(tokenAddress).balanceOf(tokenOwner) >= tokenAmount

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        295
Source: 
>             ERC20(tokenAddress).allowance(tokenOwner, addressToAllow) >= tokenAmount &&
>             ERC20(tokenAddress).balanceOf(tokenOwner) >= tokenAmount
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        327
Source: 
>     function calcDestAmount(ERC20 src, ERC20 dest, uint srcAmount, uint rate) internal returns (uint) {
>         return calcDstQty(srcAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        327
Source: 
>     function calcDestAmount(ERC20 src, ERC20 dest, uint srcAmount, uint rate) internal returns (uint) {
>         return calcDstQty(srcAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        331
Source: 
>     function calcSrcAmount(ERC20 src, ERC20 dest, uint destAmount, uint rate) internal returns (uint) {
>         return calcSrcQty(destAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        331
Source: 
>     function calcSrcAmount(ERC20 src, ERC20 dest, uint destAmount, uint rate) internal returns (uint) {
>         return calcSrcQty(destAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        174
Source: 
>     function safeTransfer(address _tokenAddress, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transfer(address,uint256)", _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        177
Source: 
> 
>         return fetchReturnData();
>                ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        181
Source: 
>     function safeTransferFrom(address _tokenAddress, address _from, address _to, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("transferFrom(address,address,uint256)", _from, _to, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Transfer From failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        184
Source: 
> 
>         return fetchReturnData();
>                ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        188
Source: 
>     function safeApprove(address _tokenAddress, address _spender, uint256 _value) internal returns (bool success) {
>         (success,) = _tokenAddress.call(abi.encodeWithSignature("approve(address,uint256)", _spender, _value));
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success,  "Approve failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ERC20SafeTransfer
Line:        191
Source: 
> 
>         return fetchReturnData();
>                ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        294
Source: 
>         return (
>             ERC20(tokenAddress).allowance(tokenOwner, addressToAllow) >= tokenAmount &&
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             ERC20(tokenAddress).balanceOf(tokenOwner) >= tokenAmount

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        295
Source: 
>             ERC20(tokenAddress).allowance(tokenOwner, addressToAllow) >= tokenAmount &&
>             ERC20(tokenAddress).balanceOf(tokenOwner) >= tokenAmount
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        327
Source: 
>     function calcDestAmount(ERC20 src, ERC20 dest, uint srcAmount, uint rate) internal returns (uint) {
>         return calcDstQty(srcAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        327
Source: 
>     function calcDestAmount(ERC20 src, ERC20 dest, uint srcAmount, uint rate) internal returns (uint) {
>         return calcDstQty(srcAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        331
Source: 
>     function calcSrcAmount(ERC20 src, ERC20 dest, uint destAmount, uint rate) internal returns (uint) {
>         return calcSrcQty(destAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Utils
Line:        331
Source: 
>     function calcSrcAmount(ERC20 src, ERC20 dest, uint destAmount, uint rate) internal returns (uint) {
>         return calcSrcQty(destAmount, getDecimals(address(src)), getDecimals(address(dest)), rate);
>                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        218
Source: 
> 
>     uint256 constant internal PRECISION = (10**18);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        219
Source: 
>     uint256 constant internal PRECISION = (10**18);
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        220
Source: 
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_DECIMALS = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        221
Source: 
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     uint256 constant internal MAX_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal ETH_DECIMALS = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        222
Source: 
>     uint256 constant internal MAX_DECIMALS = 18;
>     uint256 constant internal ETH_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_UINT = 2**256-1;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        223
Source: 
>     uint256 constant internal ETH_DECIMALS = 18;
>     uint256 constant internal MAX_UINT = 2**256-1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant internal ETH_ADDRESS = address(0x0);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        224
Source: 
>     uint256 constant internal MAX_UINT = 2**256-1;
>     address constant internal ETH_ADDRESS = address(0x0);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        218
Source: 
> 
>     uint256 constant internal PRECISION = (10**18);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        219
Source: 
>     uint256 constant internal PRECISION = (10**18);
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        220
Source: 
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_DECIMALS = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        221
Source: 
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     uint256 constant internal MAX_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal ETH_DECIMALS = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        222
Source: 
>     uint256 constant internal MAX_DECIMALS = 18;
>     uint256 constant internal ETH_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_UINT = 2**256-1;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        223
Source: 
>     uint256 constant internal ETH_DECIMALS = 18;
>     uint256 constant internal MAX_UINT = 2**256-1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant internal ETH_ADDRESS = address(0x0);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        218
Source: 
> 
>     uint256 constant internal PRECISION = (10**18);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        219
Source: 
>     uint256 constant internal PRECISION = (10**18);
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        220
Source: 
>     uint256 constant internal MAX_QTY   = (10**28); // 10B tokens
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_DECIMALS = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        221
Source: 
>     uint256 constant internal MAX_RATE  = (PRECISION * 10**6); // up to 1M tokens per ETH
>     uint256 constant internal MAX_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal ETH_DECIMALS = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        222
Source: 
>     uint256 constant internal MAX_DECIMALS = 18;
>     uint256 constant internal ETH_DECIMALS = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant internal MAX_UINT = 2**256-1;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        223
Source: 
>     uint256 constant internal ETH_DECIMALS = 18;
>     uint256 constant internal MAX_UINT = 2**256-1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant internal ETH_ADDRESS = address(0x0);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Utils
Line:        224
Source: 
>     uint256 constant internal MAX_UINT = 2**256-1;
>     address constant internal ETH_ADDRESS = address(0x0);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
