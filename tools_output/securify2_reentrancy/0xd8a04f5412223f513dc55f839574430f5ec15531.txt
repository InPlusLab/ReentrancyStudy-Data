[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LibNote
Line:        35
Source: 
>         _;
>         assembly {
>         ^^^^^^^^^^
>             // log an 'anonymous' event with a constant 6 words of calldata

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Flipper
Line:        161
Source: 
>     // --- Auction ---
>     function kick(address usr, address gal, uint tab, uint lot, uint bid)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth returns (uint id)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Flipper
Line:        97
Source: 
>     mapping (address => uint) public wards;
>     function rely(address usr) external note auth { wards[usr] = 1; }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function deny(address usr) external note auth { wards[usr] = 0; }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Flipper
Line:        98
Source: 
>     function rely(address usr) external note auth { wards[usr] = 1; }
>     function deny(address usr) external note auth { wards[usr] = 0; }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     modifier auth {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Flipper
Line:        153
Source: 
>     // --- Admin ---
>     function file(bytes32 what, uint data) external note auth {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (what == "beg") beg = data;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Flipper
Line:        161
Source: 
>     // --- Auction ---
>     function kick(address usr, address gal, uint tab, uint lot, uint bid)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth returns (uint id)

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Flipper
Line:        175
Source: 
> 
>         vat.flux(ilk, msg.sender, address(this), lot);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Flipper
Line:        121
Source: 
> 
>     uint256 constant ONE = 1.00E18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public   beg = 1.05E18;  // 5% minimum bid increase

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        175
Source: 
> 
>         vat.flux(ilk, msg.sender, address(this), lot);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        194
Source: 
> 
>         vat.move(msg.sender, bids[id].guy, bids[id].bid);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         vat.move(msg.sender, bids[id].gal, bid - bids[id].bid);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        195
Source: 
>         vat.move(msg.sender, bids[id].guy, bids[id].bid);
>         vat.move(msg.sender, bids[id].gal, bid - bids[id].bid);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        211
Source: 
> 
>         vat.move(msg.sender, bids[id].guy, bid);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         vat.flux(ilk, address(this), bids[id].usr, bids[id].lot - lot);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        212
Source: 
>         vat.move(msg.sender, bids[id].guy, bid);
>         vat.flux(ilk, address(this), bids[id].usr, bids[id].lot - lot);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        220
Source: 
>         require(bids[id].tic != 0 && (bids[id].tic < now || bids[id].end < now), "Flipper/not-finished");
>         vat.flux(ilk, address(this), bids[id].guy, bids[id].lot);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         delete bids[id];

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        227
Source: 
>         require(bids[id].bid < bids[id].tab, "Flipper/already-dent-phase");
>         vat.flux(ilk, address(this), msg.sender, bids[id].lot);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         vat.move(msg.sender, bids[id].guy, bids[id].bid);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        228
Source: 
>         vat.flux(ilk, address(this), msg.sender, bids[id].lot);
>         vat.move(msg.sender, bids[id].guy, bids[id].bid);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         delete bids[id];

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Flipper
Line:        146
Source: 
>     function add(uint48 x, uint48 y) internal pure returns (uint48 z) {
>         require((z = x + y) >= x);
>                  ^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Flipper
Line:        149
Source: 
>     function mul(uint x, uint y) internal pure returns (uint z) {
>         require(y == 0 || (z = x * y) / y == x);
>                            ^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        182
Source: 
>         require(bids[id].tic == 0, "Flipper/bid-already-placed");
>         bids[id].end = add(uint48(now), tau);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        197
Source: 
> 
>         bids[id].guy = msg.sender;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         bids[id].bid = bid;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        198
Source: 
>         bids[id].guy = msg.sender;
>         bids[id].bid = bid;
>         ^^^^^^^^^^^^^^^^^^
>         bids[id].tic = add(uint48(now), ttl);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        199
Source: 
>         bids[id].bid = bid;
>         bids[id].tic = add(uint48(now), ttl);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        214
Source: 
> 
>         bids[id].guy = msg.sender;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         bids[id].lot = lot;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        215
Source: 
>         bids[id].guy = msg.sender;
>         bids[id].lot = lot;
>         ^^^^^^^^^^^^^^^^^^
>         bids[id].tic = add(uint48(now), ttl);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        216
Source: 
>         bids[id].lot = lot;
>         bids[id].tic = add(uint48(now), ttl);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        221
Source: 
>         vat.flux(ilk, address(this), bids[id].guy, bids[id].lot);
>         delete bids[id];
>         ^^^^^^^^^^^^^^^
>     }

[0m
