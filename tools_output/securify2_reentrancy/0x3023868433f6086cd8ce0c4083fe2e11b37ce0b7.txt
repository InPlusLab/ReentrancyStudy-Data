Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    Alec
Line:        41
Source: 
>             // send ether for winning
>             msg.sender.call.value(.2 ether)("");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Alec
Line:        41
Source: 
>             // send ether for winning
>             msg.sender.call.value(.2 ether)("");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    HIGH
Pattern:     Possibly unsafe usage of tx-origin
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Alec
Line:        35
Source: 
>         
>         if(owner != tx.origin) {
>            ^^^^^^^^^^^^^^^^^^
>             return;

[0m
[0;31mSeverity:    HIGH
Pattern:     Possibly unsafe usage of tx-origin
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Alec
Line:        50
Source: 
>     function igiveup() external {
>         require(tx.origin == owner);
>                 ^^^^^^^^^^^^^^^^^^
>         selfdestruct(owner);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Alec
Line:        10
Source: 
>     
>     int256 public guesses_allowed;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Alec
Line:        25
Source: 
>     
>     function buy_guess() payable external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.value >= .2 ether);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Alec
Line:        41
Source: 
>             // send ether for winning
>             msg.sender.call.value(.2 ether)("");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    Alec
Line:        41
Source: 
>             // send ether for winning
>             msg.sender.call.value(.2 ether)("");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted call to selfdestruct
Description: Calls to selfdestruct that can be triggered by any user
             must be inspected.
Type:        Violation
Contract:    Alec
Line:        51
Source: 
>         require(tx.origin == owner);
>         selfdestruct(owner);
>         ^^^^^^^^^^^^^^^^^^^
>     }    

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Alec
Line:        27
Source: 
>         require(msg.value >= .2 ether);
>         guesses_allowed++;
>         ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Alec
Line:        44
Source: 
>         
>         guesses_allowed--;
>         ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Alec
Line:        41
Source: 
>             // send ether for winning
>             msg.sender.call.value(.2 ether)("");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Alec
Line:        14
Source: 
>     
>     string public quiz;
>     ^^^^^^^^^^^^^^^^^^
>     

[0m
