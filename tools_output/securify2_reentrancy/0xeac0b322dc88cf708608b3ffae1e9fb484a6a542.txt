Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        79
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        102
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        79
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        102
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TraderCompensation
Line:        172
Source: 
> 
>     function setWhitelist(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address[] memory addrs,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TraderCompensation
Line:        185
Source: 
> 
>     function setOptin(
>     ^^^^^^^^^^^^^^^^^^
>         address addr,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TraderCompensation
Line:        194
Source: 
> 
>     function setActive(
>     ^^^^^^^^^^^^^^^^^^^
>         bool _isActive)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TraderCompensation
Line:        216
Source: 
> 
>     function withdrawVBZRX(
>     ^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _amount)

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TraderCompensation
Line:        162
Source: 
> 
>         vBZRX.transfer(
>         ^^^^^^^^^^^^^^^
>             msg.sender,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TraderCompensation
Line:        221
Source: 
>     {
>         uint256 balance = vBZRX.balanceOf(address(this));
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (_amount > balance) {

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TraderCompensation
Line:        227
Source: 
>         if (_amount != 0) {
>             vBZRX.transfer(
>             ^^^^^^^^^^^^^^^
>                 msg.sender,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        102
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TraderCompensation
Line:        194
Source: 
> 
>     function setActive(
>     ^^^^^^^^^^^^^^^^^^^
>         bool _isActive)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TraderCompensation
Line:        185
Source: 
> 
>     function setOptin(
>     ^^^^^^^^^^^^^^^^^^
>         address addr,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TraderCompensation
Line:        234
Source: 
> 
>     function canOptin(
>     ^^^^^^^^^^^^^^^^^^
>         address _user)

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    TraderCompensation
Line:        162
Source: 
> 
>         vBZRX.transfer(
>         ^^^^^^^^^^^^^^^
>             msg.sender,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TraderCompensation
Line:        118
Source: 
> 
>     IERC20 public constant vBZRX = IERC20(0xB72B31907C1C95F3650b64b2469e08EdACeE5e8F);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TraderCompensation
Line:        221
Source: 
>     {
>         uint256 balance = vBZRX.balanceOf(address(this));
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (_amount > balance) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TraderCompensation
Line:        162
Source: 
> 
>         vBZRX.transfer(
>         ^^^^^^^^^^^^^^^
>             msg.sender,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TraderCompensation
Line:        227
Source: 
>         if (_amount != 0) {
>             vBZRX.transfer(
>             ^^^^^^^^^^^^^^^
>                 msg.sender,

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    TraderCompensation
Line:        120
Source: 
> 
>     uint256 public optinStartTimestamp;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public optinEndTimestamp;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    TraderCompensation
Line:        121
Source: 
>     uint256 public optinStartTimestamp;
>     uint256 public optinEndTimestamp;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public claimStartTimestamp;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    TraderCompensation
Line:        122
Source: 
>     uint256 public optinEndTimestamp;
>     uint256 public claimStartTimestamp;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public claimEndTimestamp;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    TraderCompensation
Line:        123
Source: 
>     uint256 public claimStartTimestamp;
>     uint256 public claimEndTimestamp;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    TraderCompensation
Line:        125
Source: 
> 
>     bool public isActive;
>     ^^^^^^^^^^^^^^^^^^^^
>     uint256 public vBZRXDistributed;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    TraderCompensation
Line:        126
Source: 
>     bool public isActive;
>     uint256 public vBZRXDistributed;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TraderCompensation
Line:        162
Source: 
> 
>         vBZRX.transfer(
>         ^^^^^^^^^^^^^^^
>             msg.sender,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TraderCompensation
Line:        227
Source: 
>         if (_amount != 0) {
>             vBZRX.transfer(
>             ^^^^^^^^^^^^^^^
>                 msg.sender,

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TraderCompensation
Line:        120
Source: 
> 
>     uint256 public optinStartTimestamp;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public optinEndTimestamp;

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    TraderCompensation
Line:        267
Source: 
>     {
>         return block.timestamp;
>                ^^^^^^^^^^^^^^^
>     }

[0m
