pragma directive defines a prior version to 0.5.11. Changing pragma version to 0.5.11....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ReigningEmperor
Line:        625
Source: 
>     function _transfer(address sender, address recipient, uint256 amount) internal {
>         require(sender != address(0), "ERC20: transfer from the zero address");
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(recipient != address(0), "ERC20: transfer to the zero address");

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ReigningEmperor
Line:        626
Source: 
>         require(sender != address(0), "ERC20: transfer from the zero address");
>         require(recipient != address(0), "ERC20: transfer to the zero address");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(amount > 0, "Transfer must be greater than 0");

[0m
[0;31mSeverity:    LOW
Pattern:     ERC20 Indexed Pattern
Description: Events defined by ERC20 specification should use the
             'indexed' keyword.
Type:        Violation
Contract:    IERC20
Line:        354
Source: 
> 
>         return c;
>             ^^^^^
>     }

[0m
[0;31mSeverity:    LOW
Pattern:     ERC20 Indexed Pattern
Description: Events defined by ERC20 specification should use the
             'indexed' keyword.
Type:        Violation
Contract:    IERC20
Line:        364
Source: 
>      * Requirements:
>      * - Multiplication cannot overflow.
>                                  ^^^^^^^
>      */

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    HumanityCheck
Line:        603
Source: 
> 
>     function approve(address spender, uint256 value) public returns (bool) {
>                                                                           ^^
>         _approve(msg.sender, spender, value);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20Detailed
Line:        550
Source: 
>   mapping (address => uint256) private _detentionCamp; // record of arrested addresses
>   mapping (address => uint256) private _underground; // record of players in safehouse
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   mapping (address => uint256) private _points; // record of points

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20Detailed
Line:        553
Source: 
>   mapping (address => uint256) private _arrests; // record of arrests
>   mapping (address => uint256) private _releaseTime; // timelock on sending tokens
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ERC20Detailed
Line:        565
Source: 
>   event playerDetained(address arrester, address arrestee);
>   event playerFreed(address freedBy, address playerFreed);
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        630
Source: 
>         require(recipient.balance != 0, "Recipient must have more than 0 eth in account.");
>         require(_balances[sender] >= amount, "You do not have enough followers to organize that protest.");
>                                                                                               ^^^^^^^^^^^^^
>         require(_detentionCamp[sender] == 0, "You are in detention camp.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        632
Source: 
>         require(_detentionCamp[sender] == 0, "You are in detention camp.");
>         require(_detentionCamp[recipient] == 0, "Oh no! Your comrade is in a detention camp.");
>                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(block.timestamp >= _releaseTime[sender], "Your revolutionary energy is exhausted... you need to wait before organizing another protest.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        633
Source: 
>         require(_detentionCamp[recipient] == 0, "Oh no! Your comrade is in a detention camp.");
>         require(block.timestamp >= _releaseTime[sender], "Your revolutionary energy is exhausted... you need to wait before organizing another protest.");
>                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        635
Source: 
> 
>         // sender balance does not change on transfers, however it takes time to restore balance
>                                                                             ^^^^^^^^^^^^^^^^^^^^
>         _releaseTime[sender] = now.add(amount); // 1 seconds per 1 token sent

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        637
Source: 
>         _releaseTime[sender] = now.add(amount); // 1 seconds per 1 token sent
>         _balances[recipient] = amount; // recipient's balance is determined by sender
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        639
Source: 
> 
>         _points[sender] = _points[sender].add(1); // sender receives 1 game point per transfer
>                                                                                        ^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        644
Source: 
>         // bonus for sending token to verified humans
>         HumanityCheck deployed_humanitydao = HumanityCheck(0x4EE46dc4962C2c2F6bcd4C098a0E2b28f66A5E90);
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          if (deployed_humanitydao.isHuman(recipient)) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        646
Source: 
>          if (deployed_humanitydao.isHuman(recipient)) {
>            uint256 bonus = amount.mul(2).div(10);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            _balances[sender] = _balances[sender].add(amount).add(bonus);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        657
Source: 
> 
>     function sparkleBalanceOfBeneficiary() public view returns (uint256) {
>                                                             ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        664
Source: 
>     function _burn(address account, uint256 value) internal {
>         require(account != address(0), "ERC20: burn from the zero address");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        735
Source: 
>       require (deployed_humanitydao.isHuman(msg.sender), "You must be a human to free a player. Register with HumanityDao.org");
>         uint256 supplyDecrease = _balances[msg.sender].mul(10).div(100); // 10% of balance is depleted in freeing operation
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _balances[msg.sender] = _balances[msg.sender].sub(supplyDecrease);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        779
Source: 
>               require(msg.sender == beneficiary, "Access denied.");
>               Sparkle(deployed_sparkle).sellSparkle(amount);
>                                                             
>               beneficiary.transfer(address(this).balance);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        805
Source: 
>             return true;
>           }
>         ^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        827
Source: 
>            uint256 _tokensRemaining = _totalSupply.sub(_balances[msg.sender]);
>             require(_tokensRemaining == 0, "There are still protesters active in the movement.");
>                                                                             ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }
>                                                           

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }
>                                                                                                                                                                                                                                                                                                                               

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }


[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ReigningEmperor
Line:        824
Source: 
>           require(_totalCollected <= MAX_COLLECTED, "The protesters won. Game over.");
>            require(block.timestamp >= _startTime + 28 days, "Game must be played for 28 days before it can end.");
>                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            // balance of caller is not counted

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ReigningEmperor
Line:        637
Source: 
>         _releaseTime[sender] = now.add(amount); // 1 seconds per 1 token sent
>         _balances[recipient] = amount; // recipient's balance is determined by sender
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ReigningEmperor
Line:        646
Source: 
>          if (deployed_humanitydao.isHuman(recipient)) {
>            uint256 bonus = amount.mul(2).div(10);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            _balances[sender] = _balances[sender].add(amount).add(bonus);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ReigningEmperor
Line:        657
Source: 
> 
>     function sparkleBalanceOfBeneficiary() public view returns (uint256) {
>                                                             ^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ReigningEmperor
Line:        664
Source: 
>     function _burn(address account, uint256 value) internal {
>         require(account != address(0), "ERC20: burn from the zero address");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ReigningEmperor
Line:        735
Source: 
>       require (deployed_humanitydao.isHuman(msg.sender), "You must be a human to free a player. Register with HumanityDao.org");
>         uint256 supplyDecrease = _balances[msg.sender].mul(10).div(100); // 10% of balance is depleted in freeing operation
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _balances[msg.sender] = _balances[msg.sender].sub(supplyDecrease);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ReigningEmperor
Line:        827
Source: 
>            uint256 _tokensRemaining = _totalSupply.sub(_balances[msg.sender]);
>             require(_tokensRemaining == 0, "There are still protesters active in the movement.");
>                                                                             ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }
>                                                                                                                                                                                                                                                                                                                               

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HumanityCheck
Line:        603
Source: 
> 
>     function approve(address spender, uint256 value) public returns (bool) {
>                                                                           ^^
>         _approve(msg.sender, spender, value);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ReigningEmperor
Line:        632
Source: 
>         require(_detentionCamp[sender] == 0, "You are in detention camp.");
>         require(_detentionCamp[recipient] == 0, "Oh no! Your comrade is in a detention camp.");
>                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(block.timestamp >= _releaseTime[sender], "Your revolutionary energy is exhausted... you need to wait before organizing another protest.");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ReigningEmperor
Line:        633
Source: 
>         require(_detentionCamp[recipient] == 0, "Oh no! Your comrade is in a detention camp.");
>         require(block.timestamp >= _releaseTime[sender], "Your revolutionary energy is exhausted... you need to wait before organizing another protest.");
>                                                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ReigningEmperor
Line:        635
Source: 
> 
>         // sender balance does not change on transfers, however it takes time to restore balance
>                                                                             ^^^^^^^^^^^^^^^^^^^^
>         _releaseTime[sender] = now.add(amount); // 1 seconds per 1 token sent

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ReigningEmperor
Line:        639
Source: 
> 
>         _points[sender] = _points[sender].add(1); // sender receives 1 game point per transfer
>                                                                                        ^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ReigningEmperor
Line:        644
Source: 
>         // bonus for sending token to verified humans
>         HumanityCheck deployed_humanitydao = HumanityCheck(0x4EE46dc4962C2c2F6bcd4C098a0E2b28f66A5E90);
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>          if (deployed_humanitydao.isHuman(recipient)) {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ReigningEmperor
Line:        703
Source: 
>         if(_underground[player] == 1){
>           require(_balances[msg.sender] >= _balances[player].mul(30), "This activist is in safehouse. You must have 30x the resources of the protester you wish to arrest.");
>                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           _balances[msg.sender] = _balances[msg.sender].mul(70).div(100); // 30% of balance is depleted in detention operation

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    ReigningEmperor
Line:        824
Source: 
>           require(_totalCollected <= MAX_COLLECTED, "The protesters won. Game over.");
>            require(block.timestamp >= _startTime + 28 days, "Game must be played for 28 days before it can end.");
>                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            // balance of caller is not counted

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        547
Source: 
>   using SafeMath for uint256;
>   mapping (address => uint256) private _balances;
>                              ^^^^^^^^^^^^^^^^^^
>   mapping (address => mapping (address => uint256)) private _allowances;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        547
Source: 
>   using SafeMath for uint256;
>   mapping (address => uint256) private _balances;
>                                                  
>   mapping (address => mapping (address => uint256)) private _allowances;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ERC20Detailed
Line:        548
Source: 
>   mapping (address => uint256) private _balances;
>   mapping (address => mapping (address => uint256)) private _allowances;
>                      ^^^^^^^^^^^^^^
>   mapping (address => uint256) private _detentionCamp; // record of arrested addresses

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ReigningEmperor
Line:        625
Source: 
>     function _transfer(address sender, address recipient, uint256 amount) internal {
>         require(sender != address(0), "ERC20: transfer from the zero address");
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(recipient != address(0), "ERC20: transfer to the zero address");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ReigningEmperor
Line:        627
Source: 
>         require(recipient != address(0), "ERC20: transfer to the zero address");
>         require(amount > 0, "Transfer must be greater than 0");
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_balances[recipient] == 0, "Recipient is already a protester.");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ReigningEmperor
Line:        628
Source: 
>         require(amount > 0, "Transfer must be greater than 0");
>         require(_balances[recipient] == 0, "Recipient is already a protester.");
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(recipient.balance != 0, "Recipient must have more than 0 eth in account.");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ReigningEmperor
Line:        703
Source: 
>         if(_underground[player] == 1){
>           require(_balances[msg.sender] >= _balances[player].mul(30), "This activist is in safehouse. You must have 30x the resources of the protester you wish to arrest.");
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           _balances[msg.sender] = _balances[msg.sender].mul(70).div(100); // 30% of balance is depleted in detention operation

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ReigningEmperor
Line:        789
Source: 
>               msg.sender.transfer(pot);
>               return true;
>                  ^^^^^^^^^
>                 }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }


[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ERC20Detailed
Line:        528
Source: 
> 
>     function mintSparkle() public payable returns (bool) {
>                                                           
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ERC20Detailed
Line:        532
Source: 
> 
>     function sellSparkle(uint256 amount) public returns (bool) {
>                  ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ERC20Detailed
Line:        532
Source: 
> 
>     function sellSparkle(uint256 amount) public returns (bool) {
>                                              ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        609
Source: 
>     function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
>         _transfer(sender, recipient, amount);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, "ERC20: transfer amount exceeds allowance"));

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        610
Source: 
>         _transfer(sender, recipient, amount);
>         _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, "ERC20: transfer amount exceeds allowance"));
>                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        610
Source: 
>         _transfer(sender, recipient, amount);
>         _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount, "ERC20: transfer amount exceeds allowance"));
>                                                                                                                               
>         return true;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        615
Source: 
>     function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
>         _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        616
Source: 
>         _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));
>         return true;
>                ^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        620
Source: 
>     function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
>         _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, "ERC20: decreased allowance below zero"));
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        620
Source: 
>     function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
>         _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, "ERC20: decreased allowance below zero"));
>                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        620
Source: 
>     function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
>         _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, "ERC20: decreased allowance below zero"));
>                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        624
Source: 
> 
>     function _transfer(address sender, address recipient, uint256 amount) internal {
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(sender != address(0), "ERC20: transfer from the zero address");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        625
Source: 
>     function _transfer(address sender, address recipient, uint256 amount) internal {
>         require(sender != address(0), "ERC20: transfer from the zero address");
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(recipient != address(0), "ERC20: transfer to the zero address");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ReigningEmperor
Line:        626
Source: 
>         require(sender != address(0), "ERC20: transfer from the zero address");
>         require(recipient != address(0), "ERC20: transfer to the zero address");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(amount > 0, "Transfer must be greater than 0");

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    ReigningEmperor
Line:        624
Source: 
> 
>     function _transfer(address sender, address recipient, uint256 amount) internal {
>                                                   ^^^^^^^^^^^^^^^^^^^^^^
>         require(sender != address(0), "ERC20: transfer from the zero address");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    ReigningEmperor
Line:        830
Source: 
>             uint256 finalAmount = sparkleBalanceOfBeneficiary().mul(975).div(100); // allow for 2.25% transaction tax + margin of error
>             Sparkle(deployed_sparkle).transfer(beneficiary, finalAmount);
>                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             selfdestruct(beneficiary);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }
>                                                                                                                                                                                                                                            

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    ReigningEmperor
Line:        824
Source: 
>           require(_totalCollected <= MAX_COLLECTED, "The protesters won. Game over.");
>            require(block.timestamp >= _startTime + 28 days, "Game must be played for 28 days before it can end.");
>                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            // balance of caller is not counted

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    ReigningEmperor
Line:        830
Source: 
>             uint256 finalAmount = sparkleBalanceOfBeneficiary().mul(975).div(100); // allow for 2.25% transaction tax + margin of error
>             Sparkle(deployed_sparkle).transfer(beneficiary, finalAmount);
>                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             selfdestruct(beneficiary);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    ReigningEmperor
Line:        824
Source: 
>           require(_totalCollected <= MAX_COLLECTED, "The protesters won. Game over.");
>            require(block.timestamp >= _startTime + 28 days, "Game must be played for 28 days before it can end.");
>                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            // balance of caller is not counted

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    ReigningEmperor
Line:        830
Source: 
>             uint256 finalAmount = sparkleBalanceOfBeneficiary().mul(975).div(100); // allow for 2.25% transaction tax + margin of error
>             Sparkle(deployed_sparkle).transfer(beneficiary, finalAmount);
>                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             selfdestruct(beneficiary);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }
>                                                                                                                                                                                                                                            

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ReigningEmperor
Line:        703
Source: 
>         if(_underground[player] == 1){
>           require(_balances[msg.sender] >= _balances[player].mul(30), "This activist is in safehouse. You must have 30x the resources of the protester you wish to arrest.");
>                                                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           _balances[msg.sender] = _balances[msg.sender].mul(70).div(100); // 30% of balance is depleted in detention operation

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ReigningEmperor
Line:        794
Source: 
>           function withdrawSparkle(uint256 amount) public returns (bool) {
>                 require(msg.sender == beneficiary, "Access denied.");
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 Sparkle(deployed_sparkle).transfer(beneficiary, amount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReigningEmperor
Line:        708
Source: 
>           _underground[player] = 0;
>           _arrests[msg.sender] = _arrests[msg.sender].add(10); // 2 points for arresting protester in safehouse
>                                                                                                    ^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReigningEmperor
Line:        829
Source: 
> 
>             uint256 finalAmount = sparkleBalanceOfBeneficiary().mul(975).div(100); // allow for 2.25% transaction tax + margin of error
>                                                                                                                         ^^^^^^^^^^^^^^^
>             Sparkle(deployed_sparkle).transfer(beneficiary, finalAmount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }


[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ReigningEmperor
Line:        620
Source: 
>     function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
>         _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue, "ERC20: decreased allowance below zero"));
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted call to selfdestruct
Description: Calls to selfdestruct that can be triggered by any user
             must be inspected.
Type:        Warning
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }


[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReigningEmperor
Line:        733
Source: 
>       // only humans can free players.
>       HumanityCheck deployed_humanitydao = HumanityCheck(0x4EE46dc4962C2c2F6bcd4C098a0E2b28f66A5E90);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require (deployed_humanitydao.isHuman(msg.sender), "You must be a human to free a player. Register with HumanityDao.org");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReigningEmperor
Line:        733
Source: 
>       // only humans can free players.
>       HumanityCheck deployed_humanitydao = HumanityCheck(0x4EE46dc4962C2c2F6bcd4C098a0E2b28f66A5E90);
>                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require (deployed_humanitydao.isHuman(msg.sender), "You must be a human to free a player. Register with HumanityDao.org");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReigningEmperor
Line:        700
Source: 
>         require(_totalCollected <= MAX_COLLECTED, "The protesters won. Game over.");
>         require(_balances[msg.sender] >= _balances[player].mul(10), "You must have 10x the resources of the protester you wish to arrest.");
>                                                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReigningEmperor
Line:        720
Source: 
>         emit playerDetained(msg.sender, player);
>         return true;
>                  ^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReigningEmperor
Line:        714
Source: 
>           uint256 supplyDecrease = _balances[msg.sender].mul(10).div(100); // 10% of balance is depleted in detention operation
>         _balances[msg.sender] = _balances[msg.sender].sub(supplyDecrease);
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _detentionCamp[player] = _balances[player]; // keep a record of how many tokens player had at time of arrest

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReigningEmperor
Line:        715
Source: 
>         _balances[msg.sender] = _balances[msg.sender].sub(supplyDecrease);
>         _detentionCamp[player] = _balances[player]; // keep a record of how many tokens player had at time of arrest
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _burn(player, _balances[player]);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReigningEmperor
Line:        697
Source: 
> 
>         // once a player has been arrested they can no longer send tokens from that address
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReigningEmperor
Line:        697
Source: 
> 
>         // once a player has been arrested they can no longer send tokens from that address
>                                                                                        ^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReigningEmperor
Line:        699
Source: 
> 
>         require(_totalCollected <= MAX_COLLECTED, "The protesters won. Game over.");
>                                                                                  ^^^
>         require(_balances[msg.sender] >= _balances[player].mul(10), "You must have 10x the resources of the protester you wish to arrest.");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReigningEmperor
Line:        704
Source: 
>           require(_balances[msg.sender] >= _balances[player].mul(30), "This activist is in safehouse. You must have 30x the resources of the protester you wish to arrest.");
>           _balances[msg.sender] = _balances[msg.sender].mul(70).div(100); // 30% of balance is depleted in detention operation
>                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           _detentionCamp[player] = _balances[player];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReigningEmperor
Line:        705
Source: 
>           _balances[msg.sender] = _balances[msg.sender].mul(70).div(100); // 30% of balance is depleted in detention operation
>           _detentionCamp[player] = _balances[player];
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           _burn(player, _balances[player]);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ReigningEmperor
Line:        824
Source: 
>           require(_totalCollected <= MAX_COLLECTED, "The protesters won. Game over.");
>            require(block.timestamp >= _startTime + 28 days, "Game must be played for 28 days before it can end.");
>                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>            // balance of caller is not counted

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ReigningEmperor
Line:        829
Source: 
> 
>             uint256 finalAmount = sparkleBalanceOfBeneficiary().mul(975).div(100); // allow for 2.25% transaction tax + margin of error
>                                                                                                                         ^^^^^^^^^^^^^^^
>             Sparkle(deployed_sparkle).transfer(beneficiary, finalAmount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }
>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    ReigningEmperor
Line:        689
Source: 
>         _totalSupply = _totalSupply.add(amount);
>         _balances[account] = _balances[account].add(amount);
>       ^^^^^^^^^^^^^^^
>         emit Transfer(address(0), account, amount);

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    ReigningEmperor
Line:        835
Source: 
> 
> }


[0m
