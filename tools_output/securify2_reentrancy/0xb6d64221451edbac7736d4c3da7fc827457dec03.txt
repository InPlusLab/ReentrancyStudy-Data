Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BaseWallet
Line:        159
Source: 
>             // solium-disable-next-line security/no-inline-assembly
>             assembly {
>             ^^^^^^^^^^
>                 returndatacopy(0, 0, returndatasize)

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BaseWallet
Line:        180
Source: 
>                 // solium-disable-next-line security/no-inline-assembly
>                 assembly {
>                 ^^^^^^^^^^
>                     calldatacopy(0, 0, calldatasize())

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BaseWallet
Line:        60
Source: 
>     // The implementation of the proxy
>     address public implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // The owner

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    BaseWallet
Line:        116
Source: 
>                 authorised[_module] = true;
>                 Module(_module).init(this);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    BaseWallet
Line:        156
Source: 
>         // solium-disable-next-line security/no-call-value
>         (success, _result) = _target.call.value(_value)(_data);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (!success) {

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    BaseWallet
Line:        97
Source: 
>             authorised[_modules[i]] = true;
>             Module(_modules[i]).init(this);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             emit AuthorisedModule(_modules[i], true);

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    BaseWallet
Line:        156
Source: 
>         // solium-disable-next-line security/no-call-value
>         (success, _result) = _target.call.value(_value)(_data);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (!success) {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    BaseWallet
Line:        89
Source: 
>      */
>     function init(address _owner, address[] calldata _modules) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(owner == address(0) && modules == 0, "BW: wallet already initialised");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BaseWallet
Line:        131
Source: 
>     */
>     function enableStaticCall(address _module, bytes4 _method) external moduleOnly {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(authorised[_module], "BW: must be an authorised module for static call");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BaseWallet
Line:        153
Source: 
>      */
>     function invoke(address _target, uint _value, bytes calldata _data) external moduleOnly returns (bytes memory _result) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         bool success;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BaseWallet
Line:        97
Source: 
>             authorised[_modules[i]] = true;
>             Module(_modules[i]).init(this);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             emit AuthorisedModule(_modules[i], true);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BaseWallet
Line:        116
Source: 
>                 authorised[_module] = true;
>                 Module(_module).init(this);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        20
Source: 
> 
> pragma solidity ^0.5.4;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    BaseWallet
Line:        156
Source: 
>         // solium-disable-next-line security/no-call-value
>         (success, _result) = _target.call.value(_value)(_data);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (!success) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    BaseWallet
Line:        156
Source: 
>         // solium-disable-next-line security/no-call-value
>         (success, _result) = _target.call.value(_value)(_data);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (!success) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    BaseWallet
Line:        156
Source: 
>         // solium-disable-next-line security/no-call-value
>         (success, _result) = _target.call.value(_value)(_data);
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (!success) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BaseWallet
Line:        97
Source: 
>             authorised[_modules[i]] = true;
>             Module(_modules[i]).init(this);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             emit AuthorisedModule(_modules[i], true);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BaseWallet
Line:        116
Source: 
>                 authorised[_module] = true;
>                 Module(_module).init(this);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BaseWallet
Line:        60
Source: 
>     // The implementation of the proxy
>     address public implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // The owner

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BaseWallet
Line:        62
Source: 
>     // The owner
>     address public owner;
>     ^^^^^^^^^^^^^^^^^^^^
>     // The authorised modules

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    BaseWallet
Line:        68
Source: 
>     // The number of modules
>     uint public modules;
>     ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BaseWallet
Line:        92
Source: 
>         require(_modules.length > 0, "BW: construction requires at least 1 module");
>         owner = _owner;
>         ^^^^^^^^^^^^^^
>         modules = _modules.length;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BaseWallet
Line:        93
Source: 
>         owner = _owner;
>         modules = _modules.length;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         for (uint256 i = 0; i < _modules.length; i++) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    BaseWallet
Line:        96
Source: 
>             require(authorised[_modules[i]] == false, "BW: module is already added");
>             authorised[_modules[i]] = true;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             Module(_modules[i]).init(this);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BaseWallet
Line:        60
Source: 
>     // The implementation of the proxy
>     address public implementation;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // The owner

[0m
