Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.10. Changing pragma version to 0.6.10....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        30
Source: 
>   }
>   function transferOwnership(address newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(newOwner != address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SirotTokenICO
Line:        60
Source: 
>   }
>   function initialize() public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(initialized == false);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SirotTokenICO
Line:        95
Source: 
>   }
>   function destroy() onlyOwner public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 balance = token.balanceOf(address(this));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    SirotTokenICO
Line:        89
Source: 
>     raisedAmount = raisedAmount.add(msg.value);
>     token.transfer(msg.sender, tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ownerpayable.transfer(msg.value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    SirotTokenICO
Line:        90
Source: 
>     token.transfer(msg.sender, tokens);
>     ownerpayable.transfer(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SirotTokenICO
Line:        42
Source: 
>   Token token;
>   string public constant Info = "Do not call buyTokens directly. Use sale.sirottoken.com";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant RATE = 125000;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SirotTokenICO
Line:        47
Source: 
>   uint256 public constant DAYS = 92;
>   uint256 public constant initialTokens = 100000000 * 10**18;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   bool public initialized = false;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SirotTokenICO
Line:        57
Source: 
>   constructor() public {
>       address _tokenAddr = 0x5eA0F26b81DC67d2463020614650d9325C8adbE7;
>       ^^^^^^^^^^^^^^^^^^
>       token = Token(_tokenAddr);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SirotTokenICO
Line:        41
Source: 
>   using SafeMath for uint256;
>   Token token;
>   ^^^^^^^^^^^
>   string public constant Info = "Do not call buyTokens directly. Use sale.sirottoken.com";

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    SirotTokenICO
Line:        47
Source: 
>   uint256 public constant DAYS = 92;
>   uint256 public constant initialTokens = 100000000 * 10**18;
>                                           ^^^^^^^^^
>   bool public initialized = false;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    SirotTokenICO
Line:        90
Source: 
>     token.transfer(msg.sender, tokens);
>     ownerpayable.transfer(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SirotTokenICO
Line:        90
Source: 
>     token.transfer(msg.sender, tokens);
>     ownerpayable.transfer(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SirotTokenICO
Line:        96
Source: 
>   function destroy() onlyOwner public {
>     uint256 balance = token.balanceOf(address(this));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     assert(balance > 0);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SirotTokenICO
Line:        93
Source: 
>   function tokensAvailable() public view returns (uint256) {
>     return token.balanceOf(address(this));
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SirotTokenICO
Line:        89
Source: 
>     raisedAmount = raisedAmount.add(msg.value);
>     token.transfer(msg.sender, tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ownerpayable.transfer(msg.value);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SirotTokenICO
Line:        98
Source: 
>     assert(balance > 0);
>     token.transfer(owner, balance); //Tokens returned to owner wallet; will be subsequently burned.
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     selfdestruct(ownerpayable);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    SirotTokenICO
Line:        90
Source: 
>     token.transfer(msg.sender, tokens);
>     ownerpayable.transfer(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    SirotTokenICO
Line:        88
Source: 
>     emit BoughtTokens(msg.sender, tokens);
>     raisedAmount = raisedAmount.add(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     token.transfer(msg.sender, tokens);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SirotTokenICO
Line:        89
Source: 
>     raisedAmount = raisedAmount.add(msg.value);
>     token.transfer(msg.sender, tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ownerpayable.transfer(msg.value);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SirotTokenICO
Line:        98
Source: 
>     assert(balance > 0);
>     token.transfer(owner, balance); //Tokens returned to owner wallet; will be subsequently burned.
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     selfdestruct(ownerpayable);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Ownable
Line:        21
Source: 
>   address public owner;
>   address payable public ownerpayable;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   constructor() public {

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SirotTokenICO
Line:        42
Source: 
>   Token token;
>   string public constant Info = "Do not call buyTokens directly. Use sale.sirottoken.com";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant RATE = 125000;

[0m
