Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    YFGMTokenLock
Line:        97
Source: 
>     // Lock 10000 YFGM for 21 days
>     function LockOneTokens (address _from, uint _amount) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_from == owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    YFGMTokenLock
Line:        106
Source: 
>     // Lock 1000 YFGM for 21 days
>     function LockTwoTokens (address _from, uint256 _amount) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_from == owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    YFGMTokenLock
Line:        114
Source: 
> 
>     function withdrawOneTokens(address _to, uint256 _amount) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_to == owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    YFGMTokenLock
Line:        122
Source: 
> 
>     function withdrawTwoTokens(address _to, uint256 _amount) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_to == owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    YFGMTokenLock
Line:        130
Source: 
> 
>     function balanceOf() public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return YFGMLockOne.add(YFGMLockTwo);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFGMTokenLock
Line:        99
Source: 
>         require(_from == owner);
>         require(YFGMToken.balanceOf(_from) >= _amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         YFGMLockOne = _amount;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFGMTokenLock
Line:        102
Source: 
>         unlockOneDate = now;
>         YFGMToken.transferFrom(owner, address(this), _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFGMTokenLock
Line:        108
Source: 
>         require(_from == owner);
>         require(YFGMToken.balanceOf(_from) >= _amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         YFGMLockTwo = _amount;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFGMTokenLock
Line:        111
Source: 
>         unlockTwoDate = now;
>         YFGMToken.transferFrom(owner, address(this), _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFGMTokenLock
Line:        119
Source: 
>         YFGMLockOne = YFGMLockOne.sub(_amount);
>         YFGMToken.transfer(_to, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    YFGMTokenLock
Line:        127
Source: 
>         YFGMLockTwo = YFGMLockTwo.sub(_amount);
>         YFGMToken.transfer(_to, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    YFGMTokenLock
Line:        85
Source: 
>     // Grouping token owner
>     uint256 public YFGMLockOne;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public YFGMLockTwo;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    YFGMTokenLock
Line:        86
Source: 
>     uint256 public YFGMLockOne;
>     uint256 public YFGMLockTwo;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public owner;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    YFGMTokenLock
Line:        88
Source: 
>     address public owner;
>     ERC20 public YFGMToken;
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    YFGMTokenLock
Line:        97
Source: 
>     // Lock 10000 YFGM for 21 days
>     function LockOneTokens (address _from, uint _amount) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_from == owner);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    YFGMTokenLock
Line:        106
Source: 
>     // Lock 1000 YFGM for 21 days
>     function LockTwoTokens (address _from, uint256 _amount) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_from == owner);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    YFGMTokenLock
Line:        99
Source: 
>         require(_from == owner);
>         require(YFGMToken.balanceOf(_from) >= _amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         YFGMLockOne = _amount;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    YFGMTokenLock
Line:        108
Source: 
>         require(_from == owner);
>         require(YFGMToken.balanceOf(_from) >= _amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         YFGMLockTwo = _amount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    YFGMTokenLock
Line:        102
Source: 
>         unlockOneDate = now;
>         YFGMToken.transferFrom(owner, address(this), _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    YFGMTokenLock
Line:        111
Source: 
>         unlockTwoDate = now;
>         YFGMToken.transferFrom(owner, address(this), _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    YFGMTokenLock
Line:        119
Source: 
>         YFGMLockOne = YFGMLockOne.sub(_amount);
>         YFGMToken.transfer(_to, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    YFGMTokenLock
Line:        127
Source: 
>         YFGMLockTwo = YFGMLockTwo.sub(_amount);
>         YFGMToken.transfer(_to, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    YFGMTokenLock
Line:        81
Source: 
>     // Unlock token duration
>     uint256 public unlockTwoDate;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public unlockOneDate;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    YFGMTokenLock
Line:        82
Source: 
>     uint256 public unlockTwoDate;
>     uint256 public unlockOneDate;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    YFGMTokenLock
Line:        85
Source: 
>     // Grouping token owner
>     uint256 public YFGMLockOne;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public YFGMLockTwo;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    YFGMTokenLock
Line:        86
Source: 
>     uint256 public YFGMLockOne;
>     uint256 public YFGMLockTwo;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public owner;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    YFGMTokenLock
Line:        102
Source: 
>         unlockOneDate = now;
>         YFGMToken.transferFrom(owner, address(this), _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    YFGMTokenLock
Line:        111
Source: 
>         unlockTwoDate = now;
>         YFGMToken.transferFrom(owner, address(this), _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    YFGMTokenLock
Line:        119
Source: 
>         YFGMLockOne = YFGMLockOne.sub(_amount);
>         YFGMToken.transfer(_to, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    YFGMTokenLock
Line:        127
Source: 
>         YFGMLockTwo = YFGMLockTwo.sub(_amount);
>         YFGMToken.transfer(_to, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
