Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    AOQFund
Line:        67
Source: 
> 
>         assembly {codeLength := extcodesize(addr)}
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(codeLength == 0, "sorry humans only");

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    AOQFund
Line:        87
Source: 
> 
>         assembly {_codeLength := extcodesize(_addr)}
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_codeLength != 0, "ERROR_ONLY_CONTRACT");

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    AOQFund
Line:        159
Source: 
> 
>         assembly {codeLength := extcodesize(investor)}
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(codeLength == 0, "not a valid human address");

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    AOQFund
Line:        15
Source: 
> 
>     uint ethWei = 1 ether;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint256  fundValue;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        308
Source: 
>         // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522
>         if (a == 0) {
>             ^^^^^^
>             return 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        313
Source: 
>         uint256 c = a * b;
>         require(c / a == b, "mul overflow");
>                 ^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        92
Source: 
> 
>     function setAdmin(address addr)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        99
Source: 
> 
>     function setCloseTime(uint256 cTime)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        106
Source: 
> 
>     function setProjectAddress(address payable pAddress)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        113
Source: 
> 
>     function setMainContract(address addr)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        124
Source: 
> 
>     function setGradeCountLimit(uint256 gradeThreeLimit, uint256 gradeTwoLimit)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        132
Source: 
> 
>     function countDownOverSet()
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        144
Source: 
> 
>     function getFundInfo()
>     ^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        152
Source: 
> 
>     function receiveInvest(address investor, uint256 level, bool isNew)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        170
Source: 
> 
>     function setFrontInvestors(address investor, uint256 grade)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        208
Source: 
> 
>     function setGradeOne(uint256 num)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        215
Source: 
> 
>     function openCanWithdraw(uint256 open)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        233
Source: 
> 
>     function withdrawFund()
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AOQFund
Line:        285
Source: 
> 
>     function close() public
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     onlyOwner()

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AOQFund
Line:        113
Source: 
> 
>     function setMainContract(address addr)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AOQFund
Line:        124
Source: 
> 
>     function setGradeCountLimit(uint256 gradeThreeLimit, uint256 gradeTwoLimit)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AOQFund
Line:        208
Source: 
> 
>     function setGradeOne(uint256 num)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AOQFund
Line:        92
Source: 
> 
>     function setAdmin(address addr)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AOQFund
Line:        99
Source: 
> 
>     function setCloseTime(uint256 cTime)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AOQFund
Line:        106
Source: 
> 
>     function setProjectAddress(address payable pAddress)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AOQFund
Line:        152
Source: 
> 
>     function receiveInvest(address investor, uint256 level, bool isNew)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    AOQFund
Line:        250
Source: 
> 
>         msg.sender.transfer(withdrawAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AOQFund
Line:        84
Source: 
>     modifier isContract() {
>         address _addr = msg.sender;
>         ^^^^^^^^^^^^^
>         uint256 _codeLength;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AOQFund
Line:        85
Source: 
>         address _addr = msg.sender;
>         uint256 _codeLength;
>         ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        15
Source: 
> 
>     uint ethWei = 1 ether;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint256  fundValue;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        16
Source: 
>     uint ethWei = 1 ether;
>     uint256  fundValue;
>     ^^^^^^^^^^^^^^^^^^
>     uint256  gradeOne;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        17
Source: 
>     uint256  fundValue;
>     uint256  gradeOne;
>     ^^^^^^^^^^^^^^^^^
>     uint256  gradeTwo;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        18
Source: 
>     uint256  gradeOne;
>     uint256  gradeTwo;
>     ^^^^^^^^^^^^^^^^^
>     uint256  gradeThree;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        19
Source: 
>     uint256  gradeTwo;
>     uint256  gradeThree;
>     ^^^^^^^^^^^^^^^^^^^
>     address public mainContract;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        22
Source: 
>     bool public canWithdraw = false;
>     address owner;
>     ^^^^^^^^^^^^^
>     uint256 public totalInvestorCount;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        25
Source: 
> 
>     address payable projectAddress = 0x64d7d8AA5F785FF3Fb894Ac3b505Bd65cFFC562F;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        27
Source: 
> 
>     uint256 closeTime;
>     ^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        43
Source: 
> 
>     mapping(uint256 => uint256) gradeDistribute;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => Invest) public projectInvestor;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        45
Source: 
>     mapping(address => Invest) public projectInvestor;
>     mapping(address => bool) admin;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        64
Source: 
>     modifier isHuman() {
>         address addr = msg.sender;
>         ^^^^^^^^^^^^
>         uint codeLength;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        65
Source: 
>         address addr = msg.sender;
>         uint codeLength;
>         ^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        84
Source: 
>     modifier isContract() {
>         address _addr = msg.sender;
>         ^^^^^^^^^^^^^
>         uint256 _codeLength;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AOQFund
Line:        85
Source: 
>         address _addr = msg.sender;
>         uint256 _codeLength;
>         ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    AOQFund
Line:        250
Source: 
> 
>         msg.sender.transfer(withdrawAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    AOQFund
Line:        250
Source: 
> 
>         msg.sender.transfer(withdrawAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AOQFund
Line:        229
Source: 
>         uint256 three;
>         (,,three,,,,,,,) = mainContractIns.getUserInvestInfo(investor);
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return three;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    AOQFund
Line:        160
Source: 
>         assembly {codeLength := extcodesize(investor)}
>         require(codeLength == 0, "not a valid human address");
>                 ^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AOQFund
Line:        16
Source: 
>     uint ethWei = 1 ether;
>     uint256  fundValue;
>     ^^^^^^^^^^^^^^^^^^
>     uint256  gradeOne;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AOQFund
Line:        17
Source: 
>     uint256  fundValue;
>     uint256  gradeOne;
>     ^^^^^^^^^^^^^^^^^
>     uint256  gradeTwo;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AOQFund
Line:        18
Source: 
>     uint256  gradeOne;
>     uint256  gradeTwo;
>     ^^^^^^^^^^^^^^^^^
>     uint256  gradeThree;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AOQFund
Line:        19
Source: 
>     uint256  gradeTwo;
>     uint256  gradeThree;
>     ^^^^^^^^^^^^^^^^^^^
>     address public mainContract;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AOQFund
Line:        20
Source: 
>     uint256  gradeThree;
>     address public mainContract;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool public canWithdraw = false;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AOQFund
Line:        23
Source: 
>     address owner;
>     uint256 public totalInvestorCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AOQFund
Line:        27
Source: 
> 
>     uint256 closeTime;
>     ^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AOQFund
Line:        29
Source: 
> 
>     uint256 public gradeThreeCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public gradeTwoCount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AOQFund
Line:        30
Source: 
>     uint256 public gradeThreeCount;
>     uint256 public gradeTwoCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public gradeOneCount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AOQFund
Line:        31
Source: 
>     uint256 public gradeTwoCount;
>     uint256 public gradeOneCount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AOQFund
Line:        15
Source: 
> 
>     uint ethWei = 1 ether;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint256  fundValue;

[0m
