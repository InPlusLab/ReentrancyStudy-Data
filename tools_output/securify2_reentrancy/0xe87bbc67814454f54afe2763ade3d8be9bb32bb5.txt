Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.10. Changing pragma version to 0.5.10....
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ParkingResolver
Line:        52
Source: 
> 
>     function setOwner(address owner) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ParkingResolver
Line:        59
Source: 
> 
>     function addr(bytes32 nodehash) external view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _addr;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ParkingResolver
Line:        63
Source: 
> 
>     function setAddr(bytes32 nodehash, address addr) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ParkingResolver
Line:        69
Source: 
> 
>     function text(bytes32 nodehash, string calldata key) external view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _text[key];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ParkingResolver
Line:        73
Source: 
> 
>     function setText(bytes32 nodehash, string calldata key, string calldata value) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ParkingResolver
Line:        79
Source: 
> 
>     function contenthash(bytes32 node) external view returns (bytes memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _contenthash;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ParkingResolver
Line:        83
Source: 
> 
>     function setContenthash(bytes32 nodehash, bytes calldata contenthash) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ParkingResolver
Line:        89
Source: 
> 
>     function supportsInterface(bytes4 interfaceID) external pure returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return (interfaceID == ADDR_INTERFACE_ID ||

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ParkingResolver
Line:        55
Source: 
>         _owner = owner;
>         ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);
>                          ^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ParkingResolver
Line:        55
Source: 
>         _owner = owner;
>         ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ParkingResolver
Line:        41
Source: 
> 
>     constructor(address ens, address addr) public {
>                              ^^^^^^^^^^^^
>         _owner = addr;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ParkingResolver
Line:        52
Source: 
> 
>     function setOwner(address owner) external {
>                       ^^^^^^^^^^^^^
>         require(msg.sender == _owner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ParkingResolver
Line:        63
Source: 
> 
>     function setAddr(bytes32 nodehash, address addr) external {
>                                        ^^^^^^^^^^^^
>         require(msg.sender == _owner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    ParkingResolver
Line:        83
Source: 
> 
>     function setContenthash(bytes32 nodehash, bytes calldata contenthash) external {
>                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ParkingResolver
Line:        26
Source: 
> contract ParkingResolver {
>     bytes4 constant INTERFACE_META_ID         = 0x01ffc9a7;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes4 constant ADDR_INTERFACE_ID         = 0x3b3b57de;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ParkingResolver
Line:        27
Source: 
>     bytes4 constant INTERFACE_META_ID         = 0x01ffc9a7;
>     bytes4 constant ADDR_INTERFACE_ID         = 0x3b3b57de;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes4 constant TEXT_INTERFACE_ID         = 0x59d1d43c;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ParkingResolver
Line:        28
Source: 
>     bytes4 constant ADDR_INTERFACE_ID         = 0x3b3b57de;
>     bytes4 constant TEXT_INTERFACE_ID         = 0x59d1d43c;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes4 constant CONTENTHASH_INTERFACE_ID  = 0xbc1c58d1;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ParkingResolver
Line:        29
Source: 
>     bytes4 constant TEXT_INTERFACE_ID         = 0x59d1d43c;
>     bytes4 constant CONTENTHASH_INTERFACE_ID  = 0xbc1c58d1;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ParkingResolver
Line:        32
Source: 
>     // namehash('addr.reverse')
>     bytes32 constant NODE_RR = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ParkingResolver
Line:        45
Source: 
>         _ens = AbstractENS(ens);
>         ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);
>                          ^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ParkingResolver
Line:        45
Source: 
>         _ens = AbstractENS(ens);
>         ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ParkingResolver
Line:        55
Source: 
>         _owner = owner;
>         ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);
>                          ^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ParkingResolver
Line:        55
Source: 
>         _owner = owner;
>         ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ParkingResolver
Line:        39
Source: 
>     mapping (string => string) private _text;
>     bytes private _contenthash;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ParkingResolver
Line:        45
Source: 
>         _ens = AbstractENS(ens);
>         ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);
>                          ^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ParkingResolver
Line:        45
Source: 
>         _ens = AbstractENS(ens);
>         ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ParkingResolver
Line:        55
Source: 
>         _owner = owner;
>         ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);
>                          ^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ParkingResolver
Line:        55
Source: 
>         _owner = owner;
>         ReverseRegistrar(_ens.owner(NODE_RR)).claim(_owner);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
