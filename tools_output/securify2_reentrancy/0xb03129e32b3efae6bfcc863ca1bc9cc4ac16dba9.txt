pragma directive defines a prior version to 0.6.8. Changing pragma version to 0.6.8....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    FounderPool
Line:        101
Source: 
>     uint256 public bal;
>     function tap() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^
>         require(blocklock <= now, "block");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    FounderPool
Line:        104
Source: 
>           if (bal <= Token.balanceOf(address(this))) {
>           bal = Token.balanceOf(address(this));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    FounderPool
Line:        106
Source: 
>           }
>         Token.transfer(bucket, Token.balanceOf(address(this)) / 24);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         blocklock = now + 14 days;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    FounderPool
Line:        103
Source: 
>         require(blocklock <= now, "block");
>           if (bal <= Token.balanceOf(address(this))) {
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           bal = Token.balanceOf(address(this));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    FounderPool
Line:        106
Source: 
>           }
>         Token.transfer(bucket, Token.balanceOf(address(this)) / 24);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         blocklock = now + 14 days;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    FounderPool
Line:        89
Source: 
> contract FounderPool {
>     IERC20 public Token;
>     ^^^^^^^^^^^^^^^^^^^
>     uint256 public blocklock;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    FounderPool
Line:        103
Source: 
>         require(blocklock <= now, "block");
>           if (bal <= Token.balanceOf(address(this))) {
>                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           bal = Token.balanceOf(address(this));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    FounderPool
Line:        104
Source: 
>           if (bal <= Token.balanceOf(address(this))) {
>           bal = Token.balanceOf(address(this));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    FounderPool
Line:        106
Source: 
>           }
>         Token.transfer(bucket, Token.balanceOf(address(this)) / 24);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         blocklock = now + 14 days;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    FounderPool
Line:        106
Source: 
>           }
>         Token.transfer(bucket, Token.balanceOf(address(this)) / 24);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         blocklock = now + 14 days;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    FounderPool
Line:        90
Source: 
>     IERC20 public Token;
>     uint256 public blocklock;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     address public bucket;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    FounderPool
Line:        100
Source: 
>     }
>     uint256 public bal;
>     ^^^^^^^^^^^^^^^^^^
>     function tap() public {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    FounderPool
Line:        104
Source: 
>           if (bal <= Token.balanceOf(address(this))) {
>           bal = Token.balanceOf(address(this));
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>           }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    FounderPool
Line:        107
Source: 
>         Token.transfer(bucket, Token.balanceOf(address(this)) / 24);
>         blocklock = now + 14 days;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    FounderPool
Line:        106
Source: 
>           }
>         Token.transfer(bucket, Token.balanceOf(address(this)) / 24);
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         blocklock = now + 14 days;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    FounderPool
Line:        106
Source: 
>           }
>         Token.transfer(bucket, Token.balanceOf(address(this)) / 24);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         blocklock = now + 14 days;

[0m
