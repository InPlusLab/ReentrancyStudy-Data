Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UNYCrowdSale
Line:        108
Source: 
> 
>     function setClose(bool status) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner, "sender is not owner");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UNYCrowdSale
Line:        115
Source: 
> 
>     function withdrawETH(address payable recipient) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner, "sender is not owner");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    UNYCrowdSale
Line:        127
Source: 
> 
>     function withdrawUNY(address recipient) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner, "sender is not owner");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    UNYCrowdSale
Line:        108
Source: 
> 
>     function setClose(bool status) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner, "sender is not owner");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    UNYCrowdSale
Line:        127
Source: 
> 
>     function withdrawUNY(address recipient) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner, "sender is not owner");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    UNYCrowdSale
Line:        115
Source: 
> 
>     function withdrawETH(address payable recipient) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _owner, "sender is not owner");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    UNYCrowdSale
Line:        100
Source: 
> 
>         _token.transfer(msg.sender, expected);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    UNYCrowdSale
Line:        76
Source: 
>     uint256[] private _phaseGoals = [
>         8000000000000000000000,
>         ^^^^^^^^^^^^^^^^^^^^^^
>         17000000000000000000000,

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    UNYCrowdSale
Line:        77
Source: 
>         8000000000000000000000,
>         17000000000000000000000,
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         27000000000000000000000

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    UNYCrowdSale
Line:        78
Source: 
>         17000000000000000000000,
>         27000000000000000000000
>         ^^^^^^^^^^^^^^^^^^^^^^^
>     ];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    UNYCrowdSale
Line:        120
Source: 
>         if (balance > 0) {
>             recipient.transfer(balance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    UNYCrowdSale
Line:        120
Source: 
>         if (balance > 0) {
>             recipient.transfer(balance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    UNYCrowdSale
Line:        120
Source: 
>         if (balance > 0) {
>             recipient.transfer(balance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return true;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    UNYCrowdSale
Line:        130
Source: 
> 
>         uint256 balance = _token.balanceOf(address(this));
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (balance > 0) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UNYCrowdSale
Line:        100
Source: 
> 
>         _token.transfer(msg.sender, expected);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UNYCrowdSale
Line:        132
Source: 
>         if (balance > 0) {
>             _token.transfer(recipient, balance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UNYCrowdSale
Line:        102
Source: 
> 
>         _raisedAmount = _raisedAmount.add(expected);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (_phase < 2 && _raisedAmount >= _phaseGoals[_phase]) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    UNYCrowdSale
Line:        104
Source: 
>         if (_phase < 2 && _raisedAmount >= _phaseGoals[_phase]) {
>             _phase = _phase + 1;
>             ^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    UNYCrowdSale
Line:        100
Source: 
> 
>         _token.transfer(msg.sender, expected);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    UNYCrowdSale
Line:        132
Source: 
>         if (balance > 0) {
>             _token.transfer(recipient, balance);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return true;

[0m
