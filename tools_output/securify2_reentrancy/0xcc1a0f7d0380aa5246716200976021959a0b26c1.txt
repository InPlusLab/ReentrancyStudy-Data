pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        71
Source: 
>    */
>   function transferOwnership(address newOwner) onlyOwner public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(newOwner != address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DEFISocialPreSale
Line:        133
Source: 
> 
>   function start(address payable _wallet, uint256 _minInvestment, uint256 _cap, uint256 _rate) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DEFISocialPreSale
Line:        147
Source: 
> 
>      function tokBought() view public  returns (uint256) {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return tokensBought;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DEFISocialPreSale
Line:        150
Source: 
>   }
>     function tokLeft() view public  returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return tokensLeft;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        133
Source: 
> 
>   function start(address payable _wallet, uint256 _minInvestment, uint256 _cap, uint256 _rate) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        171
Source: 
>    */
>   function buyTokens(address beneficiary, uint256 amount)  public payable {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(beneficiary != 0x0000000000000000000000000000000000000000, "Error");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DEFISocialPreSale
Line:        184
Source: 
> 
>     require(Token(token).transfer(beneficiary, tokens), "Could not transfer tokens.");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     tokensBought = tokensBought.add(tokens);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DEFISocialPreSale
Line:        87
Source: 
>   //DEFISocial public token;
>     address payable public constant token = payable(0x731A30897bF16597c0D5601205019C947BF15c6E);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        196
Source: 
>   function forwardFunds() internal {
>     wallet.transfer(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    DEFISocialPreSale
Line:        196
Source: 
>   function forwardFunds() internal {
>     wallet.transfer(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        184
Source: 
> 
>     require(Token(token).transfer(beneficiary, tokens), "Could not transfer tokens.");
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     tokensBought = tokensBought.add(tokens);

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        90
Source: 
>   // address where funds are collected
>   address payable public wallet;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        93
Source: 
>   // amount of raised money in wei
>   uint256 public weiRaised;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>   

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        97
Source: 
>   // cap above which the crowdsale is ended
>   uint256 public cap;
>   ^^^^^^^^^^^^^^^^^^
>   uint256 public tokensLeft;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        98
Source: 
>   uint256 public cap;
>   uint256 public tokensLeft;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public tokensBought;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        99
Source: 
>   uint256 public tokensLeft;
>   uint256 public tokensBought;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        101
Source: 
> 
>   uint256 public minInvestment;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        103
Source: 
> 
>   uint256 public rate;
>   ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    DEFISocialPreSale
Line:        105
Source: 
> 
>   bool public isFinalized ;
>   ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        196
Source: 
>   function forwardFunds() internal {
>     wallet.transfer(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        185
Source: 
>     require(Token(token).transfer(beneficiary, tokens), "Could not transfer tokens.");
>     tokensBought = tokensBought.add(tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     tokensLeft = tokensLeft.sub(tokens);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        186
Source: 
>     tokensBought = tokensBought.add(tokens);
>     tokensLeft = tokensLeft.sub(tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // update weiRaised

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DEFISocialPreSale
Line:        188
Source: 
>     // update weiRaised
>     weiRaised = weiRaised.add(weiAmount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     TokenPurchase(msg.sender, beneficiary, weiAmount, tokens);

[0m
