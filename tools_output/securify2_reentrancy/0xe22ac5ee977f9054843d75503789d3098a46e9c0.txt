Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Initializable
Line:        61
Source: 
>     uint256 cs;
>     assembly { cs := extcodesize(address) }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return cs == 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Initializable
Line:        66
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ZOSLibOwnable
Line:        100
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ZOSLibOwnable
Line:        125
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ZOSLibOwnable
Line:        134
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ZOSLibOwnable
Line:        100
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ZOSLibOwnable
Line:        125
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ZOSLibOwnable
Line:        134
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AvatarNameRegistry
Line:        203
Source: 
>     */
>     function initialize(
>     ^^^^^^^^^^^^^^^^^^^^
>         ERC20Interface _mana,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    AvatarNameRegistry
Line:        259
Source: 
> 
>         manaToken.transferFrom(_beneficiary, address(this), price);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         manaToken.burn(price);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    AvatarNameRegistry
Line:        260
Source: 
>         manaToken.transferFrom(_beneficiary, address(this), price);
>         manaToken.burn(price);
>         ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    AvatarNameRegistry
Line:        354
Source: 
>         require(
>             manaToken.balanceOf(_user) >= price,
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "Insufficient funds"

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    AvatarNameRegistry
Line:        358
Source: 
>         require(
>             manaToken.allowance(_user, address(this)) >= price,
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "The contract is not authorized to use MANA on sender behalf"

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ZOSLibOwnable
Line:        134
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AvatarNameRegistry
Line:        293
Source: 
>     */
>     function registerUsername(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _beneficiary,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        203
Source: 
>     */
>     function initialize(
>     ^^^^^^^^^^^^^^^^^^^^
>         ERC20Interface _mana,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        235
Source: 
>     */
>     function setAllowed(address _account, bool _allowed) external onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_account != msg.sender, "You can not manage your role");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        308
Source: 
>     */
>     function setMetadata(string calldata _metadata) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(userExists(msg.sender), "The user does not exist");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        320
Source: 
>     */
>     function userExists(address _user) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Data memory data = user[_user];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        331
Source: 
>     */
>     function isUsernameAvailable(string memory _username) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return usernames[_username] == address(0);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AvatarNameRegistry
Line:        259
Source: 
> 
>         manaToken.transferFrom(_beneficiary, address(this), price);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         manaToken.burn(price);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AvatarNameRegistry
Line:        260
Source: 
>         manaToken.transferFrom(_beneficiary, address(this), price);
>         manaToken.burn(price);
>         ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        205
Source: 
>         ERC20Interface _mana,
>         address _owner
>         ^^^^^^^^^^^^^^
>     )

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Initializable
Line:        66
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        7
Source: 
> 
> pragma solidity >=0.4.24 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        71
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        151
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        190
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Initializable
Line:        40
Source: 
> 
>     bool isTopLevelCall = !initializing;
>     ^^^^^^^^^^^^^^^^^^^
>     if (isTopLevelCall) {

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AvatarNameStorage
Line:        171
Source: 
>     // Stores usernames used
>     mapping (string => address) usernames;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Stores account data

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        210
Source: 
>         manaToken = _mana;
>         price = 100000000000000000000; // 100 in wei
>                 ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AvatarNameRegistry
Line:        354
Source: 
>         require(
>             manaToken.balanceOf(_user) >= price,
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "Insufficient funds"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AvatarNameRegistry
Line:        358
Source: 
>         require(
>             manaToken.allowance(_user, address(this)) >= price,
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "The contract is not authorized to use MANA on sender behalf"

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        259
Source: 
> 
>         manaToken.transferFrom(_beneficiary, address(this), price);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         manaToken.burn(price);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        260
Source: 
>         manaToken.transferFrom(_beneficiary, address(this), price);
>         manaToken.burn(price);
>         ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Initializable
Line:        62
Source: 
>     assembly { cs := extcodesize(address) }
>     return cs == 0;
>            ^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Initializable
Line:        27
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Initializable
Line:        32
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    AvatarNameStorage
Line:        162
Source: 
>     // Storage
>     ERC20Interface public manaToken;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public price;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    AvatarNameStorage
Line:        163
Source: 
>     ERC20Interface public manaToken;
>     uint256 public price;
>     ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        27
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        32
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        66
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AvatarNameStorage
Line:        162
Source: 
>     // Storage
>     ERC20Interface public manaToken;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public price;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AvatarNameStorage
Line:        163
Source: 
>     ERC20Interface public manaToken;
>     uint256 public price;
>     ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        66
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    AvatarNameRegistry
Line:        311
Source: 
> 
>         user[msg.sender].metadata = _metadata;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit MetadataChanged(msg.sender, _metadata);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ZOSLibOwnable
Line:        145
Source: 
>         emit OwnershipTransferred(_owner, newOwner);
>         _owner = newOwner;
>         ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Initializable
Line:        42
Source: 
>     if (isTopLevelCall) {
>       initializing = true;
>       ^^^^^^^^^^^^^^^^^^^
>       initialized = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Initializable
Line:        43
Source: 
>       initializing = true;
>       initialized = true;
>       ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        209
Source: 
>     {
>         manaToken = _mana;
>         ^^^^^^^^^^^^^^^^^
>         price = 100000000000000000000; // 100 in wei

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        210
Source: 
>         manaToken = _mana;
>         price = 100000000000000000000; // 100 in wei
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    AvatarNameRegistry
Line:        213
Source: 
>         // Allow owner to register usernames
>         allowed[_owner] = true;
>         ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Initializable
Line:        49
Source: 
>     if (isTopLevelCall) {
>       initializing = false;
>       ^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    AvatarNameRegistry
Line:        259
Source: 
> 
>         manaToken.transferFrom(_beneficiary, address(this), price);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         manaToken.burn(price);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        27
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        32
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        66
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AvatarNameStorage
Line:        162
Source: 
>     // Storage
>     ERC20Interface public manaToken;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public price;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AvatarNameStorage
Line:        163
Source: 
>     ERC20Interface public manaToken;
>     uint256 public price;
>     ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AvatarNameStorage
Line:        171
Source: 
>     // Stores usernames used
>     mapping (string => address) usernames;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Stores account data

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AvatarNameStorage
Line:        173
Source: 
>     // Stores account data
>     mapping (address => Data) public user;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // Stores account roles

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AvatarNameStorage
Line:        175
Source: 
>     // Stores account roles
>     mapping (address => bool) public allowed;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        66
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
