pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ETH_3Day
Line:        62
Source: 
>     address public manager;
>     uint256 public day = 3 days;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public rechargeTime;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ETH_3Day
Line:        64
Source: 
>     uint256 public rechargeTime;
>     uint256 public minAmount = 1 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public percentage = 900;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ETH_3Day
Line:        65
Source: 
>     uint256 public minAmount = 1 ether;
>     uint256 public percentage = 900;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public totalUsers;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        40
Source: 
>     function mul(uint256 a, uint256 b) internal pure returns (uint256) {
>         if (a == 0) {
>             ^^^^^^
>             return 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        45
Source: 
>         uint256 c = a * b;
>         require(c / a == b, "SafeMath: multiplication overflow");
>                 ^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    ETH_3Day
Line:        205
Source: 
>     // 当前已提取数量
>     function numberWithdrawn(address addr) view public isAddress(addr) returns(uint256) {
>      ^^^^^^^^^^^^^
>         return user[addr].amountWithdrawn;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ETH_3Day
Line:        92
Source: 
>     // 充值
>     function deposit(address referrer,uint256 value)  public {
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(value >= minAmount,"Top up cannot be less than 1 eth");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ETH_3Day
Line:        121
Source: 
>     function withdraw(uint256 value) public {
>         require(value > 0 && directPushMultiple(msg.sender) >= 3,"3 times withdrawal");
>                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // 验证是否有足够提取额度

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ETH_3Day
Line:        141
Source: 
>     // 最后10笔交易
>     function getRec10() view public returns(RechargeInfo[] memory){
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 l = rechargeAddress.length;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ETH_3Day
Line:        143
Source: 
>         uint256 l = rechargeAddress.length;
>         uint256 a = 0;
>                       
>         uint256 i = 0;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ETH_3Day
Line:        193
Source: 
>     // 当前收益
>     function getIncome(address addr) view public isAddress(addr) returns(uint256){
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 multiple = directPushMultiple(addr);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ETH_3Day
Line:        224
Source: 
>         // 追投数量
>         uint256 ztAmount = (dirTotal.sub(userTotal)).div(CONTRACT_BALANCE_STEP);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // uint256 t = ztAmount.div(CONTRACT_BALANCE_STEP);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ETH_3Day
Line:        248
Source: 
>     function getDirectLength(address addr) view public isAddress(addr) returns(uint256){
>         return user[addr].directPush.length;
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ETH_3Day
Line:        257
Source: 
>     
>     // 权限转移
> ^^^^^^^^^^^
>     function ownerTransfer(address newOwner) public onlyOwner isAddress(newOwner) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ETH_3Day
Line:        262
Source: 
>     
>     modifier isAddress(address addr) {
>                               ^^^^^^^^
>         require(addr != address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ETH_3Day
Line:        272
Source: 
> 
> }
>                             

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    ETH_3Day
Line:        97
Source: 
>         
>         IERC20(ERC20).transferFrom(msg.sender,address(this),value);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         UserInfo storage u = user[msg.sender];

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    ETH_3Day
Line:        166
Source: 
>         for (;a < rechargeAddress.length; a++){
>             user[rechargeAddress[a].rec_addr].distributionIncome72 = user[rechargeAddress[a].rec_addr].distributionIncome72.add(total.div(100));
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    ETH_3Day
Line:        127
Source: 
>         IERC20(ERC20).transfer(msg.sender,value);
>         user[msg.sender].amountWithdrawn = user[msg.sender].amountWithdrawn.add(value);
>                                                                 ^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    ETH_3Day
Line:        136
Source: 
>     // 充值总笔数
>     function getRecTotal() view public returns(uint256){
>                                               ^^^^^^^^^^
>         return rechargeAddress.length;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    ETH_3Day
Line:        252
Source: 
>     // Owner 提币
>     function ownerWitETH(uint256 value) public onlyOwner{
>                                             ^^^^^^^^^^^^^
>         require(getPoolETH() >= value);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    ETH_3Day
Line:        268
Source: 
>     modifier onlyOwner {
>         require(manager == msg.sender);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    ETH_3Day
Line:        92
Source: 
>     // 充值
>     function deposit(address referrer,uint256 value)  public {
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(value >= minAmount,"Top up cannot be less than 1 eth");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath
Line:        44
Source: 
> 
>         uint256 c = a * b;
>                     ^^^^^
>         require(c / a == b, "SafeMath: multiplication overflow");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ETH_3Day
Line:        97
Source: 
>         
>         IERC20(ERC20).transferFrom(msg.sender,address(this),value);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         UserInfo storage u = user[msg.sender];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ETH_3Day
Line:        58
Source: 
> 
> contract ETH_3Day {
> ^^^^^^^^^^^^^^^^^^^
>     using SafeMath for uint256;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ETH_3Day
Line:        68
Source: 
>     
>     address public ERC20;
>     ^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ETH_3Day
Line:        146
Source: 
>         if (rechargeAddress.length>10){
>             l = 10;
>         ^^^^^^^^^
>             a = rechargeAddress.length.sub(10);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    ETH_3Day
Line:        272
Source: 
> 
> }
>                                                                                                                                                                           

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ETH_3Day
Line:        166
Source: 
>         for (;a < rechargeAddress.length; a++){
>             user[rechargeAddress[a].rec_addr].distributionIncome72 = user[rechargeAddress[a].rec_addr].distributionIncome72.add(total.div(100));
>                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ETH_3Day
Line:        97
Source: 
>         
>         IERC20(ERC20).transferFrom(msg.sender,address(this),value);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         UserInfo storage u = user[msg.sender];

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ETH_3Day
Line:        127
Source: 
>         IERC20(ERC20).transfer(msg.sender,value);
>         user[msg.sender].amountWithdrawn = user[msg.sender].amountWithdrawn.add(value);
>                                                                 ^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ETH_3Day
Line:        136
Source: 
>     // 充值总笔数
>     function getRecTotal() view public returns(uint256){
>                                               ^^^^^^^^^^
>         return rechargeAddress.length;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ETH_3Day
Line:        252
Source: 
>     // Owner 提币
>     function ownerWitETH(uint256 value) public onlyOwner{
>                                             ^^^^^^^^^^^^^
>         require(getPoolETH() >= value);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ETH_3Day
Line:        268
Source: 
>     modifier onlyOwner {
>         require(manager == msg.sender);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    ETH_3Day
Line:        63
Source: 
>     uint256 public day = 3 days;
>     uint256 public rechargeTime;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public minAmount = 1 ether;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    ETH_3Day
Line:        66
Source: 
>     uint256 public percentage = 900;
>     uint256 public totalUsers;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ETH_3Day
Line:        167
Source: 
>             user[rechargeAddress[a].rec_addr].distributionIncome72 = user[rechargeAddress[a].rec_addr].distributionIncome72.add(total.div(100));
>         }
>          
>         return;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ETH_3Day
Line:        131
Source: 
>     // pool 总量
>     function getPoolETH() view public returns(uint256){
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return IERC20(ERC20).balanceOf(address(this));

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ETH_3Day
Line:        115
Source: 
> 		balance[msg.sender] = balance[msg.sender].add(value);
> 		rechargeAddress.push(RechargeInfo({rec_addr:msg.sender,rec_value:value,rec_time:block.timestamp}));
>                                                                               ^^^^^^^^^^^^^^^^^^^^^^^
> 		rechargeTime = block.timestamp;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ETH_3Day
Line:        120
Source: 
>     // 提币
>     function withdraw(uint256 value) public {
>                        ^^^^^^^^^^^^^^^^^^^^^^
>         require(value > 0 && directPushMultiple(msg.sender) >= 3,"3 times withdrawal");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ETH_3Day
Line:        97
Source: 
>         
>         IERC20(ERC20).transferFrom(msg.sender,address(this),value);
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         UserInfo storage u = user[msg.sender];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ETH_3Day
Line:        127
Source: 
>         IERC20(ERC20).transfer(msg.sender,value);
>         user[msg.sender].amountWithdrawn = user[msg.sender].amountWithdrawn.add(value);
>                                                                 ^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ETH_3Day
Line:        252
Source: 
>     // Owner 提币
>     function ownerWitETH(uint256 value) public onlyOwner{
>                                             ^^^^^^^^^^^^^
>         require(getPoolETH() >= value);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    ETH_3Day
Line:        268
Source: 
>     modifier onlyOwner {
>         require(manager == msg.sender);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    ETH_3Day
Line:        120
Source: 
>     // 提币
>     function withdraw(uint256 value) public {
>                                       ^^^^^^^
>         require(value > 0 && directPushMultiple(msg.sender) >= 3,"3 times withdrawal");

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    ETH_3Day
Line:        180
Source: 
>     // 直推倍数
>     function directPushMultiple(address addr) view public isAddress(addr) returns(uint256) {
>                  ^^^^^^^^^^^^^^^
>         if(balance[addr] == 0){

[0m
