Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        210
Source: 
>     //Get token list
>     tokens = underlyingBPool.getCurrentTokens();
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 length = tokens.length;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        237
Source: 
>     uint256 missingDecimals = 18 - decimals[index];
>     uint256 bi = bmul(pool.bPool().getBalance(tokens[index]), BONE * 10**(missingDecimals));
>                       ^^^^^^^^^^^^
>     return bmul(bi, pi);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        237
Source: 
>     uint256 missingDecimals = 18 - decimals[index];
>     uint256 bi = bmul(pool.bPool().getBalance(tokens[index]), BONE * 10**(missingDecimals));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return bmul(bi, pi);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        234
Source: 
>   function getEthBalanceByToken(uint256 index) internal view returns (uint256) {
>     uint256 pi = isPeggedToEth[index] ? BONE : uint256(priceOracle.getAssetPrice(tokens[index]));
>                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(pi > 0, 'ERR_NO_ORACLE_PRICE');

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        251
Source: 
>     }
>     return bdiv(totalEth, pool.totalSupply());
>                           ^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        222
Source: 
>     for (uint8 i = 0; i < length; i++) {
>       weights.push(underlyingBPool.getNormalizedWeight(tokens[i]));
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    BNum
Line:        90
Source: 
>   function bmul(uint256 a, uint256 b) internal pure returns (uint256) {
>     uint256 c0 = a * b;
>                  ^^^^^
>     require(a == 0 || c0 / a == b, 'ERR_MUL_OVERFLOW');

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        222
Source: 
>     for (uint8 i = 0; i < length; i++) {
>       weights.push(underlyingBPool.getNormalizedWeight(tokens[i]));
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        210
Source: 
>     //Get token list
>     tokens = underlyingBPool.getCurrentTokens();
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 length = tokens.length;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        237
Source: 
>     uint256 missingDecimals = 18 - decimals[index];
>     uint256 bi = bmul(pool.bPool().getBalance(tokens[index]), BONE * 10**(missingDecimals));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return bmul(bi, pi);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        234
Source: 
>   function getEthBalanceByToken(uint256 index) internal view returns (uint256) {
>     uint256 pi = isPeggedToEth[index] ? BONE : uint256(priceOracle.getAssetPrice(tokens[index]));
>                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(pi > 0, 'ERR_NO_ORACLE_PRICE');

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        251
Source: 
>     }
>     return bdiv(totalEth, pool.totalSupply());
>                           ^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        208
Source: 
> 
>     BPool underlyingBPool = _pool.bPool();
>                             ^^^^^^^^^^^^^
>     //Get token list

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        222
Source: 
>     for (uint8 i = 0; i < length; i++) {
>       weights.push(underlyingBPool.getNormalizedWeight(tokens[i]));
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        237
Source: 
>     uint256 missingDecimals = 18 - decimals[index];
>     uint256 bi = bmul(pool.bPool().getBalance(tokens[index]), BONE * 10**(missingDecimals));
>                       ^^^^^^^^^^^^
>     return bmul(bi, pi);

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        191
Source: 
>   uint8[] public decimals;
>   IPriceOracle public priceOracle;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    BNum
Line:        66
Source: 
>   function bfloor(uint256 a) internal pure returns (uint256) {
>     return btoi(a) * BONE;
>            ^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    BNum
Line:        132
Source: 
> 
>     uint256 wholePow = bpowi(base, btoi(whole));
>                                    ^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        222
Source: 
>     for (uint8 i = 0; i < length; i++) {
>       weights.push(underlyingBPool.getNormalizedWeight(tokens[i]));
>                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    NaiveBalancerSmartPoolPriceProvider
Line:        237
Source: 
>     uint256 missingDecimals = 18 - decimals[index];
>     uint256 bi = bmul(pool.bPool().getBalance(tokens[index]), BONE * 10**(missingDecimals));
>                       ^^^^^^^^^^^^
>     return bmul(bi, pi);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        38
Source: 
> 
>   uint256 public constant MIN_BOUND_TOKENS = 2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_BOUND_TOKENS = 8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        39
Source: 
>   uint256 public constant MIN_BOUND_TOKENS = 2;
>   uint256 public constant MAX_BOUND_TOKENS = 8;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        41
Source: 
> 
>   uint256 public constant MIN_FEE = BONE / 10**6;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_FEE = BONE / 10;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        42
Source: 
>   uint256 public constant MIN_FEE = BONE / 10**6;
>   uint256 public constant MAX_FEE = BONE / 10;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant EXIT_FEE = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        43
Source: 
>   uint256 public constant MAX_FEE = BONE / 10;
>   uint256 public constant EXIT_FEE = 0;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        45
Source: 
> 
>   uint256 public constant MIN_WEIGHT = BONE;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_WEIGHT = BONE * 50;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        46
Source: 
>   uint256 public constant MIN_WEIGHT = BONE;
>   uint256 public constant MAX_WEIGHT = BONE * 50;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_TOTAL_WEIGHT = BONE * 50;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        47
Source: 
>   uint256 public constant MAX_WEIGHT = BONE * 50;
>   uint256 public constant MAX_TOTAL_WEIGHT = BONE * 50;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MIN_BALANCE = BONE / 10**12;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        48
Source: 
>   uint256 public constant MAX_TOTAL_WEIGHT = BONE * 50;
>   uint256 public constant MIN_BALANCE = BONE / 10**12;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        50
Source: 
> 
>   uint256 public constant INIT_POOL_SUPPLY = BONE * 100;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        52
Source: 
> 
>   uint256 public constant MIN_BPOW_BASE = 1 wei;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        53
Source: 
>   uint256 public constant MIN_BPOW_BASE = 1 wei;
>   uint256 public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant BPOW_PRECISION = BONE / 10**10;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        54
Source: 
>   uint256 public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;
>   uint256 public constant BPOW_PRECISION = BONE / 10**10;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        56
Source: 
> 
>   uint256 public constant MAX_IN_RATIO = BONE / 2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        57
Source: 
>   uint256 public constant MAX_IN_RATIO = BONE / 2;
>   uint256 public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        38
Source: 
> 
>   uint256 public constant MIN_BOUND_TOKENS = 2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_BOUND_TOKENS = 8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        39
Source: 
>   uint256 public constant MIN_BOUND_TOKENS = 2;
>   uint256 public constant MAX_BOUND_TOKENS = 8;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        41
Source: 
> 
>   uint256 public constant MIN_FEE = BONE / 10**6;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_FEE = BONE / 10;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        42
Source: 
>   uint256 public constant MIN_FEE = BONE / 10**6;
>   uint256 public constant MAX_FEE = BONE / 10;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant EXIT_FEE = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        43
Source: 
>   uint256 public constant MAX_FEE = BONE / 10;
>   uint256 public constant EXIT_FEE = 0;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        45
Source: 
> 
>   uint256 public constant MIN_WEIGHT = BONE;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_WEIGHT = BONE * 50;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        46
Source: 
>   uint256 public constant MIN_WEIGHT = BONE;
>   uint256 public constant MAX_WEIGHT = BONE * 50;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_TOTAL_WEIGHT = BONE * 50;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        47
Source: 
>   uint256 public constant MAX_WEIGHT = BONE * 50;
>   uint256 public constant MAX_TOTAL_WEIGHT = BONE * 50;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MIN_BALANCE = BONE / 10**12;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        48
Source: 
>   uint256 public constant MAX_TOTAL_WEIGHT = BONE * 50;
>   uint256 public constant MIN_BALANCE = BONE / 10**12;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        50
Source: 
> 
>   uint256 public constant INIT_POOL_SUPPLY = BONE * 100;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        52
Source: 
> 
>   uint256 public constant MIN_BPOW_BASE = 1 wei;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        53
Source: 
>   uint256 public constant MIN_BPOW_BASE = 1 wei;
>   uint256 public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant BPOW_PRECISION = BONE / 10**10;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        54
Source: 
>   uint256 public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;
>   uint256 public constant BPOW_PRECISION = BONE / 10**10;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        56
Source: 
> 
>   uint256 public constant MAX_IN_RATIO = BONE / 2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        57
Source: 
>   uint256 public constant MAX_IN_RATIO = BONE / 2;
>   uint256 public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        38
Source: 
> 
>   uint256 public constant MIN_BOUND_TOKENS = 2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_BOUND_TOKENS = 8;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        39
Source: 
>   uint256 public constant MIN_BOUND_TOKENS = 2;
>   uint256 public constant MAX_BOUND_TOKENS = 8;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        41
Source: 
> 
>   uint256 public constant MIN_FEE = BONE / 10**6;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_FEE = BONE / 10;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        42
Source: 
>   uint256 public constant MIN_FEE = BONE / 10**6;
>   uint256 public constant MAX_FEE = BONE / 10;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant EXIT_FEE = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        43
Source: 
>   uint256 public constant MAX_FEE = BONE / 10;
>   uint256 public constant EXIT_FEE = 0;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        45
Source: 
> 
>   uint256 public constant MIN_WEIGHT = BONE;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_WEIGHT = BONE * 50;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        46
Source: 
>   uint256 public constant MIN_WEIGHT = BONE;
>   uint256 public constant MAX_WEIGHT = BONE * 50;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_TOTAL_WEIGHT = BONE * 50;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        47
Source: 
>   uint256 public constant MAX_WEIGHT = BONE * 50;
>   uint256 public constant MAX_TOTAL_WEIGHT = BONE * 50;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MIN_BALANCE = BONE / 10**12;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        48
Source: 
>   uint256 public constant MAX_TOTAL_WEIGHT = BONE * 50;
>   uint256 public constant MIN_BALANCE = BONE / 10**12;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        50
Source: 
> 
>   uint256 public constant INIT_POOL_SUPPLY = BONE * 100;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        52
Source: 
> 
>   uint256 public constant MIN_BPOW_BASE = 1 wei;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        53
Source: 
>   uint256 public constant MIN_BPOW_BASE = 1 wei;
>   uint256 public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant BPOW_PRECISION = BONE / 10**10;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        54
Source: 
>   uint256 public constant MAX_BPOW_BASE = (2 * BONE) - 1 wei;
>   uint256 public constant BPOW_PRECISION = BONE / 10**10;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        56
Source: 
> 
>   uint256 public constant MAX_IN_RATIO = BONE / 2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    BConst
Line:        57
Source: 
>   uint256 public constant MAX_IN_RATIO = BONE / 2;
>   uint256 public constant MAX_OUT_RATIO = (BONE / 3) + 1 wei;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
