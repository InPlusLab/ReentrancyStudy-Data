Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SCROOGE
Line:        288
Source: 
>    
>     string public symbol = "SCRG";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public  name = "SCROOGE";

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SCROOGE
Line:        289
Source: 
>     string public symbol = "SCRG";
>     string public  name = "SCROOGE";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SCROOGE
Line:        290
Source: 
>     string public  name = "SCROOGE";
>     uint256 public decimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 _totalSupply = 3000 * 10 ** (18); // 3000 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    SCROOGE
Line:        298
Source: 
>     uint256 public ethsReceived;
>     uint256 ethCap = 100 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => bool) whitelisted;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        266
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SCROOGE
Line:        413
Source: 
>     // ------------------------------------------------------------------------
>     function transfer(address to, uint256 tokens) public override returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // prevent transfer to 0x0, use burn instead

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Owned
Line:        266
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SCROOGE
Line:        413
Source: 
>     // ------------------------------------------------------------------------
>     function transfer(address to, uint256 tokens) public override returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // prevent transfer to 0x0, use burn instead

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    SCROOGE
Line:        435
Source: 
>     // ------------------------------------------------------------------------
>     function transferFrom(address from, address to, uint256 tokens) external override returns (bool success){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(tokens <= allowed[from][msg.sender]); //check allowance

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SCROOGE
Line:        386
Source: 
>     // ------------------------------------------------------------------------
>     function balanceOf(address tokenOwner) external override view returns (uint256 balance) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return balances[tokenOwner];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SCROOGE
Line:        394
Source: 
>     // ------------------------------------------------------------------------
>     function approve(address spender, uint256 tokens) external override returns (bool success){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowed[msg.sender][spender] = tokens;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SCROOGE
Line:        404
Source: 
>     // ------------------------------------------------------------------------
>     function allowance(address tokenOwner, address spender) external override view returns (uint256 remaining) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return allowed[tokenOwner][spender];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    SCROOGE
Line:        336
Source: 
>         // send received funds to the owner
>         owner.transfer(investment);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SCROOGE
Line:        291
Source: 
>     uint256 public decimals = 18;
>     uint256 _totalSupply = 3000 * 10 ** (18); // 3000 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SCROOGE
Line:        293
Source: 
>     
>     mapping(address => uint256) balances;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => mapping(address => uint256)) allowed;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SCROOGE
Line:        294
Source: 
>     mapping(address => uint256) balances;
>     mapping(address => mapping(address => uint256)) allowed;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SCROOGE
Line:        296
Source: 
>     
>     uint256 saleStart;
>     ^^^^^^^^^^^^^^^^^
>     uint256 public ethsReceived;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SCROOGE
Line:        298
Source: 
>     uint256 public ethsReceived;
>     uint256 ethCap = 100 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => bool) whitelisted;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SCROOGE
Line:        299
Source: 
>     uint256 ethCap = 100 ether;
>     mapping(address => bool) whitelisted;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    SCROOGE
Line:        328
Source: 
>             // return the extra investment
>             msg.sender.transfer(msg.value.sub(investment));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    SCROOGE
Line:        336
Source: 
>         // send received funds to the owner
>         owner.transfer(investment);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SCROOGE
Line:        328
Source: 
>             // return the extra investment
>             msg.sender.transfer(msg.value.sub(investment));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    SCROOGE
Line:        336
Source: 
>         // send received funds to the owner
>         owner.transfer(investment);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    SCROOGE
Line:        297
Source: 
>     uint256 saleStart;
>     uint256 public ethsReceived;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 ethCap = 100 ether;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    SCROOGE
Line:        395
Source: 
>     function approve(address spender, uint256 tokens) external override returns (bool success){
>         allowed[msg.sender][spender] = tokens;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender,spender,tokens);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SCROOGE
Line:        288
Source: 
>    
>     string public symbol = "SCRG";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public  name = "SCROOGE";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SCROOGE
Line:        289
Source: 
>     string public symbol = "SCRG";
>     string public  name = "SCROOGE";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public decimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SCROOGE
Line:        290
Source: 
>     string public  name = "SCROOGE";
>     uint256 public decimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 _totalSupply = 3000 * 10 ** (18); // 3000 

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    SCROOGE
Line:        314
Source: 
>     modifier saleOpen{
>         if(block.timestamp <= saleStart.add(1 hours)) // within the first hour
>            ^^^^^^^^^^^^^^^
>             require(whitelisted[msg.sender], "Only whitelisted addresses allowed during 1st hour");

[0m
