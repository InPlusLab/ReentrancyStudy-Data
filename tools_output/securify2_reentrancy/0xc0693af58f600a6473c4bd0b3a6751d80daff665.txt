Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Get10Skt
Line:        218
Source: 
> 
>     ISkt public Skt = ISkt(0x2fB74C37Fb2C8DC76beA1910737aa9E3e2b53535);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ISktPublicSale public Skt_PUBLIC_SALE;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Get10Skt
Line:        222
Source: 
>     uint256 public WEI_MIN = 1 ether;
>     uint256 private Skt_PER_TXN = 10000000; // 10.000000 Skt
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        103
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Pausable
Line:        147
Source: 
>      */
>     function paused() public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _paused;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        103
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Pausable
Line:        147
Source: 
>      */
>     function paused() public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _paused;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Get10Skt
Line:        233
Source: 
>      */
>     function txs() public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _txs;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Get10Skt
Line:        237
Source: 
> 
>     function setWeiMin(uint256 weiMin) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         WEI_MIN = weiMin;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Get10Skt
Line:        278
Source: 
>      */
>     function setPublicSaleAddress(address _pubSaleAddr) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Skt_PUBLIC_SALE = ISktPublicSale(_pubSaleAddr);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Get10Skt
Line:        237
Source: 
> 
>     function setWeiMin(uint256 weiMin) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         WEI_MIN = weiMin;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Get10Skt
Line:        278
Source: 
>      */
>     function setPublicSaleAddress(address _pubSaleAddr) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Skt_PUBLIC_SALE = ISktPublicSale(_pubSaleAddr);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath256
Line:        66
Source: 
>         uint256 c = a / b;
>         assert(a == b * c + a % b);
>                     ^^^^^
>         return a / b;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath256
Line:        54
Source: 
>         }
>         c = a * b;
>             ^^^^^
>         assert(c / a == b);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Get10Skt
Line:        248
Source: 
>         require(Skt.balanceOf(address(this)) >= Skt_PER_TXN);
>         require(Skt.balanceOf(msg.sender) == 0);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!Skt.inWhitelist(msg.sender));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Get10Skt
Line:        249
Source: 
>         require(Skt.balanceOf(msg.sender) == 0);
>         require(!Skt.inWhitelist(msg.sender));
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!_alreadyGot[msg.sender]);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Get10Skt
Line:        254
Source: 
>         uint256 __SktUsdPrice;
>         (__etherPrice, , __SktUsdPrice, , , , , , , ,) = Skt_PUBLIC_SALE.status();
>                                                          ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Get10Skt
Line:        272
Source: 
> 
>         assert(Skt.transfer(msg.sender, Skt_PER_TXN));
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    Get10Skt
Line:        247
Source: 
>         require(msg.value >= WEI_MIN);
>         require(Skt.balanceOf(address(this)) >= Skt_PER_TXN);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(Skt.balanceOf(msg.sender) == 0);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    Get10Skt
Line:        264
Source: 
>         if (msg.value > __wei) {
>             msg.sender.transfer(msg.value.sub(__wei));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _receiver.transfer(__wei);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    Get10Skt
Line:        265
Source: 
>             msg.sender.transfer(msg.value.sub(__wei));
>             _receiver.transfer(__wei);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Ownable
Line:        121
Source: 
>         require(newOwner != _owner);
>         address __previousOwner = _owner;
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         _owner = newOwner;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Get10Skt
Line:        218
Source: 
> 
>     ISkt public Skt = ISkt(0x2fB74C37Fb2C8DC76beA1910737aa9E3e2b53535);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ISktPublicSale public Skt_PUBLIC_SALE;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Get10Skt
Line:        219
Source: 
>     ISkt public Skt = ISkt(0x2fB74C37Fb2C8DC76beA1910737aa9E3e2b53535);
>     ISktPublicSale public Skt_PUBLIC_SALE;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Get10Skt
Line:        221
Source: 
> 
>     uint256 public WEI_MIN = 1 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 private Skt_PER_TXN = 10000000; // 10.000000 Skt

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Get10Skt
Line:        222
Source: 
>     uint256 public WEI_MIN = 1 ether;
>     uint256 private Skt_PER_TXN = 10000000; // 10.000000 Skt
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Get10Skt
Line:        252
Source: 
> 
>         uint256 __etherPrice;
>         ^^^^^^^^^^^^^^^^^^^^
>         uint256 __SktUsdPrice;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Get10Skt
Line:        253
Source: 
>         uint256 __etherPrice;
>         uint256 __SktUsdPrice;
>         ^^^^^^^^^^^^^^^^^^^^^
>         (__etherPrice, , __SktUsdPrice, , , , , , , ,) = Skt_PUBLIC_SALE.status();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Get10Skt
Line:        258
Source: 
> 
>         uint256 __usd = Skt_PER_TXN.mul(__SktUsdPrice).div(1000000);
>         ^^^^^^^^^^^^^
>         uint256 __wei = __usd.mul(1 ether).div(__etherPrice);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Get10Skt
Line:        259
Source: 
>         uint256 __usd = Skt_PER_TXN.mul(__SktUsdPrice).div(1000000);
>         uint256 __wei = __usd.mul(1 ether).div(__etherPrice);
>         ^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        13
Source: 
> 
> pragma solidity ^0.5.7;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Get10Skt
Line:        226
Source: 
> 
>     mapping (address => bool) _alreadyGot;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Get10Skt
Line:        222
Source: 
>     uint256 public WEI_MIN = 1 ether;
>     uint256 private Skt_PER_TXN = 10000000; // 10.000000 Skt
>                                   ^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Get10Skt
Line:        258
Source: 
> 
>         uint256 __usd = Skt_PER_TXN.mul(__SktUsdPrice).div(1000000);
>                                                            ^^^^^^^
>         uint256 __wei = __usd.mul(1 ether).div(__etherPrice);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Get10Skt
Line:        264
Source: 
>         if (msg.value > __wei) {
>             msg.sender.transfer(msg.value.sub(__wei));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _receiver.transfer(__wei);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Get10Skt
Line:        265
Source: 
>             msg.sender.transfer(msg.value.sub(__wei));
>             _receiver.transfer(__wei);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Get10Skt
Line:        264
Source: 
>         if (msg.value > __wei) {
>             msg.sender.transfer(msg.value.sub(__wei));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _receiver.transfer(__wei);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Get10Skt
Line:        265
Source: 
>             msg.sender.transfer(msg.value.sub(__wei));
>             _receiver.transfer(__wei);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Get10Skt
Line:        264
Source: 
>         if (msg.value > __wei) {
>             msg.sender.transfer(msg.value.sub(__wei));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _receiver.transfer(__wei);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Get10Skt
Line:        265
Source: 
>             msg.sender.transfer(msg.value.sub(__wei));
>             _receiver.transfer(__wei);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Get10Skt
Line:        247
Source: 
>         require(msg.value >= WEI_MIN);
>         require(Skt.balanceOf(address(this)) >= Skt_PER_TXN);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(Skt.balanceOf(msg.sender) == 0);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Get10Skt
Line:        248
Source: 
>         require(Skt.balanceOf(address(this)) >= Skt_PER_TXN);
>         require(Skt.balanceOf(msg.sender) == 0);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!Skt.inWhitelist(msg.sender));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Get10Skt
Line:        249
Source: 
>         require(Skt.balanceOf(msg.sender) == 0);
>         require(!Skt.inWhitelist(msg.sender));
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!_alreadyGot[msg.sender]);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Get10Skt
Line:        254
Source: 
>         uint256 __SktUsdPrice;
>         (__etherPrice, , __SktUsdPrice, , , , , , , ,) = Skt_PUBLIC_SALE.status();
>                                                          ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Get10Skt
Line:        272
Source: 
> 
>         assert(Skt.transfer(msg.sender, Skt_PER_TXN));
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Get10Skt
Line:        219
Source: 
>     ISkt public Skt = ISkt(0x2fB74C37Fb2C8DC76beA1910737aa9E3e2b53535);
>     ISktPublicSale public Skt_PUBLIC_SALE;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Get10Skt
Line:        224
Source: 
> 
>     uint256 private _txs;
>     ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Ownable
Line:        86
Source: 
>     address private _owner;
>     address payable internal _receiver;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
