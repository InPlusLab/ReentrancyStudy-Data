Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenSwap
Line:        95
Source: 
> 
>   function setGateway(MainchainGateway _mainchainGateway) external onlyAdmin {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (address(mainchainGateway) != address(0)) {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    TokenSwap
Line:        97
Source: 
>     if (address(mainchainGateway) != address(0)) {
>       require(newToken.approve(address(mainchainGateway), 0));
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    TokenSwap
Line:        101
Source: 
>     mainchainGateway = _mainchainGateway;
>     require(newToken.approve(address(mainchainGateway), uint256(-1)));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenSwap
Line:        105
Source: 
>   function swapToken() external {
>     uint256 _balance = oldToken.balanceOf(msg.sender);
>     ^^^^^^^^^^^^^^^^
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenSwap
Line:        112
Source: 
>     require(_recipient != address(0), "TokenSwap: recipient is the zero address");
>     uint256 _balance = oldToken.balanceOf(msg.sender);
>     ^^^^^^^^^^^^^^^^
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenSwap
Line:        122
Source: 
>     require(_recipient != address(0), "TokenSwap: recipient is the zero address");
>     uint256 _balance = oldToken.balanceOf(msg.sender);
>     ^^^^^^^^^^^^^^^^
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenSwap
Line:        97
Source: 
>     if (address(mainchainGateway) != address(0)) {
>       require(newToken.approve(address(mainchainGateway), 0));
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenSwap
Line:        101
Source: 
>     mainchainGateway = _mainchainGateway;
>     require(newToken.approve(address(mainchainGateway), uint256(-1)));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenSwap
Line:        105
Source: 
>   function swapToken() external {
>     uint256 _balance = oldToken.balanceOf(msg.sender);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenSwap
Line:        106
Source: 
>     uint256 _balance = oldToken.balanceOf(msg.sender);
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(newToken.transfer(msg.sender, _balance));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenSwap
Line:        107
Source: 
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));
>     require(newToken.transfer(msg.sender, _balance));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenSwap
Line:        112
Source: 
>     require(_recipient != address(0), "TokenSwap: recipient is the zero address");
>     uint256 _balance = oldToken.balanceOf(msg.sender);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenSwap
Line:        113
Source: 
>     uint256 _balance = oldToken.balanceOf(msg.sender);
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenSwap
Line:        116
Source: 
>     require(_amount <= _balance);
>     require(newToken.transfer(msg.sender, _balance - _amount));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mainchainGateway.depositERC20For(_recipient, address(newToken), _amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenSwap
Line:        123
Source: 
>     uint256 _balance = oldToken.balanceOf(msg.sender);
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mainchainGateway.depositERC20For(_recipient, address(newToken), _balance);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenSwap
Line:        129
Source: 
>   function withdrawToken() external onlyAdmin {
>     newToken.transfer(msg.sender, newToken.balanceOf(address(this)));
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenSwap
Line:        117
Source: 
>     require(newToken.transfer(msg.sender, _balance - _amount));
>     mainchainGateway.depositERC20For(_recipient, address(newToken), _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenSwap
Line:        122
Source: 
>     require(_recipient != address(0), "TokenSwap: recipient is the zero address");
>     uint256 _balance = oldToken.balanceOf(msg.sender);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenSwap
Line:        124
Source: 
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));
>     mainchainGateway.depositERC20For(_recipient, address(newToken), _balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenSwap
Line:        129
Source: 
>   function withdrawToken() external onlyAdmin {
>     newToken.transfer(msg.sender, newToken.balanceOf(address(this)));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    TokenSwap
Line:        83
Source: 
>   IERC20 public newToken;
>   MainchainGateway public mainchainGateway;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenSwap
Line:        117
Source: 
>     require(newToken.transfer(msg.sender, _balance - _amount));
>     mainchainGateway.depositERC20For(_recipient, address(newToken), _amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenSwap
Line:        124
Source: 
>     require(oldToken.transferFrom(msg.sender, address(this), _balance));
>     mainchainGateway.depositERC20For(_recipient, address(newToken), _balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenSwap
Line:        129
Source: 
>   function withdrawToken() external onlyAdmin {
>     newToken.transfer(msg.sender, newToken.balanceOf(address(this)));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
