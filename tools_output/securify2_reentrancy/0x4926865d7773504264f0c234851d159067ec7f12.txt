Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        587
Source: 
>   
>   function transfer(
>   ^^^^^^^^^^^^^^^^^^
>     address _to,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        607
Source: 
>   
>   function approve(
>   ^^^^^^^^^^^^^^^^^
>     address _spender,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        622
Source: 
>    
>   function approveWithSignature(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _approver,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        770
Source: 
>   
>   function transferFrom(
>   ^^^^^^^^^^^^^^^^^^^^^^
>     address _from,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        793
Source: 
>   
>   function deposit(
>   ^^^^^^^^^^^^^^^^^
>     uint256 _value,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        809
Source: 
>   
>   function withdraw(
>   ^^^^^^^^^^^^^^^^^^
>     uint256 _value

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        587
Source: 
>   
>   function transfer(
>   ^^^^^^^^^^^^^^^^^^
>     address _to,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        607
Source: 
>   
>   function approve(
>   ^^^^^^^^^^^^^^^^^
>     address _spender,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        622
Source: 
>    
>   function approveWithSignature(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _approver,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        770
Source: 
>   
>   function transferFrom(
>   ^^^^^^^^^^^^^^^^^^^^^^
>     address _from,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        793
Source: 
>   
>   function deposit(
>   ^^^^^^^^^^^^^^^^^
>     uint256 _value,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DappToken
Line:        809
Source: 
>   
>   function withdraw(
>   ^^^^^^^^^^^^^^^^^^
>     uint256 _value

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    DappToken
Line:        817
Source: 
>     balances[msg.sender] = balances[msg.sender].sub(_value);
>     barteredToken.transfer(msg.sender, _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(msg.sender, address(0), _value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    DappToken
Line:        559
Source: 
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     barteredToken.transfer(migrationAddress, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    DappToken
Line:        561
Source: 
>     require(
>       MigrationReceiver(migrationAddress)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         .onMigrationReceived(msg.sender, balance) == MAGIC_ON_MIGRATION_RECEIVED,

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    DappToken
Line:        817
Source: 
>     balances[msg.sender] = balances[msg.sender].sub(_value);
>     barteredToken.transfer(msg.sender, _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(msg.sender, address(0), _value);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DappToken
Line:        569
Source: 
>   
>   function onMigrationReceived(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _migrator,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DappToken
Line:        622
Source: 
>    
>   function approveWithSignature(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _approver,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DappToken
Line:        669
Source: 
>   
>   function cancelApproveWithSignature(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _spender,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DappToken
Line:        793
Source: 
>   
>   function deposit(
>   ^^^^^^^^^^^^^^^^^
>     uint256 _value,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DappToken
Line:        569
Source: 
>   
>   function onMigrationReceived(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _migrator,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DappToken
Line:        622
Source: 
>    
>   function approveWithSignature(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _approver,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DappToken
Line:        669
Source: 
>   
>   function cancelApproveWithSignature(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _spender,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    DappToken
Line:        793
Source: 
>   
>   function deposit(
>   ^^^^^^^^^^^^^^^^^
>     uint256 _value,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SupportsInterface
Line:        120
Source: 
>   
>   function supportsInterface(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes4 _interfaceID

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        185
Source: 
>   
>   function grantAbilities(
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        197
Source: 
>   
>   function revokeAbilities(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        209
Source: 
>   
>   function setAbilities(
>   ^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        221
Source: 
>   
>   function isAble(
>   ^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SupportsInterface
Line:        120
Source: 
>   
>   function supportsInterface(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes4 _interfaceID

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        185
Source: 
>   
>   function grantAbilities(
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        197
Source: 
>   
>   function revokeAbilities(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        209
Source: 
>   
>   function setAbilities(
>   ^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        221
Source: 
>   
>   function isAble(
>   ^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        492
Source: 
>   
>   function balanceOf(
>   ^^^^^^^^^^^^^^^^^^^
>     address _owner

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        504
Source: 
>   
>   function allowance(
>   ^^^^^^^^^^^^^^^^^^^
>     address _owner,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        517
Source: 
>   
>   function setWhitelistedRecipient(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        529
Source: 
>   
>   function setApprovedMigrator(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        607
Source: 
>   
>   function approve(
>   ^^^^^^^^^^^^^^^^^
>     address _spender,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        693
Source: 
>   
>   function generateClaim(
>   ^^^^^^^^^^^^^^^^^^^^^^^
>     address _approver,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        721
Source: 
>   
>   function isValidSignature(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _signer,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SupportsInterface
Line:        120
Source: 
>   
>   function supportsInterface(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes4 _interfaceID

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        185
Source: 
>   
>   function grantAbilities(
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        197
Source: 
>   
>   function revokeAbilities(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        209
Source: 
>   
>   function setAbilities(
>   ^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Abilitable
Line:        221
Source: 
>   
>   function isAble(
>   ^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        492
Source: 
>   
>   function balanceOf(
>   ^^^^^^^^^^^^^^^^^^^
>     address _owner

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        504
Source: 
>   
>   function allowance(
>   ^^^^^^^^^^^^^^^^^^^
>     address _owner,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        517
Source: 
>   
>   function setWhitelistedRecipient(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        529
Source: 
>   
>   function setApprovedMigrator(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _target,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        607
Source: 
>   
>   function approve(
>   ^^^^^^^^^^^^^^^^^
>     address _spender,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        693
Source: 
>   
>   function generateClaim(
>   ^^^^^^^^^^^^^^^^^^^^^^^
>     address _approver,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DappToken
Line:        721
Source: 
>   
>   function isValidSignature(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _signer,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DappToken
Line:        559
Source: 
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     barteredToken.transfer(migrationAddress, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DappToken
Line:        561
Source: 
>     require(
>       MigrationReceiver(migrationAddress)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         .onMigrationReceived(msg.sender, balance) == MAGIC_ON_MIGRATION_RECEIVED,

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    SupportsInterface
Line:        110
Source: 
>   
>   mapping(bytes4 => bool) internal supportedInterfaces;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        137
Source: 
>   
>   string constant NOT_AUTHORIZED = "017001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant INVALID_INPUT = "017002";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        138
Source: 
>   string constant NOT_AUTHORIZED = "017001";
>   string constant INVALID_INPUT = "017002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        141
Source: 
>   
>   uint8 constant SUPER_ABILITY = 1;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        144
Source: 
>   
>   uint8 constant ALLOW_SUPER_ABILITY = 2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        147
Source: 
>   
>   uint8 constant EMPTY_SLOT_1 = 4;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        150
Source: 
>   
>   uint8 constant EMPTY_SLOT_2 = 8;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        153
Source: 
>   
>   uint8 constant ALL_DEFAULT_ABILITIES = 15;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        156
Source: 
>   
>   mapping(address => uint256) public addressToAbility;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        339
Source: 
>   
>   uint8 constant ABILITY_SET_WHITELISTED = 16;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint8 constant ABILITY_SET_MIGRATE_ADDRESS = 32;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        340
Source: 
>   uint8 constant ABILITY_SET_WHITELISTED = 16;
>   uint8 constant ABILITY_SET_MIGRATE_ADDRESS = 32;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint8 constant ABILITY_SET_MIGRATOR_ADDRESS = 64;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        341
Source: 
>   uint8 constant ABILITY_SET_MIGRATE_ADDRESS = 32;
>   uint8 constant ABILITY_SET_MIGRATOR_ADDRESS = 64;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        344
Source: 
>   
>   string constant NOT_ENOUGH_BALANCE = "010001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant NOT_ENOUGH_ALLOWANCE = "010002";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        345
Source: 
>   string constant NOT_ENOUGH_BALANCE = "010001";
>   string constant NOT_ENOUGH_ALLOWANCE = "010002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant NOT_WHITELISTED_ADDRESS = "010003";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        346
Source: 
>   string constant NOT_ENOUGH_ALLOWANCE = "010002";
>   string constant NOT_WHITELISTED_ADDRESS = "010003";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant MIGRATION_NOT_STARTED = "010004";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        347
Source: 
>   string constant NOT_WHITELISTED_ADDRESS = "010003";
>   string constant MIGRATION_NOT_STARTED = "010004";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant MIGRATION_STARTED = "010005";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        348
Source: 
>   string constant MIGRATION_NOT_STARTED = "010004";
>   string constant MIGRATION_STARTED = "010005";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant NOT_ABLE_TO_MIGRATE = "010006";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        349
Source: 
>   string constant MIGRATION_STARTED = "010005";
>   string constant NOT_ABLE_TO_MIGRATE = "010006";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant INVALID_SIGNATURE = "010007";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        350
Source: 
>   string constant NOT_ABLE_TO_MIGRATE = "010006";
>   string constant INVALID_SIGNATURE = "010007";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant CLAIM_PERFORMED = "010008";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        351
Source: 
>   string constant INVALID_SIGNATURE = "010007";
>   string constant CLAIM_PERFORMED = "010008";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant CLAIM_EXPIRED = "010009";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        352
Source: 
>   string constant CLAIM_PERFORMED = "010008";
>   string constant CLAIM_EXPIRED = "010009";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant INVALID_SIGNATURE_KIND = "010010";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        353
Source: 
>   string constant CLAIM_EXPIRED = "010009";
>   string constant INVALID_SIGNATURE_KIND = "010010";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant CLAIM_CANCELED = "010011";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        354
Source: 
>   string constant INVALID_SIGNATURE_KIND = "010010";
>   string constant CLAIM_CANCELED = "010011";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        357
Source: 
>   
>   string internal tokenName;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        360
Source: 
>   
>   string internal tokenSymbol;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        363
Source: 
>   
>   uint8 internal tokenDecimals;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        366
Source: 
>   
>   uint256 internal tokenTotalSupply;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        369
Source: 
>   
>   mapping (address => uint256) internal balances;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        372
Source: 
>   
>   mapping (address => mapping (address => uint256)) internal allowed;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        375
Source: 
>   
>   address public tokenTransferProxy;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        378
Source: 
>   
>   mapping (address => bool) public whitelistedRecipients;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        381
Source: 
>   
>   ERC20 public barteredToken;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        384
Source: 
>   
>   address public migrationAddress;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        387
Source: 
>   
>   mapping (address => bool) public approvedMigrators;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        390
Source: 
>   
>   bytes4 constant MAGIC_ON_MIGRATION_RECEIVED = 0xc5b97e06;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        410
Source: 
>   
>   mapping(bytes32 => bool) public claimPerformed;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        413
Source: 
>   
>   mapping(bytes32 => bool) public claimCancelled;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    SafeMath
Line:        12
Source: 
>   
>   string constant OVERFLOW = "008001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    SafeMath
Line:        13
Source: 
>   string constant OVERFLOW = "008001";
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant DIVISION_BY_ZERO = "008003";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    SafeMath
Line:        14
Source: 
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   string constant DIVISION_BY_ZERO = "008003";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    SupportsInterface
Line:        110
Source: 
>   
>   mapping(bytes4 => bool) internal supportedInterfaces;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        137
Source: 
>   
>   string constant NOT_AUTHORIZED = "017001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant INVALID_INPUT = "017002";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        138
Source: 
>   string constant NOT_AUTHORIZED = "017001";
>   string constant INVALID_INPUT = "017002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        141
Source: 
>   
>   uint8 constant SUPER_ABILITY = 1;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        144
Source: 
>   
>   uint8 constant ALLOW_SUPER_ABILITY = 2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        147
Source: 
>   
>   uint8 constant EMPTY_SLOT_1 = 4;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        150
Source: 
>   
>   uint8 constant EMPTY_SLOT_2 = 8;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        153
Source: 
>   
>   uint8 constant ALL_DEFAULT_ABILITIES = 15;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    Abilitable
Line:        156
Source: 
>   
>   mapping(address => uint256) public addressToAbility;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        339
Source: 
>   
>   uint8 constant ABILITY_SET_WHITELISTED = 16;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint8 constant ABILITY_SET_MIGRATE_ADDRESS = 32;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        340
Source: 
>   uint8 constant ABILITY_SET_WHITELISTED = 16;
>   uint8 constant ABILITY_SET_MIGRATE_ADDRESS = 32;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint8 constant ABILITY_SET_MIGRATOR_ADDRESS = 64;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        341
Source: 
>   uint8 constant ABILITY_SET_MIGRATE_ADDRESS = 32;
>   uint8 constant ABILITY_SET_MIGRATOR_ADDRESS = 64;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        344
Source: 
>   
>   string constant NOT_ENOUGH_BALANCE = "010001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant NOT_ENOUGH_ALLOWANCE = "010002";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        345
Source: 
>   string constant NOT_ENOUGH_BALANCE = "010001";
>   string constant NOT_ENOUGH_ALLOWANCE = "010002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant NOT_WHITELISTED_ADDRESS = "010003";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        346
Source: 
>   string constant NOT_ENOUGH_ALLOWANCE = "010002";
>   string constant NOT_WHITELISTED_ADDRESS = "010003";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant MIGRATION_NOT_STARTED = "010004";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        347
Source: 
>   string constant NOT_WHITELISTED_ADDRESS = "010003";
>   string constant MIGRATION_NOT_STARTED = "010004";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant MIGRATION_STARTED = "010005";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        348
Source: 
>   string constant MIGRATION_NOT_STARTED = "010004";
>   string constant MIGRATION_STARTED = "010005";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant NOT_ABLE_TO_MIGRATE = "010006";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        349
Source: 
>   string constant MIGRATION_STARTED = "010005";
>   string constant NOT_ABLE_TO_MIGRATE = "010006";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant INVALID_SIGNATURE = "010007";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        350
Source: 
>   string constant NOT_ABLE_TO_MIGRATE = "010006";
>   string constant INVALID_SIGNATURE = "010007";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant CLAIM_PERFORMED = "010008";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        351
Source: 
>   string constant INVALID_SIGNATURE = "010007";
>   string constant CLAIM_PERFORMED = "010008";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant CLAIM_EXPIRED = "010009";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        352
Source: 
>   string constant CLAIM_PERFORMED = "010008";
>   string constant CLAIM_EXPIRED = "010009";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant INVALID_SIGNATURE_KIND = "010010";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        353
Source: 
>   string constant CLAIM_EXPIRED = "010009";
>   string constant INVALID_SIGNATURE_KIND = "010010";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant CLAIM_CANCELED = "010011";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        354
Source: 
>   string constant INVALID_SIGNATURE_KIND = "010010";
>   string constant CLAIM_CANCELED = "010011";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        357
Source: 
>   
>   string internal tokenName;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        360
Source: 
>   
>   string internal tokenSymbol;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        363
Source: 
>   
>   uint8 internal tokenDecimals;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        366
Source: 
>   
>   uint256 internal tokenTotalSupply;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        369
Source: 
>   
>   mapping (address => uint256) internal balances;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        372
Source: 
>   
>   mapping (address => mapping (address => uint256)) internal allowed;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        375
Source: 
>   
>   address public tokenTransferProxy;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        378
Source: 
>   
>   mapping (address => bool) public whitelistedRecipients;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        381
Source: 
>   
>   ERC20 public barteredToken;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        384
Source: 
>   
>   address public migrationAddress;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        387
Source: 
>   
>   mapping (address => bool) public approvedMigrators;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        390
Source: 
>   
>   bytes4 constant MAGIC_ON_MIGRATION_RECEIVED = 0xc5b97e06;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        410
Source: 
>   
>   mapping(bytes32 => bool) public claimPerformed;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    DappToken
Line:        413
Source: 
>   
>   mapping(bytes32 => bool) public claimCancelled;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    SafeMath
Line:        12
Source: 
>   
>   string constant OVERFLOW = "008001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    SafeMath
Line:        13
Source: 
>   string constant OVERFLOW = "008001";
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant DIVISION_BY_ZERO = "008003";

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    SafeMath
Line:        14
Source: 
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   string constant DIVISION_BY_ZERO = "008003";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SafeMath
Line:        12
Source: 
>   
>   string constant OVERFLOW = "008001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SafeMath
Line:        13
Source: 
>   string constant OVERFLOW = "008001";
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant DIVISION_BY_ZERO = "008003";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SafeMath
Line:        14
Source: 
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   string constant DIVISION_BY_ZERO = "008003";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Abilitable
Line:        137
Source: 
>   
>   string constant NOT_AUTHORIZED = "017001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant INVALID_INPUT = "017002";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Abilitable
Line:        138
Source: 
>   string constant NOT_AUTHORIZED = "017001";
>   string constant INVALID_INPUT = "017002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Abilitable
Line:        141
Source: 
>   
>   uint8 constant SUPER_ABILITY = 1;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Abilitable
Line:        144
Source: 
>   
>   uint8 constant ALLOW_SUPER_ABILITY = 2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Abilitable
Line:        147
Source: 
>   
>   uint8 constant EMPTY_SLOT_1 = 4;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Abilitable
Line:        150
Source: 
>   
>   uint8 constant EMPTY_SLOT_2 = 8;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Abilitable
Line:        153
Source: 
>   
>   uint8 constant ALL_DEFAULT_ABILITIES = 15;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Abilitable
Line:        166
Source: 
>   modifier hasAbilities(
>     uint256 _abilities
>     ^^^^^^^^^^^^^^^^^^
>   )

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        339
Source: 
>   
>   uint8 constant ABILITY_SET_WHITELISTED = 16;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint8 constant ABILITY_SET_MIGRATE_ADDRESS = 32;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        340
Source: 
>   uint8 constant ABILITY_SET_WHITELISTED = 16;
>   uint8 constant ABILITY_SET_MIGRATE_ADDRESS = 32;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint8 constant ABILITY_SET_MIGRATOR_ADDRESS = 64;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        341
Source: 
>   uint8 constant ABILITY_SET_MIGRATE_ADDRESS = 32;
>   uint8 constant ABILITY_SET_MIGRATOR_ADDRESS = 64;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        344
Source: 
>   
>   string constant NOT_ENOUGH_BALANCE = "010001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant NOT_ENOUGH_ALLOWANCE = "010002";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        345
Source: 
>   string constant NOT_ENOUGH_BALANCE = "010001";
>   string constant NOT_ENOUGH_ALLOWANCE = "010002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant NOT_WHITELISTED_ADDRESS = "010003";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        346
Source: 
>   string constant NOT_ENOUGH_ALLOWANCE = "010002";
>   string constant NOT_WHITELISTED_ADDRESS = "010003";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant MIGRATION_NOT_STARTED = "010004";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        347
Source: 
>   string constant NOT_WHITELISTED_ADDRESS = "010003";
>   string constant MIGRATION_NOT_STARTED = "010004";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant MIGRATION_STARTED = "010005";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        348
Source: 
>   string constant MIGRATION_NOT_STARTED = "010004";
>   string constant MIGRATION_STARTED = "010005";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant NOT_ABLE_TO_MIGRATE = "010006";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        349
Source: 
>   string constant MIGRATION_STARTED = "010005";
>   string constant NOT_ABLE_TO_MIGRATE = "010006";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant INVALID_SIGNATURE = "010007";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        350
Source: 
>   string constant NOT_ABLE_TO_MIGRATE = "010006";
>   string constant INVALID_SIGNATURE = "010007";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant CLAIM_PERFORMED = "010008";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        351
Source: 
>   string constant INVALID_SIGNATURE = "010007";
>   string constant CLAIM_PERFORMED = "010008";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant CLAIM_EXPIRED = "010009";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        352
Source: 
>   string constant CLAIM_PERFORMED = "010008";
>   string constant CLAIM_EXPIRED = "010009";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant INVALID_SIGNATURE_KIND = "010010";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        353
Source: 
>   string constant CLAIM_EXPIRED = "010009";
>   string constant INVALID_SIGNATURE_KIND = "010010";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant CLAIM_CANCELED = "010011";

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        354
Source: 
>   string constant INVALID_SIGNATURE_KIND = "010010";
>   string constant CLAIM_CANCELED = "010011";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DappToken
Line:        390
Source: 
>   
>   bytes4 constant MAGIC_ON_MIGRATION_RECEIVED = 0xc5b97e06;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DappToken
Line:        817
Source: 
>     balances[msg.sender] = balances[msg.sender].sub(_value);
>     barteredToken.transfer(msg.sender, _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(msg.sender, address(0), _value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DappToken
Line:        559
Source: 
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     barteredToken.transfer(migrationAddress, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DappToken
Line:        561
Source: 
>     require(
>       MigrationReceiver(migrationAddress)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         .onMigrationReceived(msg.sender, balance) == MAGIC_ON_MIGRATION_RECEIVED,

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DappToken
Line:        817
Source: 
>     balances[msg.sender] = balances[msg.sender].sub(_value);
>     barteredToken.transfer(msg.sender, _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(msg.sender, address(0), _value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    DappToken
Line:        817
Source: 
>     balances[msg.sender] = balances[msg.sender].sub(_value);
>     barteredToken.transfer(msg.sender, _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(msg.sender, address(0), _value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    DappToken
Line:        559
Source: 
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     barteredToken.transfer(migrationAddress, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    DappToken
Line:        561
Source: 
>     require(
>       MigrationReceiver(migrationAddress)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         .onMigrationReceived(msg.sender, balance) == MAGIC_ON_MIGRATION_RECEIVED,

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    DappToken
Line:        817
Source: 
>     balances[msg.sender] = balances[msg.sender].sub(_value);
>     barteredToken.transfer(msg.sender, _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(msg.sender, address(0), _value);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DappToken
Line:        561
Source: 
>     require(
>       MigrationReceiver(migrationAddress)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         .onMigrationReceived(msg.sender, balance) == MAGIC_ON_MIGRATION_RECEIVED,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DappToken
Line:        559
Source: 
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     barteredToken.transfer(migrationAddress, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DappToken
Line:        817
Source: 
>     balances[msg.sender] = balances[msg.sender].sub(_value);
>     barteredToken.transfer(msg.sender, _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(msg.sender, address(0), _value);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DappToken
Line:        559
Source: 
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     barteredToken.transfer(migrationAddress, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DappToken
Line:        817
Source: 
>     balances[msg.sender] = balances[msg.sender].sub(_value);
>     barteredToken.transfer(msg.sender, _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(msg.sender, address(0), _value);

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    SafeMath
Line:        12
Source: 
>   
>   string constant OVERFLOW = "008001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    SafeMath
Line:        13
Source: 
>   string constant OVERFLOW = "008001";
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant DIVISION_BY_ZERO = "008003";

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    SafeMath
Line:        14
Source: 
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   string constant DIVISION_BY_ZERO = "008003";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    SafeMath
Line:        12
Source: 
>   
>   string constant OVERFLOW = "008001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    SafeMath
Line:        13
Source: 
>   string constant OVERFLOW = "008001";
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant DIVISION_BY_ZERO = "008003";

[0m
[0;35mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Conflict
Contract:    SafeMath
Line:        14
Source: 
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   string constant DIVISION_BY_ZERO = "008003";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    DappToken
Line:        559
Source: 
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     barteredToken.transfer(migrationAddress, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    DappToken
Line:        561
Source: 
>     require(
>       MigrationReceiver(migrationAddress)
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         .onMigrationReceived(msg.sender, balance) == MAGIC_ON_MIGRATION_RECEIVED,

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DappToken
Line:        558
Source: 
>     balances[msg.sender] = 0;
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     barteredToken.transfer(migrationAddress, balance);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DappToken
Line:        689
Source: 
>     require(!claimPerformed[claim], CLAIM_PERFORMED);
>     claimCancelled[claim] = true;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DappToken
Line:        800
Source: 
>     require(migrationAddress == address(0), MIGRATION_STARTED);
>     tokenTotalSupply = tokenTotalSupply.add(_value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     balances[_receiver] = balances[_receiver].add(_value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DappToken
Line:        801
Source: 
>     tokenTotalSupply = tokenTotalSupply.add(_value);
>     balances[_receiver] = balances[_receiver].add(_value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     barteredToken.transferFrom(msg.sender, address(this), _value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DappToken
Line:        803
Source: 
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(address(0), _receiver, _value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DappToken
Line:        558
Source: 
>     balances[msg.sender] = 0;
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     barteredToken.transfer(migrationAddress, balance);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DappToken
Line:        689
Source: 
>     require(!claimPerformed[claim], CLAIM_PERFORMED);
>     claimCancelled[claim] = true;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DappToken
Line:        800
Source: 
>     require(migrationAddress == address(0), MIGRATION_STARTED);
>     tokenTotalSupply = tokenTotalSupply.add(_value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     balances[_receiver] = balances[_receiver].add(_value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DappToken
Line:        801
Source: 
>     tokenTotalSupply = tokenTotalSupply.add(_value);
>     balances[_receiver] = balances[_receiver].add(_value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     barteredToken.transferFrom(msg.sender, address(this), _value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    DappToken
Line:        803
Source: 
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(address(0), _receiver, _value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DappToken
Line:        615
Source: 
>   {
>     allowed[msg.sender][_spender] = _value;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DappToken
Line:        654
Source: 
>     require(_expiration > now, CLAIM_EXPIRED);
>     claimPerformed[claim] = true;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DappToken
Line:        656
Source: 
> 
>     allowed[_approver][_spender] = _value;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Approval(_approver, _spender, _value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DappToken
Line:        660
Source: 
>     require(_feeValue <= balances[_approver], NOT_ENOUGH_BALANCE);
>     balances[_approver] = balances[_approver].sub(_feeValue);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (_feeRecipient == address(0)) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DappToken
Line:        615
Source: 
>   {
>     allowed[msg.sender][_spender] = _value;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DappToken
Line:        654
Source: 
>     require(_expiration > now, CLAIM_EXPIRED);
>     claimPerformed[claim] = true;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DappToken
Line:        656
Source: 
> 
>     allowed[_approver][_spender] = _value;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Approval(_approver, _spender, _value);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DappToken
Line:        660
Source: 
>     require(_feeValue <= balances[_approver], NOT_ENOUGH_BALANCE);
>     balances[_approver] = balances[_approver].sub(_feeValue);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (_feeRecipient == address(0)) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DappToken
Line:        559
Source: 
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     barteredToken.transfer(migrationAddress, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DappToken
Line:        817
Source: 
>     balances[msg.sender] = balances[msg.sender].sub(_value);
>     barteredToken.transfer(msg.sender, _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(msg.sender, address(0), _value);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DappToken
Line:        559
Source: 
>     tokenTotalSupply = tokenTotalSupply.sub(balance);
>     barteredToken.transfer(migrationAddress, balance);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DappToken
Line:        802
Source: 
>     balances[_receiver] = balances[_receiver].add(_value);
>     barteredToken.transferFrom(msg.sender, address(this), _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     allowed[_receiver][tokenTransferProxy] = allowed[_receiver][tokenTransferProxy].add(_value);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DappToken
Line:        817
Source: 
>     balances[msg.sender] = balances[msg.sender].sub(_value);
>     barteredToken.transfer(msg.sender, _value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit Transfer(msg.sender, address(0), _value);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SafeMath
Line:        12
Source: 
>   
>   string constant OVERFLOW = "008001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SafeMath
Line:        13
Source: 
>   string constant OVERFLOW = "008001";
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant DIVISION_BY_ZERO = "008003";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SafeMath
Line:        14
Source: 
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   string constant DIVISION_BY_ZERO = "008003";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Abilitable
Line:        144
Source: 
>   
>   uint8 constant ALLOW_SUPER_ABILITY = 2;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Abilitable
Line:        147
Source: 
>   
>   uint8 constant EMPTY_SLOT_1 = 4;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Abilitable
Line:        150
Source: 
>   
>   uint8 constant EMPTY_SLOT_2 = 8;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SafeMath
Line:        12
Source: 
>   
>   string constant OVERFLOW = "008001";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SafeMath
Line:        13
Source: 
>   string constant OVERFLOW = "008001";
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   string constant DIVISION_BY_ZERO = "008003";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SafeMath
Line:        14
Source: 
>   string constant SUBTRAHEND_GREATER_THEN_MINUEND = "008002";
>   string constant DIVISION_BY_ZERO = "008003";
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
