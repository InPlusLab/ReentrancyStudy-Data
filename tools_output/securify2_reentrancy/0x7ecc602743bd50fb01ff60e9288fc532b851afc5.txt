Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Initializable
Line:        307
Source: 
>         // solhint-disable-next-line no-inline-assembly
>         assembly { cs := extcodesize(self) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return cs == 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Initializable
Line:        271
Source: 
>      */
>     bool private _initialized;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Initializable
Line:        276
Source: 
>      */
>     bool private _initializing;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    HoneypotMeme
Line:        362
Source: 
> 
>     function initialize(
>     ^^^^^^^^^^^^^^^^^^^^
>         IERC20Upgradeable token_,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    HoneypotMeme
Line:        377
Source: 
>         emit Claimed(msg.sender, honeypot);
>         require(token.transfer(msg.sender, honeypot), "honeypot/transfer-failed");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    HoneypotMeme
Line:        384
Source: 
>         for (uint256 i = 0; i < nftIndicies.length; i++) {
>             require(memeLtd.balanceOf(msg.sender, nftIndicies[i]) > 0, "honeypot/nft-ownership");
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    HoneypotMeme
Line:        362
Source: 
> 
>     function initialize(
>     ^^^^^^^^^^^^^^^^^^^^
>         IERC20Upgradeable token_,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    HoneypotMeme
Line:        377
Source: 
>         emit Claimed(msg.sender, honeypot);
>         require(token.transfer(msg.sender, honeypot), "honeypot/transfer-failed");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    HoneypotMeme
Line:        358
Source: 
> 
>     address public constant memeLtdAddress = 0xe4605d46Fd0B3f8329d936a8b258D69276cBa264;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Initializable
Line:        284
Source: 
> 
>         bool isTopLevelCall = !_initializing;
>         ^^^^^^^^^^^^^^^^^^^
>         if (isTopLevelCall) {

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HoneypotMeme
Line:        377
Source: 
>         emit Claimed(msg.sender, honeypot);
>         require(token.transfer(msg.sender, honeypot), "honeypot/transfer-failed");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    HoneypotMeme
Line:        384
Source: 
>         for (uint256 i = 0; i < nftIndicies.length; i++) {
>             require(memeLtd.balanceOf(msg.sender, nftIndicies[i]) > 0, "honeypot/nft-ownership");
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Initializable
Line:        308
Source: 
>         assembly { cs := extcodesize(self) }
>         return cs == 0;
>                ^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    HoneypotMeme
Line:        351
Source: 
> 
>     IERC20Upgradeable public token;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool public isClaimed;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    HoneypotMeme
Line:        352
Source: 
>     IERC20Upgradeable public token;
>     bool public isClaimed;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    HoneypotMeme
Line:        354
Source: 
> 
>     IMemeLtd public memeLtd;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public honeypot;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    HoneypotMeme
Line:        355
Source: 
>     IMemeLtd public memeLtd;
>     uint256 public honeypot;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint256[] public nftIndicies;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        271
Source: 
>      */
>     bool private _initialized;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        276
Source: 
>      */
>     bool private _initializing;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        271
Source: 
>      */
>     bool private _initialized;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        276
Source: 
>      */
>     bool private _initializing;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HoneypotMeme
Line:        367
Source: 
>     ) public virtual {
>         memeLtd = IMemeLtd(memeLtdAddress);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         token = token_;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HoneypotMeme
Line:        368
Source: 
>         memeLtd = IMemeLtd(memeLtdAddress);
>         token = token_;
>         ^^^^^^^^^^^^^^
>         honeypot = honeypot_;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HoneypotMeme
Line:        369
Source: 
>         token = token_;
>         honeypot = honeypot_;
>         ^^^^^^^^^^^^^^^^^^^^
>         nftIndicies = nftIndicies_;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HoneypotMeme
Line:        370
Source: 
>         honeypot = honeypot_;
>         nftIndicies = nftIndicies_;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    HoneypotMeme
Line:        375
Source: 
>         _verifyRequirements();
>         isClaimed = true;
>         ^^^^^^^^^^^^^^^^
>         emit Claimed(msg.sender, honeypot);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        271
Source: 
>      */
>     bool private _initialized;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        276
Source: 
>      */
>     bool private _initializing;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        271
Source: 
>      */
>     bool private _initialized;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        276
Source: 
>      */
>     bool private _initializing;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
