Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.7. Changing pragma version to 0.5.7....
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    GSNRecipient
Line:        540
Source: 
>         // solhint-disable-next-line no-inline-assembly
>         assembly {
>         ^^^^^^^^^^
>             // Load the 32 bytes word from memory with the address on the lower 20 bytes, and mask those.

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BatchTransfer
Line:        876
Source: 
>     
>     IERC1820Registry private _erc1820 = // See EIP1820
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    GSNRecipient
Line:        395
Source: 
>     // storage in the future.
>     function relayHubVersion() public view returns (string memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    BatchTransfer
Line:        895
Source: 
>         // Register as a token sender
>         _erc1820.setInterfaceImplementer(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             address(this), 

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    BatchTransfer
Line:        938
Source: 
>                 balance -= amount[i];
>                 token.send(to[i], amount[i], "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    BatchTransfer
Line:        940
Source: 
>             } else {
>                 token.operatorSend(_msgSender(), to[i], amount[i], "", "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    BatchTransfer
Line:        952
Source: 
>                 balance -= amount;
>                 token.send(to[i], amount, "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    BatchTransfer
Line:        954
Source: 
>             } else {
>                 token.operatorSend(_msgSender(), to[i], amount, "", "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GSNRecipient
Line:        454
Source: 
>      */
>     function preRelayedCall(bytes calldata context) external returns (bytes32) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == getHubAddr(), "GSNRecipient: caller is not RelayHub");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    GSNRecipient
Line:        477
Source: 
>      */
>     function postRelayedCall(bytes calldata context, bool success, uint256 actualCharge, bytes32 preRetVal) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == getHubAddr(), "GSNRecipient: caller is not RelayHub");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BatchTransfer
Line:        902
Source: 
> 
>     function tokensToSend(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address /*operator*/,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BatchTransfer
Line:        916
Source: 
> 
>     function tokensReceived(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         address /*operator*/,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    BatchTransfer
Line:        960
Source: 
> 
>     function acceptRelayedCall(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address /*relay*/,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BatchTransfer
Line:        938
Source: 
>                 balance -= amount[i];
>                 token.send(to[i], amount[i], "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BatchTransfer
Line:        940
Source: 
>             } else {
>                 token.operatorSend(_msgSender(), to[i], amount[i], "", "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BatchTransfer
Line:        952
Source: 
>                 balance -= amount;
>                 token.send(to[i], amount, "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    BatchTransfer
Line:        954
Source: 
>             } else {
>                 token.operatorSend(_msgSender(), to[i], amount, "", "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    IERC1820Registry
Line:        823
Source: 
>      */
>     function setInterfaceImplementer(address account, bytes32 interfaceHash, address implementer) external;
>                                                       ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    IERC1820Registry
Line:        834
Source: 
>      */
>     function getInterfaceImplementer(address account, bytes32 interfaceHash) external view returns (address);
>                                                       ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    GSNRecipient
Line:        358
Source: 
>     // How much gas is forwarded to postRelayedCall
>     uint256 constant internal POST_RELAYED_CALL_MAX_GAS = 100000;
>                                                           ^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BatchTransfer
Line:        889
Source: 
>         // Register as a token receiver
>         _erc1820.setInterfaceImplementer(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             address(this), 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BatchTransfer
Line:        895
Source: 
>         // Register as a token sender
>         _erc1820.setInterfaceImplementer(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             address(this), 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BatchTransfer
Line:        938
Source: 
>                 balance -= amount[i];
>                 token.send(to[i], amount[i], "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BatchTransfer
Line:        940
Source: 
>             } else {
>                 token.operatorSend(_msgSender(), to[i], amount[i], "", "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BatchTransfer
Line:        952
Source: 
>                 balance -= amount;
>                 token.send(to[i], amount, "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             } else {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BatchTransfer
Line:        954
Source: 
>             } else {
>                 token.operatorSend(_msgSender(), to[i], amount, "", "");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    GSNRecipient
Line:        424
Source: 
>         } else {
>             return _getRelayedCallSender();
>                    ^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    BatchTransfer
Line:        943
Source: 
>         }
>         balances[_msgSender()] = balance;
>                  ^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    BatchTransfer
Line:        957
Source: 
>         }
>         balances[_msgSender()] = balance;
>                  ^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    GSNRecipient
Line:        354
Source: 
> 
>     uint256 constant private RELAYED_CALL_ACCEPTED = 0;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant private RELAYED_CALL_REJECTED = 11;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    GSNRecipient
Line:        355
Source: 
>     uint256 constant private RELAYED_CALL_ACCEPTED = 0;
>     uint256 constant private RELAYED_CALL_REJECTED = 11;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    GSNRecipient
Line:        358
Source: 
>     // How much gas is forwarded to postRelayedCall
>     uint256 constant internal POST_RELAYED_CALL_MAX_GAS = 100000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
