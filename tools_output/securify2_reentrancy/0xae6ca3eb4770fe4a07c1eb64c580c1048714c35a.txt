Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.8. Changing pragma version to 0.5.8....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TellorCommunitySale
Line:        298
Source: 
>     */
>     function priceForUserTokens(address _address) public view returns(uint){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return tribPrice.mul(saleByAddress[_address]);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TellorCommunitySale
Line:        221
Source: 
>     */
>     function setPrice(uint _price) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == owner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TellorCommunitySale
Line:        298
Source: 
>     */
>     function priceForUserTokens(address _address) public view returns(uint){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return tribPrice.mul(saleByAddress[_address]);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TellorCommunitySale
Line:        235
Source: 
>     */
>     function enterAddress(address _address, uint _amount) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == owner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TellorCommunitySale
Line:        282
Source: 
>     */
>     function getSaleByAddress(address _address) external view returns(uint){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return saleByAddress[_address];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    TellorCommunitySale
Line:        270
Source: 
>         require(msg.value >= tribPrice.mul(saleByAddress[msg.sender]));//are decimals an issue?
>         tellor.transfer(msg.sender,saleByAddress[msg.sender]*1e18); 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit NewSale(msg.sender,saleByAddress[msg.sender]);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TellorCommunitySale
Line:        194
Source: 
>     address payable public owner;
>     TokenInterface tellor;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TellorCommunitySale
Line:        196
Source: 
> 
>     mapping(address => uint) saleByAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    TellorCommunitySale
Line:        260
Source: 
>         require(msg.sender == owner);
>         address(owner).transfer(address(this).balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    TellorCommunitySale
Line:        260
Source: 
>         require(msg.sender == owner);
>         address(owner).transfer(address(this).balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    TellorCommunitySale
Line:        260
Source: 
>         require(msg.sender == owner);
>         address(owner).transfer(address(this).balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TellorCommunitySale
Line:        251
Source: 
>         require(now > endDate);
>         tellor.transfer(owner,tellor.balanceOf(address(this)));
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TellorCommunitySale
Line:        291
Source: 
>     function checkThisAddressTokens() public view returns(uint){
>         return tellor.balanceOf(address(this));
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TellorCommunitySale
Line:        251
Source: 
>         require(now > endDate);
>         tellor.transfer(owner,tellor.balanceOf(address(this)));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TellorCommunitySale
Line:        270
Source: 
>         require(msg.value >= tribPrice.mul(saleByAddress[msg.sender]));//are decimals an issue?
>         tellor.transfer(msg.sender,saleByAddress[msg.sender]*1e18); 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit NewSale(msg.sender,saleByAddress[msg.sender]);

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    TellorCommunitySale
Line:        189
Source: 
>     /*Variables*/
>     uint public tribPrice;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint public endDate;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    TellorCommunitySale
Line:        191
Source: 
>     uint public endDate;
>     uint public saleAmount;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     address public tellorAddress;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TellorCommunitySale
Line:        251
Source: 
>         require(now > endDate);
>         tellor.transfer(owner,tellor.balanceOf(address(this)));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TellorCommunitySale
Line:        270
Source: 
>         require(msg.value >= tribPrice.mul(saleByAddress[msg.sender]));//are decimals an issue?
>         tellor.transfer(msg.sender,saleByAddress[msg.sender]*1e18); 
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit NewSale(msg.sender,saleByAddress[msg.sender]);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TellorCommunitySale
Line:        192
Source: 
>     uint public saleAmount;
>     address public tellorAddress;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address payable public owner;

[0m
