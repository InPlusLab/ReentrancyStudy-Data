[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Utils
Line:        29
Source: 
> 
>         assembly {
>         ^^^^^^^^^^
>             size := extcodesize(contract_address)

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    ECVerify
Line:        94
Source: 
>         // Compact means, uint8 is not padded to 32 bytes.
>         assembly {
>         ^^^^^^^^^^
>             r := mload(add(signature, 32))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    TokenNetwork
Line:        1828
Source: 
> 
>         assembly {
>         ^^^^^^^^^^
>             expiration_block := mload(add(locks, offset))

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Utils
Line:        26
Source: 
>     /// @return True if a contract exists, false otherwise
>     function contractExists(address contract_address) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint size;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SecretRegistry
Line:        146
Source: 
>     /// @return true if all secrets could be registered, false otherwise.
>     function registerSecretBatch(bytes32[] memory secrets) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         bool completeSuccess = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    SecretRegistry
Line:        159
Source: 
>     /// @return The block number at which the secret was revealed.
>     function getSecretRevealBlockHeight(bytes32 secrethash) public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return secrethash_to_block[secrethash];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenNetwork
Line:        433
Source: 
> 
>     function deprecate() public isSafe onlyDeprecationExecutor {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         safety_deprecation_switch = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenNetwork
Line:        444
Source: 
>     /// call to closeChannel and settleChannel.
>     function openChannel(address participant1, address participant2, uint256 settle_timeout)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenNetwork
Line:        498
Source: 
>     /// channel deposit.
>     function setTotalDeposit(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenNetwork
Line:        670
Source: 
>     /// proof data.
>     function closeChannel(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenNetwork
Line:        861
Source: 
>     /// proofs. If no balance_hash has been submitted, locksroot is ignored.
>     function settleChannel(
>     ^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenNetwork
Line:        1002
Source: 
>     /// that `sender` sent to `receiver`.
>     function unlock(
>     ^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TokenNetwork
Line:        454
Source: 
>         // Red Eyes release token network limit
>         require(token.balanceOf(address(this)) < token_network_deposit_limit);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TokenNetwork
Line:        534
Source: 
>         // Red Eyes release token network limit
>         require(token.balanceOf(address(this)) + added_deposit <= token_network_deposit_limit);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TokenNetwork
Line:        551
Source: 
>         // Do the transfer
>         require(token.transferFrom(msg.sender, address(this), added_deposit));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TokenNetwork
Line:        640
Source: 
>         participant_state.withdrawn_amount = total_withdraw;
>         require(token.transfer(participant, current_withdraw));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TokenNetwork
Line:        981
Source: 
>         if (participant1_transferred_amount > 0) {
>             require(token.transfer(participant1, participant1_transferred_amount));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TokenNetwork
Line:        985
Source: 
>         if (participant2_transferred_amount > 0) {
>             require(token.transfer(participant2, participant2_transferred_amount));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TokenNetwork
Line:        1069
Source: 
>         if (unlocked_amount > 0) {
>             require(token.transfer(receiver, unlocked_amount));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TokenNetwork
Line:        1074
Source: 
>         if (returned_tokens > 0) {
>             require(token.transfer(sender, returned_tokens));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    TokenNetwork
Line:        1838
Source: 
>         // to be successful.
>         reveal_block = secret_registry.getSecretRevealBlockHeight(secrethash);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (reveal_block == 0 || expiration_block <= reveal_block) {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenNetwork
Line:        444
Source: 
>     /// call to closeChannel and settleChannel.
>     function openChannel(address participant1, address participant2, uint256 settle_timeout)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenNetwork
Line:        566
Source: 
>     /// @param partner_signature Partner's signature on the withdraw data.
>     function setTotalWithdraw(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenNetwork
Line:        670
Source: 
>     /// proof data.
>     function closeChannel(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenNetwork
Line:        861
Source: 
>     /// proofs. If no balance_hash has been submitted, locksroot is ignored.
>     function settleChannel(
>     ^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenNetwork
Line:        1002
Source: 
>     /// that `sender` sent to `receiver`.
>     function unlock(
>     ^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenNetwork
Line:        1209
Source: 
>     /// The contract does not remember the participants of the channel.
>     function getChannelInfo(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Utils
Line:        26
Source: 
>     /// @return True if a contract exists, false otherwise
>     function contractExists(address contract_address) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint size;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    SecretRegistry
Line:        159
Source: 
>     /// @return The block number at which the secret was revealed.
>     function getSecretRevealBlockHeight(bytes32 secrethash) public view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return secrethash_to_block[secrethash];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Utils
Line:        26
Source: 
>     /// @return True if a contract exists, false otherwise
>     function contractExists(address contract_address) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint size;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenNetwork
Line:        751
Source: 
>     /// balance proof data.
>     function updateNonClosingBalanceProof(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenNetwork
Line:        1262
Source: 
>     /// locked_amount.
>     function getChannelParticipantInfo(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             uint256 channel_identifier,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenNetwork
Line:        1319
Source: 
>     /// represents.
>     function getUnlockIdentifier(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 channel_identifier,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Utils
Line:        26
Source: 
>     /// @return True if a contract exists, false otherwise
>     function contractExists(address contract_address) public view returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint size;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1947
Source: 
>     /// be used in the new TokenNetwork contract.
>     function createERC20TokenNetwork(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _token_address,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    TokenNetwork
Line:        454
Source: 
>         // Red Eyes release token network limit
>         require(token.balanceOf(address(this)) < token_network_deposit_limit);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    Token
Line:        74
Source: 
>     // Optionally implemented function to show the number of decimals for the token
>     function decimals() external view returns (uint8 decimals);
>                                                ^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SecretRegistry
Line:        123
Source: 
>     // sha256(secret) => block number at which the secret was revealed
>     mapping(bytes32 => uint256) private secrethash_to_block;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        196
Source: 
>     // mediating transfer.
>     SecretRegistry public secret_registry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        200
Source: 
>     // avoid replay attacks
>     uint256 public chain_id;
>     ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        202
Source: 
> 
>     uint256 public settlement_timeout_min;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public settlement_timeout_max;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        203
Source: 
>     uint256 public settlement_timeout_min;
>     uint256 public settlement_timeout_max;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        210
Source: 
>     // The deposit limit per channel per participant.
>     uint256 public channel_participant_deposit_limit;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // The total combined deposit of all channels across the whole network

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        212
Source: 
>     // The total combined deposit of all channels across the whole network
>     uint256 public token_network_deposit_limit;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        216
Source: 
>     // opened channels in this contract
>     uint256 public channel_counter;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        218
Source: 
> 
>     string public constant signature_prefix = '\x19Ethereum Signed Message:\n';
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        221
Source: 
>     // Only for the limited Red Eyes release
>     address public deprecation_executor;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool public safety_deprecation_switch = false;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        222
Source: 
>     address public deprecation_executor;
>     bool public safety_deprecation_switch = false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        231
Source: 
>     // The key is keccak256(participant1_address, participant2_address)
>     mapping (bytes32 => uint256) public participants_hash_to_channel_identifier;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        241
Source: 
>     // claimable tokens
>     mapping(bytes32 => UnlockData) private unlock_identifier_to_unlock_data;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        450
Source: 
>     {
>         bytes32 pair_hash;
>         ^^^^^^^^^^^^^^^^^
>         uint256 channel_identifier;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        451
Source: 
>         bytes32 pair_hash;
>         uint256 channel_identifier;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        512
Source: 
> 
>         uint256 added_deposit;
>         ^^^^^^^^^^^^^^^^^^^^^
>         uint256 channel_deposit;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        513
Source: 
>         uint256 added_deposit;
>         uint256 channel_deposit;
>         ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        516
Source: 
>         Channel storage channel = channels[channel_identifier];
>         Participant storage participant_state = channel.participants[participant];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Participant storage partner_state = channel.participants[partner];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        517
Source: 
>         Participant storage participant_state = channel.participants[participant];
>         Participant storage partner_state = channel.participants[partner];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        577
Source: 
>     {
>         uint256 total_deposit;
>         ^^^^^^^^^^^^^^^^^^^^^
>         uint256 current_withdraw;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        578
Source: 
>         uint256 total_deposit;
>         uint256 current_withdraw;
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>         address partner;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        606
Source: 
>         Channel storage channel = channels[channel_identifier];
>         Participant storage participant_state = channel.participants[participant];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Participant storage partner_state = channel.participants[partner];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        607
Source: 
>         Participant storage participant_state = channel.participants[participant];
>         Participant storage partner_state = channel.participants[partner];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        686
Source: 
> 
>         address recovered_non_closing_participant_address;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        697
Source: 
>         // The closing participant must have signed the balance proof.
>         address recovered_closing_participant_address = recoverAddressFromBalanceProofCounterSignature(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             MessageTypeId.BalanceProof,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        771
Source: 
> 
>         address recovered_non_closing_participant;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address recovered_closing_participant;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        772
Source: 
>         address recovered_non_closing_participant;
>         address recovered_closing_participant;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        822
Source: 
> 
>         Participant storage closing_participant_state = channel.participants[closing_participant];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // Make sure the first signature is from the closing participant

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        891
Source: 
> 
>         bytes32 pair_hash;
>         ^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        901
Source: 
> 
>         Participant storage participant1_state = channel.participants[participant1];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         Participant storage participant2_state = channel.participants[participant2];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        902
Source: 
>         Participant storage participant1_state = channel.participants[participant1];
>         Participant storage participant2_state = channel.participants[participant2];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1019
Source: 
> 
>         bytes32 unlock_key;
>         ^^^^^^^^^^^^^^^^^^
>         bytes32 computed_locksroot;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1020
Source: 
>         bytes32 unlock_key;
>         bytes32 computed_locksroot;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 unlocked_amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1021
Source: 
>         bytes32 computed_locksroot;
>         uint256 unlocked_amount;
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 locked_amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1022
Source: 
>         uint256 unlocked_amount;
>         uint256 locked_amount;
>         ^^^^^^^^^^^^^^^^^^^^^
>         uint256 returned_tokens;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1023
Source: 
>         uint256 locked_amount;
>         uint256 returned_tokens;
>         ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1037
Source: 
>         unlock_key = getUnlockIdentifier(channel_identifier, sender, receiver);
>         UnlockData storage unlock_data = unlock_identifier_to_unlock_data[unlock_key];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         locked_amount = unlock_data.locked_amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1196
Source: 
> 
>         bytes32 pair_hash = getParticipantsHash(participant, partner);
>         ^^^^^^^^^^^^^^^^^
>         return participants_hash_to_channel_identifier[pair_hash];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1218
Source: 
>     {
>         bytes32 unlock_key1;
>         ^^^^^^^^^^^^^^^^^^^
>         bytes32 unlock_key2;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1219
Source: 
>         bytes32 unlock_key1;
>         bytes32 unlock_key2;
>         ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1237
Source: 
>             unlock_key1 = getUnlockIdentifier(channel_identifier, participant1, participant2);
>             UnlockData storage unlock_data1 = unlock_identifier_to_unlock_data[unlock_key1];
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1240
Source: 
>             unlock_key2 = getUnlockIdentifier(channel_identifier, participant2, participant1);
>             UnlockData storage unlock_data2 = unlock_identifier_to_unlock_data[unlock_key2];
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1271
Source: 
>     {
>         bytes32 unlock_key;
>         ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1273
Source: 
> 
>         Participant storage participant_state = channels[channel_identifier].participants[
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             participant

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1277
Source: 
>         unlock_key = getUnlockIdentifier(channel_identifier, participant, partner);
>         UnlockData storage unlock_data = unlock_identifier_to_unlock_data[unlock_key];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1340
Source: 
>     {
>         Participant storage participant_state = channel.participants[participant];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1368
Source: 
>         bytes32 key = getUnlockIdentifier(channel_identifier, sender, receiver);
>         UnlockData storage unlock_data = unlock_identifier_to_unlock_data[key];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         unlock_data.locksroot = locksroot;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1492
Source: 
> 
>         uint256 participant1_amount;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 participant2_amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1493
Source: 
>         uint256 participant1_amount;
>         uint256 participant2_amount;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 total_available_deposit;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1494
Source: 
>         uint256 participant2_amount;
>         uint256 total_available_deposit;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1496
Source: 
> 
>         SettlementData memory participant1_settlement;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         SettlementData memory participant2_settlement;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1497
Source: 
>         SettlementData memory participant1_settlement;
>         SettlementData memory participant2_settlement;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1582
Source: 
>     {
>         uint256 participant1_max_transferred;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 participant2_max_transferred;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1583
Source: 
>         uint256 participant1_max_transferred;
>         uint256 participant2_max_transferred;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 participant1_net_max_received;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1584
Source: 
>         uint256 participant2_max_transferred;
>         uint256 participant1_net_max_received;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 participant1_max_amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1585
Source: 
>         uint256 participant1_net_max_received;
>         uint256 participant1_max_amount;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1675
Source: 
>         // Length of the actual message: 20 + 32 + 32 + 32 + 32 + 32 + 32
>         string memory message_length = '212';
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1677
Source: 
> 
>         bytes32 message_hash = keccak256(abi.encodePacked(
>         ^^^^^^^^^^^^^^^^^^^^
>             signature_prefix,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1706
Source: 
>         // Length of the actual message: 20 + 32 + 32 + 32 + 32 + 32 + 32 + 65
>         string memory message_length = '277';
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1708
Source: 
> 
>         bytes32 message_hash = keccak256(abi.encodePacked(
>         ^^^^^^^^^^^^^^^^^^^^
>             signature_prefix,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1767
Source: 
>         // Length of the actual message: 20 + 32 + 32 + 32 + 20 + 32 + 32
>         string memory message_length = '200';
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1769
Source: 
> 
>         bytes32 message_hash = keccak256(abi.encodePacked(
>         ^^^^^^^^^^^^^^^^^^^^
>             signature_prefix,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1799
Source: 
>         uint256 i;
>         uint256 total_unlocked_amount;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 unlocked_amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1800
Source: 
>         uint256 total_unlocked_amount;
>         uint256 unlocked_amount;
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         bytes32 lockhash;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1802
Source: 
>         bytes32 lockhash;
>         bytes32 total_hash;
>         ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1819
Source: 
>     {
>         uint256 expiration_block;
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 locked_amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1820
Source: 
>         uint256 expiration_block;
>         uint256 locked_amount;
>         ^^^^^^^^^^^^^^^^^^^^^
>         uint256 reveal_block;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1821
Source: 
>         uint256 locked_amount;
>         uint256 reveal_block;
>         ^^^^^^^^^^^^^^^^^^^^
>         bytes32 secrethash;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1861
Source: 
>     /// subtrahend for which no underflow occurs.
>     function failsafe_subtract(uint256 a, uint256 b)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         internal

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetwork
Line:        1874
Source: 
>     /// uint256 value.
>     function failsafe_addition(uint256 a, uint256 b)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         internal

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1889
Source: 
> contract TokenNetworkRegistry is Utils {
>     address public secret_registry_address;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public chain_id;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1890
Source: 
>     address public secret_registry_address;
>     uint256 public chain_id;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public settlement_timeout_min;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1891
Source: 
>     uint256 public chain_id;
>     uint256 public settlement_timeout_min;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public settlement_timeout_max;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1892
Source: 
>     uint256 public settlement_timeout_min;
>     uint256 public settlement_timeout_max;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public max_token_networks;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1893
Source: 
>     uint256 public settlement_timeout_max;
>     uint256 public max_token_networks;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1896
Source: 
>     // Only for the limited Red Eyes release
>     address public deprecation_executor;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public token_network_created = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1897
Source: 
>     address public deprecation_executor;
>     uint256 public token_network_created = 0;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1900
Source: 
>     // Token address => TokenNetwork address
>     mapping(address => address) public token_to_token_networks;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1961
Source: 
> 
>         TokenNetwork token_network;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        192
Source: 
>     // Instance of the token used by the channels
>     Token public token;
>     ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        196
Source: 
>     // mediating transfer.
>     SecretRegistry public secret_registry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        200
Source: 
>     // avoid replay attacks
>     uint256 public chain_id;
>     ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        202
Source: 
> 
>     uint256 public settlement_timeout_min;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public settlement_timeout_max;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        203
Source: 
>     uint256 public settlement_timeout_min;
>     uint256 public settlement_timeout_max;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        205
Source: 
> 
>     uint256 constant public MAX_SAFE_UINT256 = (
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         115792089237316195423570985008687907853269984665640564039457584007913129639935

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        210
Source: 
>     // The deposit limit per channel per participant.
>     uint256 public channel_participant_deposit_limit;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // The total combined deposit of all channels across the whole network

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        212
Source: 
>     // The total combined deposit of all channels across the whole network
>     uint256 public token_network_deposit_limit;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        216
Source: 
>     // opened channels in this contract
>     uint256 public channel_counter;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        218
Source: 
> 
>     string public constant signature_prefix = '\x19Ethereum Signed Message:\n';
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        221
Source: 
>     // Only for the limited Red Eyes release
>     address public deprecation_executor;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool public safety_deprecation_switch = false;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        222
Source: 
>     address public deprecation_executor;
>     bool public safety_deprecation_switch = false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        227
Source: 
>     // the channel
>     mapping (uint256 => Channel) public channels;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        231
Source: 
>     // The key is keccak256(participant1_address, participant2_address)
>     mapping (bytes32 => uint256) public participants_hash_to_channel_identifier;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetwork
Line:        241
Source: 
>     // claimable tokens
>     mapping(bytes32 => UnlockData) private unlock_identifier_to_unlock_data;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetworkRegistry
Line:        1889
Source: 
> contract TokenNetworkRegistry is Utils {
>     address public secret_registry_address;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public chain_id;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetworkRegistry
Line:        1890
Source: 
>     address public secret_registry_address;
>     uint256 public chain_id;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public settlement_timeout_min;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetworkRegistry
Line:        1891
Source: 
>     uint256 public chain_id;
>     uint256 public settlement_timeout_min;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public settlement_timeout_max;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetworkRegistry
Line:        1892
Source: 
>     uint256 public settlement_timeout_min;
>     uint256 public settlement_timeout_max;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public max_token_networks;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetworkRegistry
Line:        1893
Source: 
>     uint256 public settlement_timeout_max;
>     uint256 public max_token_networks;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetworkRegistry
Line:        1896
Source: 
>     // Only for the limited Red Eyes release
>     address public deprecation_executor;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public token_network_created = 0;

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetworkRegistry
Line:        1897
Source: 
>     address public deprecation_executor;
>     uint256 public token_network_created = 0;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     State Variable Shadowing
Description: State variables in inherited contract should not be named
             identically to inherited variables
Type:        Warning
Contract:    TokenNetworkRegistry
Line:        1900
Source: 
>     // Token address => TokenNetwork address
>     mapping(address => address) public token_to_token_networks;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TokenNetwork
Line:        371
Source: 
> 
>     modifier isOpen(uint256 channel_identifier) {
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(channels[channel_identifier].state == ChannelState.Opened);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    TokenNetwork
Line:        376
Source: 
> 
>     modifier settleTimeoutValid(uint256 timeout) {
>                                 ^^^^^^^^^^^^^^^
>         require(timeout >= settlement_timeout_min);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenNetwork
Line:        426
Source: 
>         // Make sure the contract is indeed a token contract
>         require(token.totalSupply() > 0);
>                 ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenNetwork
Line:        454
Source: 
>         // Red Eyes release token network limit
>         require(token.balanceOf(address(this)) < token_network_deposit_limit);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenNetwork
Line:        534
Source: 
>         // Red Eyes release token network limit
>         require(token.balanceOf(address(this)) + added_deposit <= token_network_deposit_limit);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenNetwork
Line:        551
Source: 
>         // Do the transfer
>         require(token.transferFrom(msg.sender, address(this), added_deposit));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenNetwork
Line:        640
Source: 
>         participant_state.withdrawn_amount = total_withdraw;
>         require(token.transfer(participant, current_withdraw));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenNetwork
Line:        981
Source: 
>         if (participant1_transferred_amount > 0) {
>             require(token.transfer(participant1, participant1_transferred_amount));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenNetwork
Line:        985
Source: 
>         if (participant2_transferred_amount > 0) {
>             require(token.transfer(participant2, participant2_transferred_amount));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenNetwork
Line:        1069
Source: 
>         if (unlocked_amount > 0) {
>             require(token.transfer(receiver, unlocked_amount));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenNetwork
Line:        1074
Source: 
>         if (returned_tokens > 0) {
>             require(token.transfer(sender, returned_tokens));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenNetwork
Line:        1838
Source: 
>         // to be successful.
>         reveal_block = secret_registry.getSecretRevealBlockHeight(secrethash);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (reveal_block == 0 || expiration_block <= reveal_block) {

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Utils
Line:        33
Source: 
> 
>         return size > 0;
>                ^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    ECVerify
Line:        103
Source: 
>         // Version of signature should be 27 or 28, but 0 and 1 are also possible
>         if (v < 27) {
>             ^
>             v += 27;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    TokenNetwork
Line:        1499
Source: 
> 
>         participant1_settlement.deposit = participant1_state.deposit;
>         ^^^^^^^^^^^^^^^^^^^^^^^
>         participant1_settlement.withdrawn = participant1_state.withdrawn_amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    TokenNetwork
Line:        1838
Source: 
>         // to be successful.
>         reveal_block = secret_registry.getSecretRevealBlockHeight(secrethash);
>                                                                   ^^^^^^^^^^
>         if (reveal_block == 0 || expiration_block <= reveal_block) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenNetwork
Line:        458
Source: 
>         // There will never be a channel with channel_identifier == 0
>         channel_counter += 1;
>         ^^^^^^^^^^^^^^^^^^^^
>         channel_identifier = channel_counter;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenNetwork
Line:        466
Source: 
>         require(participants_hash_to_channel_identifier[pair_hash] == 0);
>         participants_hash_to_channel_identifier[pair_hash] = channel_identifier;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenNetwork
Line:        476
Source: 
>         // Store channel information
>         channel.settle_block_number = settle_timeout;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         channel.state = ChannelState.Opened;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenNetwork
Line:        477
Source: 
>         channel.settle_block_number = settle_timeout;
>         channel.state = ChannelState.Opened;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenNetwork
Line:        537
Source: 
>         // Update the participant's channel deposit
>         participant_state.deposit = total_deposit;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    SecretRegistry
Line:        137
Source: 
>         }
>         secrethash_to_block[secrethash] = block.number;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit SecretRevealed(secrethash, secret);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        639
Source: 
>         // Do the state change and tokens transfer
>         participant_state.withdrawn_amount = total_withdraw;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(token.transfer(participant, current_withdraw));

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        690
Source: 
> 
>         channel.state = ChannelState.Closed;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         channel.participants[closing_participant].is_the_closer = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        691
Source: 
>         channel.state = ChannelState.Closed;
>         channel.participants[closing_participant].is_the_closer = true;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        694
Source: 
>         // This is the block number at which the channel can be settled.
>         channel.settle_block_number += uint256(block.number);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        1348
Source: 
> 
>         participant_state.nonce = nonce;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         participant_state.balance_hash = balance_hash;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        1349
Source: 
>         participant_state.nonce = nonce;
>         participant_state.balance_hash = balance_hash;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        947
Source: 
>         // Remove the channel data from storage
>         delete channel.participants[participant1];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         delete channel.participants[participant2];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        948
Source: 
>         delete channel.participants[participant1];
>         delete channel.participants[participant2];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         delete channels[channel_identifier];

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        949
Source: 
>         delete channel.participants[participant2];
>         delete channels[channel_identifier];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        1369
Source: 
>         UnlockData storage unlock_data = unlock_identifier_to_unlock_data[key];
>         unlock_data.locksroot = locksroot;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         unlock_data.locked_amount = locked_amount;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        1370
Source: 
>         unlock_data.locksroot = locksroot;
>         unlock_data.locked_amount = locked_amount;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetwork
Line:        1055
Source: 
>         // Remove sender's unlock data
>         delete unlock_identifier_to_unlock_data[unlock_key];
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1959
Source: 
>         // We limit the number of token networks to 1 for the Bug Bounty release
>         token_network_created = token_network_created + 1;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    TokenNetworkRegistry
Line:        1977
Source: 
> 
>         token_to_token_networks[_token_address] = token_network_address;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit TokenNetworkCreated(_token_address, token_network_address);

[0m
