Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    SafeERC20
Line:        363
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        416
Source: 
> 
>     function DVMSellShareCall(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address payable assetTo,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        429
Source: 
> 
>     function CPCancelCall(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address payable assetTo,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        438
Source: 
> 
> 	function CPClaimBidCall(
>  ^^^^^^^^^^^^^^^^^^^^^^^^
>         address payable assetTo,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        450
Source: 
> 
>     function NFTRedeemCall(
>     ^^^^^^^^^^^^^^^^^^^^^^^
>         address payable assetTo,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DODOCalleeHelper
Line:        423
Source: 
>     ) external preventReentrant {
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DODOCalleeHelper
Line:        424
Source: 
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _baseToken, baseAmount, _baseToken == _WETH_);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DODOCalleeHelper
Line:        434
Source: 
>     )external preventReentrant{
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _quoteToken, amount, _quoteToken == _WETH_);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DODOCalleeHelper
Line:        444
Source: 
>     ) external preventReentrant {
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DODOCalleeHelper
Line:        445
Source: 
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _baseToken, baseAmount, _baseToken == _WETH_);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DODOCalleeHelper
Line:        455
Source: 
>     ) external preventReentrant {
>         address _quoteToken = IFragment(msg.sender)._QUOTE_();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _quoteToken, quoteAmount, _quoteToken == _WETH_);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    IFragment
Line:        115
Source: 
>       address collateralVault,
>       uint256 totalSupply, 
>       ^^^^^^^^^^^^^^^^^^^
>       uint256 ownerRatio,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IDODOV2
Line:        27
Source: 
> 
>     function _BASE_TOKEN_() external view returns (address);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IDODOV2
Line:        29
Source: 
> 
>     function _QUOTE_TOKEN_() external view returns (address);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IDODOV2
Line:        87
Source: 
> 
>     function _OWNER_() external returns (address);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IFragment
Line:        128
Source: 
> 
>     function _QUOTE_() external view returns (address);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IFragment
Line:        130
Source: 
> 
>     function _COLLATERAL_VAULT_() external view returns (address);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IFragment
Line:        132
Source: 
> 
>     function _DVM_() external view returns (address);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ReentrancyGuard
Line:        386
Source: 
>     // zero-state of _ENTERED_ is false
>     bool private _ENTERED_;
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        402
Source: 
>     using SafeERC20 for IERC20;
>     address payable public immutable _WETH_;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        416
Source: 
> 
>     function DVMSellShareCall(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address payable assetTo,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        423
Source: 
>     ) external preventReentrant {
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>         ^^^^^^^^^^^^^^^^^^
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        424
Source: 
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();
>         ^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _baseToken, baseAmount, _baseToken == _WETH_);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        429
Source: 
> 
>     function CPCancelCall(
>     ^^^^^^^^^^^^^^^^^^^^^^
>         address payable assetTo,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        434
Source: 
>     )external preventReentrant{
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();
>         ^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _quoteToken, amount, _quoteToken == _WETH_);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        438
Source: 
> 
> 	function CPClaimBidCall(
>  ^^^^^^^^^^^^^^^^^^^^^^^^
>         address payable assetTo,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        444
Source: 
>     ) external preventReentrant {
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>         ^^^^^^^^^^^^^^^^^^
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        445
Source: 
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();
>         ^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _baseToken, baseAmount, _baseToken == _WETH_);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        450
Source: 
> 
>     function NFTRedeemCall(
>     ^^^^^^^^^^^^^^^^^^^^^^^
>         address payable assetTo,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        455
Source: 
>     ) external preventReentrant {
>         address _quoteToken = IFragment(msg.sender)._QUOTE_();
>         ^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _quoteToken, quoteAmount, _quoteToken == _WETH_);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    DODOCalleeHelper
Line:        468
Source: 
>                 IWETH(_WETH_).withdraw(amount);
>                 to.transfer(amount);
>                 ^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        468
Source: 
>                 IWETH(_WETH_).withdraw(amount);
>                 to.transfer(amount);
>                 ^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        468
Source: 
>                 IWETH(_WETH_).withdraw(amount);
>                 to.transfer(amount);
>                 ^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DODOCalleeHelper
Line:        423
Source: 
>     ) external preventReentrant {
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DODOCalleeHelper
Line:        424
Source: 
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _baseToken, baseAmount, _baseToken == _WETH_);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DODOCalleeHelper
Line:        434
Source: 
>     )external preventReentrant{
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _quoteToken, amount, _quoteToken == _WETH_);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DODOCalleeHelper
Line:        444
Source: 
>     ) external preventReentrant {
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DODOCalleeHelper
Line:        445
Source: 
>         address _baseToken = IDODOV2(msg.sender)._BASE_TOKEN_();
>         address _quoteToken = IDODOV2(msg.sender)._QUOTE_TOKEN_();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _baseToken, baseAmount, _baseToken == _WETH_);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DODOCalleeHelper
Line:        455
Source: 
>     ) external preventReentrant {
>         address _quoteToken = IFragment(msg.sender)._QUOTE_();
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _withdraw(assetTo, _quoteToken, quoteAmount, _quoteToken == _WETH_);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        467
Source: 
>             if (amount > 0) {
>                 IWETH(_WETH_).withdraw(amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 to.transfer(amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    ReentrancyGuard
Line:        386
Source: 
>     // zero-state of _ENTERED_ is false
>     bool private _ENTERED_;
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    ReentrancyGuard
Line:        386
Source: 
>     // zero-state of _ENTERED_ is false
>     bool private _ENTERED_;
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    DODOCalleeHelper
Line:        468
Source: 
>                 IWETH(_WETH_).withdraw(amount);
>                 to.transfer(amount);
>                 ^^^^^^^^^^^^^^^^^^^
>             }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReentrancyGuard
Line:        390
Source: 
>         require(!_ENTERED_, "REENTRANT");
>         _ENTERED_ = true;
>         ^^^^^^^^^^^^^^^^
>         _;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReentrancyGuard
Line:        392
Source: 
>         _;
>         _ENTERED_ = false;
>         ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReentrancyGuard
Line:        390
Source: 
>         require(!_ENTERED_, "REENTRANT");
>         _ENTERED_ = true;
>         ^^^^^^^^^^^^^^^^
>         _;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReentrancyGuard
Line:        392
Source: 
>         _;
>         _ENTERED_ = false;
>         ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReentrancyGuard
Line:        390
Source: 
>         require(!_ENTERED_, "REENTRANT");
>         _ENTERED_ = true;
>         ^^^^^^^^^^^^^^^^
>         _;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReentrancyGuard
Line:        392
Source: 
>         _;
>         _ENTERED_ = false;
>         ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReentrancyGuard
Line:        390
Source: 
>         require(!_ENTERED_, "REENTRANT");
>         _ENTERED_ = true;
>         ^^^^^^^^^^^^^^^^
>         _;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ReentrancyGuard
Line:        392
Source: 
>         _;
>         _ENTERED_ = false;
>         ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        363
Source: 
>         // solhint-disable-next-line avoid-low-level-calls
>         (bool success, bytes memory returndata) = address(token).call(data);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "SafeERC20: low-level call failed");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    SafeERC20
Line:        340
Source: 
>         require(
>             (value == 0) || (token.allowance(address(this), spender) == 0),
>                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "SafeERC20: approve from non-zero to non-zero allowance"

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        386
Source: 
>     // zero-state of _ENTERED_ is false
>     bool private _ENTERED_;
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
