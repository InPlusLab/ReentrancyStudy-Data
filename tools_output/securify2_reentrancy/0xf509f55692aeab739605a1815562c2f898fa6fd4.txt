Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    usingNRE
Line:        37
Source: 
> 
>   niguezRandomityEngine internal nre = niguezRandomityEngine(0x031eaE8a8105217ab64359D4361022d0947f4572);
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LuckyNumbers
Line:        149
Source: 
>     
>     address _hex = 0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _dev = 0xDcD44e713bdc830B72e9F90df96aF97Ee6CA64fb;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LuckyNumbers
Line:        150
Source: 
>     address _hex = 0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39;
>     address _dev = 0xDcD44e713bdc830B72e9F90df96aF97Ee6CA64fb;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint _hexDecimal = 100000000;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    LuckyNumbers
Line:        151
Source: 
>     address _dev = 0xDcD44e713bdc830B72e9F90df96aF97Ee6CA64fb;
>     uint _hexDecimal = 100000000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LuckyNumbers
Line:        190
Source: 
>     
>     function tryWin() public payable returns (uint n) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LuckyNumbers
Line:        245
Source: 
>     
>     function claim() public payable {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LuckyNumbers
Line:        257
Source: 
>     
>     function flushDevFees() public payable {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_devBalance > 0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LuckyNumbers
Line:        266
Source: 
>     
>     function start(uint lcPot, uint lcNextRound) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _dev);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Locked Ether
Description: Contracts that may receive ether must also allow users to
             extract the deposited ether from the contract.
Type:        Violation
Contract:    LuckyNumbers
Line:        147
Source: 
> 
> contract LuckyNumbers is usingNRE {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    LuckyNumbers
Line:        266
Source: 
>     
>     function start(uint lcPot, uint lcNextRound) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == _dev);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    LuckyNumbers
Line:        209
Source: 
>         pot += third;
>         nextRound += (third * 2);
>                       ^^^^^^^^^
>         

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LuckyNumbers
Line:        193
Source: 
>         //need to at least have enough HEX
>         require(ERC20(_hex).balanceOf(msg.sender) >= (cost * _hexDecimal), "you don't have enough HEX");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LuckyNumbers
Line:        196
Source: 
>         //need to be approved to take the tokens from sender
>         require(ERC20(_hex).allowance(msg.sender, address(this)) >= (cost * _hexDecimal), "you have not approved enough HEX");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LuckyNumbers
Line:        240
Source: 
>         //deal with transfers at the end to avoid reentrancy attacks.
>         bool transfer = ERC20(_hex).transferFrom(msg.sender, address(this), (cost * _hexDecimal));
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(transfer);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LuckyNumbers
Line:        248
Source: 
>         require(unclaimedPrizes[msg.sender] > 0);
>         require(ERC20(_hex).balanceOf(address(this)) >= unclaimedPrizes[msg.sender]);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LuckyNumbers
Line:        254
Source: 
>         unclaimedPrizes[msg.sender] = 0;
>         ERC20(_hex).transfer(msg.sender, (prizeHex * _hexDecimal));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LuckyNumbers
Line:        259
Source: 
>         require(_devBalance > 0);
>         require(ERC20(_hex).balanceOf(address(this)) >= _devBalance);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    LuckyNumbers
Line:        263
Source: 
>         _devBalance = 0;
>         ERC20(_hex).transfer(_dev, toTransfer);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    niguezRandomityEngine
Line:        7
Source: 
> 
> contract niguezRandomityEngine {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    usingNRE
Line:        35
Source: 
> 
> contract usingNRE {
> ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    LuckyNumbers
Line:        158
Source: 
>     uint nextRound = 0;
>     uint constant public cost = 10000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public startedAt;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    LuckyNumbers
Line:        177
Source: 
>     
>     event jackpotClaimed(
>     ^^^^^^^^^^^^^^^^^^^^^
>         address winner,

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity >= 0.5.0 < 0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LuckyNumbers
Line:        149
Source: 
>     
>     address _hex = 0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _dev = 0xDcD44e713bdc830B72e9F90df96aF97Ee6CA64fb;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LuckyNumbers
Line:        150
Source: 
>     address _hex = 0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39;
>     address _dev = 0xDcD44e713bdc830B72e9F90df96aF97Ee6CA64fb;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint _hexDecimal = 100000000;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LuckyNumbers
Line:        151
Source: 
>     address _dev = 0xDcD44e713bdc830B72e9F90df96aF97Ee6CA64fb;
>     uint _hexDecimal = 100000000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LuckyNumbers
Line:        157
Source: 
>     uint public pot = 0;
>     uint nextRound = 0;
>     ^^^^^^^^^^^^^^^^^^
>     uint constant public cost = 10000;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LuckyNumbers
Line:        162
Source: 
>     uint public max = 1000;
>     uint _devBalance = 0;
>     ^^^^^^^^^^^^^^^^^^^^
>     bool gamesStarted = false;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LuckyNumbers
Line:        163
Source: 
>     uint _devBalance = 0;
>     bool gamesStarted = false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LuckyNumbers
Line:        151
Source: 
>     address _dev = 0xDcD44e713bdc830B72e9F90df96aF97Ee6CA64fb;
>     uint _hexDecimal = 100000000;
>                        ^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    usingNRE
Line:        60
Source: 
> 	function rf() internal view returns (uint256) {
>         return nre.rf();
>                ^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    usingNRE
Line:        88
Source: 
> 	function rm() internal view returns (uint256) {
>         return nre.rm();
>                ^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    usingNRE
Line:        132
Source: 
> 	function rx() internal view returns (uint256) {
>         return nre.rx();
>                ^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    LuckyNumbers
Line:        193
Source: 
>         //need to at least have enough HEX
>         require(ERC20(_hex).balanceOf(msg.sender) >= (cost * _hexDecimal), "you don't have enough HEX");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    LuckyNumbers
Line:        196
Source: 
>         //need to be approved to take the tokens from sender
>         require(ERC20(_hex).allowance(msg.sender, address(this)) >= (cost * _hexDecimal), "you have not approved enough HEX");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    LuckyNumbers
Line:        240
Source: 
>         //deal with transfers at the end to avoid reentrancy attacks.
>         bool transfer = ERC20(_hex).transferFrom(msg.sender, address(this), (cost * _hexDecimal));
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(transfer);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    LuckyNumbers
Line:        248
Source: 
>         require(unclaimedPrizes[msg.sender] > 0);
>         require(ERC20(_hex).balanceOf(address(this)) >= unclaimedPrizes[msg.sender]);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    LuckyNumbers
Line:        259
Source: 
>         require(_devBalance > 0);
>         require(ERC20(_hex).balanceOf(address(this)) >= _devBalance);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LuckyNumbers
Line:        254
Source: 
>         unclaimedPrizes[msg.sender] = 0;
>         ERC20(_hex).transfer(msg.sender, (prizeHex * _hexDecimal));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LuckyNumbers
Line:        263
Source: 
>         _devBalance = 0;
>         ERC20(_hex).transfer(_dev, toTransfer);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    LuckyNumbers
Line:        159
Source: 
>     uint constant public cost = 10000;
>     uint public startedAt;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint public luckyNumber;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    LuckyNumbers
Line:        203
Source: 
>         uint fee = 1000;
>         _devBalance += fee;
>         ^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    LuckyNumbers
Line:        208
Source: 
>         uint third = costsubFee / 3;
>         pot += third;
>         ^^^^^^^^^^^^
>         nextRound += (third * 2);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    LuckyNumbers
Line:        209
Source: 
>         pot += third;
>         nextRound += (third * 2);
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    LuckyNumbers
Line:        235
Source: 
>             
>             pot = halfOfNextPot;
>             ^^^^^^^^^^^^^^^^^^^
>             nextRound = halfOfNextPot;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    LuckyNumbers
Line:        236
Source: 
>             pot = halfOfNextPot;
>             nextRound = halfOfNextPot;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    LuckyNumbers
Line:        262
Source: 
>         uint toTransfer = (_devBalance * _hexDecimal);
>         _devBalance = 0;
>         ^^^^^^^^^^^^^^^
>         ERC20(_hex).transfer(_dev, toTransfer);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        40
Source: 
>   function ra() internal view returns (uint256) {
>         return nre.ra();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        44
Source: 
> 	function rb() internal view returns (uint256) {
>         return nre.rb();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        48
Source: 
> 	function rc() internal view returns (uint256) {
>         return nre.rc();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        52
Source: 
> 	function rd() internal view returns (uint256) {
>         return nre.rd();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        56
Source: 
> 	function re() internal view returns (uint256) {
>         return nre.re();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        60
Source: 
> 	function rf() internal view returns (uint256) {
>         return nre.rf();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        64
Source: 
> 	function rg() internal view returns (uint256) {
>         return nre.rg();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        68
Source: 
> 	function rh() internal view returns (uint256) {
>         return nre.rh();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        72
Source: 
> 	function ri() internal view returns (uint256) {
>         return nre.ri();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        76
Source: 
> 	function rj() internal view returns (uint256) {
>         return nre.rj();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        80
Source: 
> 	function rk() internal view returns (uint256) {
>         return nre.rk();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        84
Source: 
> 	function rl() internal view returns (uint256) {
>         return nre.rl();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        88
Source: 
> 	function rm() internal view returns (uint256) {
>         return nre.rm();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        92
Source: 
> 	function rn() internal view returns (uint256) {
>         return nre.rn();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        96
Source: 
> 	function ro() internal view returns (uint256) {
>         return nre.ro();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        100
Source: 
> 	function rp() internal view returns (uint256) {
>         return nre.rp();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        104
Source: 
> 	function rq() internal view returns (uint256) {
>         return nre.rq();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        108
Source: 
> 	function rr() internal view returns (uint256) {
>         return nre.rr();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        112
Source: 
> 	function rs() internal view returns (uint256) {
>         return nre.rs();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        116
Source: 
> 	function rt() internal view returns (uint256) {
>         return nre.rt();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        120
Source: 
> 	function ru() internal view returns (uint256) {
>         return nre.ru();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        124
Source: 
> 	function rv() internal view returns (uint256) {
>         return nre.rv();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        128
Source: 
> 	function rw() internal view returns (uint256) {
>         return nre.rw();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        132
Source: 
> 	function rx() internal view returns (uint256) {
>         return nre.rx();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        40
Source: 
>   function ra() internal view returns (uint256) {
>         return nre.ra();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        44
Source: 
> 	function rb() internal view returns (uint256) {
>         return nre.rb();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        48
Source: 
> 	function rc() internal view returns (uint256) {
>         return nre.rc();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        52
Source: 
> 	function rd() internal view returns (uint256) {
>         return nre.rd();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        56
Source: 
> 	function re() internal view returns (uint256) {
>         return nre.re();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        64
Source: 
> 	function rg() internal view returns (uint256) {
>         return nre.rg();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        68
Source: 
> 	function rh() internal view returns (uint256) {
>         return nre.rh();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        72
Source: 
> 	function ri() internal view returns (uint256) {
>         return nre.ri();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        76
Source: 
> 	function rj() internal view returns (uint256) {
>         return nre.rj();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        80
Source: 
> 	function rk() internal view returns (uint256) {
>         return nre.rk();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        84
Source: 
> 	function rl() internal view returns (uint256) {
>         return nre.rl();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        92
Source: 
> 	function rn() internal view returns (uint256) {
>         return nre.rn();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        96
Source: 
> 	function ro() internal view returns (uint256) {
>         return nre.ro();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        100
Source: 
> 	function rp() internal view returns (uint256) {
>         return nre.rp();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        104
Source: 
> 	function rq() internal view returns (uint256) {
>         return nre.rq();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        108
Source: 
> 	function rr() internal view returns (uint256) {
>         return nre.rr();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        112
Source: 
> 	function rs() internal view returns (uint256) {
>         return nre.rs();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        116
Source: 
> 	function rt() internal view returns (uint256) {
>         return nre.rt();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        120
Source: 
> 	function ru() internal view returns (uint256) {
>         return nre.ru();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        124
Source: 
> 	function rv() internal view returns (uint256) {
>         return nre.rv();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    usingNRE
Line:        128
Source: 
> 	function rw() internal view returns (uint256) {
>         return nre.rw();
>                ^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    LuckyNumbers
Line:        254
Source: 
>         unclaimedPrizes[msg.sender] = 0;
>         ERC20(_hex).transfer(msg.sender, (prizeHex * _hexDecimal));
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    LuckyNumbers
Line:        263
Source: 
>         _devBalance = 0;
>         ERC20(_hex).transfer(_dev, toTransfer);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    usingNRE
Line:        37
Source: 
> 
>   niguezRandomityEngine internal nre = niguezRandomityEngine(0x031eaE8a8105217ab64359D4361022d0947f4572);
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    LuckyNumbers
Line:        159
Source: 
>     uint constant public cost = 10000;
>     uint public startedAt;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint public luckyNumber;

[0m
