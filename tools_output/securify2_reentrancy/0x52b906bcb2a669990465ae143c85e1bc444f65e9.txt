Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ElevateSwap
Line:        80
Source: 
> 
>   function ethPayment(
>   ^^^^^^^^^^^^^^^^^^^^
>     bytes32 _id,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ElevateSwap
Line:        106
Source: 
> 
>   function erc20Payment(
>   ^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 _id,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ElevateSwap
Line:        136
Source: 
> 
>   function erc1155Payment(
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 _id,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ElevateSwap
Line:        132
Source: 
>     IERC20 token = IERC20(_tokenAddress);
>     require(token.transferFrom(msg.sender, address(this), _amount));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit PaymentSent(_id);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    ElevateSwap
Line:        163
Source: 
>     IERC1155 token = IERC1155(_tokenAddress);
>     token.safeTransferFrom(msg.sender, address(this), _tokenId, _amount, bytes(msg.data));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit PaymentSent(_id);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.6.4;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    ElevateSwap
Line:        189
Source: 
>     if (_tokenAddress == address(0)) {
>       msg.sender.transfer(_amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else if(_tokenId > uint256(0)) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    ElevateSwap
Line:        225
Source: 
>     if (_tokenAddress == address(0)) {
>       msg.sender.transfer(_amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else if(_tokenId > uint256(0)) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    ElevateSwap
Line:        189
Source: 
>     if (_tokenAddress == address(0)) {
>       msg.sender.transfer(_amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else if(_tokenId > uint256(0)) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    ElevateSwap
Line:        225
Source: 
>     if (_tokenAddress == address(0)) {
>       msg.sender.transfer(_amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else if(_tokenId > uint256(0)) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    ElevateSwap
Line:        189
Source: 
>     if (_tokenAddress == address(0)) {
>       msg.sender.transfer(_amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else if(_tokenId > uint256(0)) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    ElevateSwap
Line:        225
Source: 
>     if (_tokenAddress == address(0)) {
>       msg.sender.transfer(_amount);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else if(_tokenId > uint256(0)) {

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ElevateSwap
Line:        132
Source: 
>     IERC20 token = IERC20(_tokenAddress);
>     require(token.transferFrom(msg.sender, address(this), _amount));
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit PaymentSent(_id);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ElevateSwap
Line:        195
Source: 
>       IERC20 token = IERC20(_tokenAddress);
>       require(token.transfer(msg.sender, _amount));
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    ElevateSwap
Line:        231
Source: 
>       IERC20 token = IERC20(_tokenAddress);
>       require(token.transfer(msg.sender, _amount));
>               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ElevateSwap
Line:        163
Source: 
>     IERC1155 token = IERC1155(_tokenAddress);
>     token.safeTransferFrom(msg.sender, address(this), _tokenId, _amount, bytes(msg.data));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit PaymentSent(_id);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ElevateSwap
Line:        192
Source: 
>       IERC1155 token = IERC1155(_tokenAddress);
>       token.safeTransferFrom(address(this), msg.sender, _tokenId, _amount, bytes(msg.data));
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    ElevateSwap
Line:        228
Source: 
>       IERC1155 token = IERC1155(_tokenAddress);
>       token.safeTransferFrom(address(this), msg.sender, _tokenId, _amount, bytes(msg.data));
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ElevateSwap
Line:        97
Source: 
> 
>     payments[_id] = Payment(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>       paymentHash,

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ElevateSwap
Line:        125
Source: 
> 
>     payments[_id] = Payment(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>       paymentHash,

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ElevateSwap
Line:        156
Source: 
> 
>     payments[_id] = Payment(
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>       paymentHash,

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ElevateSwap
Line:        72
Source: 
> 
>   bytes4 constant internal ERC1155_ACCEPTED = 0xf23a6e61; 
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>  

[0m
