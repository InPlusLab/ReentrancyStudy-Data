[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DssLaunchSpell
Line:        55
Source: 
>         address _action = action;
>         assembly { _tag := extcodehash(_action) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         tag = _tag;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DssLaunchSpell
Line:        42
Source: 
> contract DssLaunchSpell {
>     PauseLike public pause =
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         PauseLike(0xbE286431454714F511008713973d3B053A2d38f3);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    DssLaunchSpell
Line:        62
Source: 
>         require(now >= 1574092800, "launch-time-error");
>         require(eta == 0, "spell-already-scheduled");
>                 ^^^^^^^^
>         eta = now + PauseLike(pause).delay();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    LaunchSpellAction
Line:        26
Source: 
> 
>     function execute() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // set the global debt ceiling to 153,000,000

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssLaunchSpell
Line:        59
Source: 
> 
>     function schedule() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         // 1574092800 == Monday, November 18, 2019 16:00:00 GMT

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssLaunchSpell
Line:        67
Source: 
> 
>     function cast() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!done, "spell-already-cast");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssLaunchSpell
Line:        63
Source: 
>         require(eta == 0, "spell-already-scheduled");
>         eta = now + PauseLike(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssLaunchSpell
Line:        64
Source: 
>         eta = now + PauseLike(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssLaunchSpell
Line:        69
Source: 
>         require(!done, "spell-already-cast");
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         done = true;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssLaunchSpell
Line:        53
Source: 
>         action = address(new LaunchSpellAction());
>         bytes32 _tag;
>         ^^^^^^^^^^^^
>         address _action = action;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssLaunchSpell
Line:        54
Source: 
>         bytes32 _tag;
>         address _action = action;
>         ^^^^^^^^^^^^^^^
>         assembly { _tag := extcodehash(_action) }

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LaunchSpellAction
Line:        23
Source: 
> contract LaunchSpellAction {
>     uint constant RAD = 10 ** 45;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant VAT = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    LaunchSpellAction
Line:        24
Source: 
>     uint constant RAD = 10 ** 45;
>     address constant VAT = 0x35D1b3F3D7966A1DFe207aa4514C12a259A0492B;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LaunchSpellAction
Line:        28
Source: 
>         // set the global debt ceiling to 153,000,000
>         VatLike(VAT).file("Line", 153000000 * RAD);
>                                   ^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LaunchSpellAction
Line:        31
Source: 
>         // set the ETH-A debt ceiling to 50,000,000
>         VatLike(VAT).file("ETH-A", "line", 50000000 * RAD);
>                                            ^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LaunchSpellAction
Line:        34
Source: 
>         // set the BAT-A debt ceiling to 3,000,000
>         VatLike(VAT).file("BAT-A", "line", 3000000 * RAD);
>                                            ^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LaunchSpellAction
Line:        37
Source: 
>         // set the SAI debt ceiling to 100,000,000
>         VatLike(VAT).file("SAI", "line", 100000000 * RAD);
>                                          ^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DssLaunchSpell
Line:        63
Source: 
>         require(eta == 0, "spell-already-scheduled");
>         eta = now + PauseLike(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LaunchSpellAction
Line:        28
Source: 
>         // set the global debt ceiling to 153,000,000
>         VatLike(VAT).file("Line", 153000000 * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LaunchSpellAction
Line:        31
Source: 
>         // set the ETH-A debt ceiling to 50,000,000
>         VatLike(VAT).file("ETH-A", "line", 50000000 * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LaunchSpellAction
Line:        34
Source: 
>         // set the BAT-A debt ceiling to 3,000,000
>         VatLike(VAT).file("BAT-A", "line", 3000000 * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    LaunchSpellAction
Line:        37
Source: 
>         // set the SAI debt ceiling to 100,000,000
>         VatLike(VAT).file("SAI", "line", 100000000 * RAD);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssLaunchSpell
Line:        64
Source: 
>         eta = now + PauseLike(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssLaunchSpell
Line:        69
Source: 
>         require(!done, "spell-already-cast");
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         done = true;

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DssLaunchSpell
Line:        56
Source: 
>         assembly { _tag := extcodehash(_action) }
>         tag = _tag;
>               ^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssLaunchSpell
Line:        46
Source: 
>     bytes32   public tag;
>     uint256   public eta;
>     ^^^^^^^^^^^^^^^^^^^^
>     bytes     public sig;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssLaunchSpell
Line:        48
Source: 
>     bytes     public sig;
>     bool      public done;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssLaunchSpell
Line:        63
Source: 
>         require(eta == 0, "spell-already-scheduled");
>         eta = now + PauseLike(pause).delay();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssLaunchSpell
Line:        70
Source: 
>         pause.exec(action, tag, sig, eta);
>         done = true;
>         ^^^^^^^^^^^
>     }

[0m
