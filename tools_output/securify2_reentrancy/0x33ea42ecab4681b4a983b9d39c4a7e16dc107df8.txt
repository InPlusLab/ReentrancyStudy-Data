[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    AXIATOKEN
Line:        239
Source: 
>     uint public TrigReward;
>     uint public burnAmount;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     address administrator;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    AXIATOKEN
Line:        241
Source: 
>     address administrator;
>     uint totalEmitted;
>     ^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AXIATOKEN
Line:        283
Source: 
>     
>        function poolconfigs(address _oracle, address _defi, address _univ2, address _axia) public onlyAdministrator returns (bool success) {
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pool1 = _oracle;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AXIATOKEN
Line:        302
Source: 
>     
>     function whitelist(address _address) public onlyAdministrator returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        Address_Whitelisted[_address] = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AXIATOKEN
Line:        307
Source: 
>     
>     function unwhitelist(address _address) public onlyAdministrator returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        Address_Whitelisted[_address] = false;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AXIATOKEN
Line:        313
Source: 
>     
>     function whitelistOnEmission(address _address) public onlyAdministrator returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        emission_Whitelisted[_address] = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AXIATOKEN
Line:        318
Source: 
>     
>     function unwhitelistOnEmission(address _address) public onlyAdministrator returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        emission_Whitelisted[_address] = false;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AXIATOKEN
Line:        324
Source: 
>     
>     function supplyeffect(uint _amount) public onlyASP returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        totalSupply -= _amount;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AXIATOKEN
Line:        330
Source: 
>     
>     function Burn(uint _amount) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AXIATOKEN
Line:        342
Source: 
>     // ERC20 Transfer function
>     function transfer(address to, uint value) public override returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(msg.sender, to, value);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AXIATOKEN
Line:        347
Source: 
>     // ERC20 Approve function
>     function approve(address spender, uint value) public override returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowance[msg.sender][spender] = value;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    AXIATOKEN
Line:        353
Source: 
>     // ERC20 TransferFrom function
>     function transferFrom(address from, address to, uint value) public override returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(value <= allowance[from][msg.sender], 'Must not send more than allowance');

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AXIATOKEN
Line:        342
Source: 
>     // ERC20 Transfer function
>     function transfer(address to, uint value) public override returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transfer(msg.sender, to, value);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    AXIATOKEN
Line:        353
Source: 
>     // ERC20 TransferFrom function
>     function transferFrom(address from, address to, uint value) public override returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(value <= allowance[from][msg.sender], 'Must not send more than allowance');

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AXIATOKEN
Line:        283
Source: 
>     
>        function poolconfigs(address _oracle, address _defi, address _univ2, address _axia) public onlyAdministrator returns (bool success) {
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pool1 = _oracle;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AXIATOKEN
Line:        302
Source: 
>     
>     function whitelist(address _address) public onlyAdministrator returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        Address_Whitelisted[_address] = true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AXIATOKEN
Line:        307
Source: 
>     
>     function unwhitelist(address _address) public onlyAdministrator returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        Address_Whitelisted[_address] = false;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AXIATOKEN
Line:        313
Source: 
>     
>     function whitelistOnEmission(address _address) public onlyAdministrator returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        emission_Whitelisted[_address] = true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AXIATOKEN
Line:        318
Source: 
>     
>     function unwhitelistOnEmission(address _address) public onlyAdministrator returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        emission_Whitelisted[_address] = false;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AXIATOKEN
Line:        324
Source: 
>     
>     function supplyeffect(uint _amount) public onlyASP returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        totalSupply -= _amount;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AXIATOKEN
Line:        347
Source: 
>     // ERC20 Approve function
>     function approve(address spender, uint value) public override returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowance[msg.sender][spender] = value;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        562
Source: 
>           l /= pow2;
>           l += h * ((-pow2) / pow2 + 1);
>                ^^^^^^^^^^^^^^^^^^^^^^^^
>           uint r = 1;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        564
Source: 
>           uint r = 1;
>           r *= 2 - z * r;
>                    ^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        564
Source: 
>           uint r = 1;
>           r *= 2 - z * r;
>           ^^^^^^^^^^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        565
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>                    ^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        565
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>           ^^^^^^^^^^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        566
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>                    ^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        566
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>           ^^^^^^^^^^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        567
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>                    ^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        567
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>           ^^^^^^^^^^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        568
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>                    ^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        568
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>           ^^^^^^^^^^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        569
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>                    ^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        569
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>           ^^^^^^^^^^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        570
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>                    ^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        570
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>           ^^^^^^^^^^^^^^
>           r *= 2 - z * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        571
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>                    ^^^^^
>           return l * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        571
Source: 
>           r *= 2 - z * r;
>           r *= 2 - z * r;
>           ^^^^^^^^^^^^^^
>           return l * r;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        572
Source: 
>           r *= 2 - z * r;
>           return l * r;
>                  ^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    AXIATOKEN
Line:        577
Source: 
>           uint mm = mulmod (x, y, uint (-1));
>           l = x * y;
>               ^^^^^
>           h = mm - l;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AXIATOKEN
Line:        413
Source: 
>                     
>                 OSP(pool1).scaledToken(pool1Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool1] += pool1Amount;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AXIATOKEN
Line:        430
Source: 
>                     
>                 DSP(pool2).scaledToken(pool1Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool2] += pool1Amount;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AXIATOKEN
Line:        446
Source: 
>                     
>                 USP(pool3).scaledToken(pool2Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool3] += pool2Amount;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AXIATOKEN
Line:        461
Source: 
>                     
>                 USP(pool4).scaledToken(pool3Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool4] += pool3Amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        191
Source: 
>     event BurnEvent(address indexed pool, address indexed burnaddress, uint amount);
>     event emissions(address indexed root, address indexed pool, uint value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     event TrigRewardEvent(address indexed root, address indexed receiver, uint value);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        233
Source: 
>     uint public amountToEmit;
>     uint public BPE;
>     ^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        238
Source: 
>     uint public actualValue;
>     uint public TrigReward;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     uint public burnAmount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        246
Source: 
>     // Public Mappings
>     mapping(address=>bool) public Address_Whitelisted;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address=>bool) public emission_Whitelisted;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        247
Source: 
>     mapping(address=>bool) public Address_Whitelisted;
>     mapping(address=>bool) public emission_Whitelisted;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        330
Source: 
>     
>     function Burn(uint _amount) public returns (bool success) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        406
Source: 
>                 
>                 uint Ofrozenamount = ospfrozen();
>                 ^^^^^^^^^^^^^^^^^^
>                 uint Dfrozenamount = dspfrozen();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        407
Source: 
>                 uint Ofrozenamount = ospfrozen();
>                 uint Dfrozenamount = dspfrozen();
>                 ^^^^^^^^^^^^^^^^^^
>                 uint Ufrozenamount = uspfrozen();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        408
Source: 
>                 uint Dfrozenamount = dspfrozen();
>                 uint Ufrozenamount = uspfrozen();
>                 ^^^^^^^^^^^^^^^^^^
>                 uint Afrozenamount = aspfrozen();

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        409
Source: 
>                 uint Ufrozenamount = uspfrozen();
>                 uint Afrozenamount = aspfrozen();
>                 ^^^^^^^^^^^^^^^^^^
>                 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        554
Source: 
>      function mulDiv (uint x, uint y, uint z) public pure returns (uint) {
>           (uint l, uint h) = fullMul (x, y);
>            ^^^^^^
>           assert (h < z);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    AXIATOKEN
Line:        575
Source: 
>     
>      function fullMul (uint x, uint y) private pure returns (uint l, uint h) {
>                                                              ^^^^^^
>           uint mm = mulmod (x, y, uint (-1));

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AXIATOKEN
Line:        222
Source: 
>     // Public Parameters
>     uint crypto; 
>     ^^^^^^^^^^^
>     uint startcrypto;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AXIATOKEN
Line:        223
Source: 
>     uint crypto; 
>     uint startcrypto;
>     ^^^^^^^^^^^^^^^^
>     uint public emission;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AXIATOKEN
Line:        240
Source: 
>     uint public burnAmount;
>     address administrator;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint totalEmitted;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    AXIATOKEN
Line:        241
Source: 
>     address administrator;
>     uint totalEmitted;
>     ^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    AXIATOKEN
Line:        259
Source: 
>         startcrypto =  1*10**startdecimal; 
>         totalSupply = 3000000*crypto;                                 
>                       ^^^^^^^
>         initialsupply = 40153125*startcrypto;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AXIATOKEN
Line:        413
Source: 
>                     
>                 OSP(pool1).scaledToken(pool1Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool1] += pool1Amount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AXIATOKEN
Line:        430
Source: 
>                     
>                 DSP(pool2).scaledToken(pool1Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool2] += pool1Amount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AXIATOKEN
Line:        446
Source: 
>                     
>                 USP(pool3).scaledToken(pool2Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool3] += pool2Amount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AXIATOKEN
Line:        461
Source: 
>                     
>                 USP(pool4).scaledToken(pool3Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool4] += pool3Amount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AXIATOKEN
Line:        549
Source: 
>         
>         return ASP(pool4).totalFrozen();
>                ^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AXIATOKEN
Line:        543
Source: 
>         
>         return USP(pool3).totalFrozen();
>                ^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AXIATOKEN
Line:        537
Source: 
>         
>         return DSP(pool2).totalFrozen();
>                ^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AXIATOKEN
Line:        531
Source: 
>         
>         return OSP(pool1).totalFrozen();
>                ^^^^^^^^^^^^^^^^^^^^^^^^
>        

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        205
Source: 
>      //======================================STAKING POOLS=========================================//
>     address public pool1;
>     ^^^^^^^^^^^^^^^^^^^^
>     address public pool2;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        206
Source: 
>     address public pool1;
>     address public pool2;
>     ^^^^^^^^^^^^^^^^^^^^
>     address public pool3;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        207
Source: 
>     address public pool2;
>     address public pool3;
>     ^^^^^^^^^^^^^^^^^^^^
>     address public pool4;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        208
Source: 
>     address public pool3;
>     address public pool4;
>     ^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        210
Source: 
>     
>     uint public pool1Amount;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint public pool2Amount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        211
Source: 
>     uint public pool1Amount;
>     uint public pool2Amount;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint public pool3Amount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        212
Source: 
>     uint public pool2Amount;
>     uint public pool3Amount;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint public poolAmount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        213
Source: 
>     uint public pool3Amount;
>     uint public poolAmount;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        232
Source: 
>     uint public nextDayTime;
>     uint public amountToEmit;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public BPE;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        233
Source: 
>     uint public amountToEmit;
>     uint public BPE;
>     ^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        236
Source: 
>     //======================================BASIS POINT VARIABLES=========================================//
>     uint public bpValue;
>     ^^^^^^^^^^^^^^^^^^^
>     uint public actualValue;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        237
Source: 
>     uint public bpValue;
>     uint public actualValue;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint public TrigReward;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        238
Source: 
>     uint public actualValue;
>     uint public TrigReward;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     uint public burnAmount;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        239
Source: 
>     uint public TrigReward;
>     uint public burnAmount;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     address administrator;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        241
Source: 
>     address administrator;
>     uint totalEmitted;
>     ^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    AXIATOKEN
Line:        243
Source: 
>     
>     address public messagesender;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>      

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    AXIATOKEN
Line:        371
Source: 
>         
>         balanceOf[_from] -= _value;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if(Address_Whitelisted[msg.sender]){ //if the person making the transaction is whitelisted, the no burn on the transaction

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    AXIATOKEN
Line:        488
Source: 
>        
>        balanceOf[_to] += actualValue;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        emit Transfer(_from, _to, actualValue);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    AXIATOKEN
Line:        365
Source: 
>         
>         messagesender = msg.sender; //this is the person actually making the call on this function
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    AXIATOKEN
Line:        348
Source: 
>     function approve(address spender, uint value) public override returns (bool success) {
>         allowance[msg.sender][spender] = value;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender, spender, value);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    AXIATOKEN
Line:        413
Source: 
>                     
>                 OSP(pool1).scaledToken(pool1Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool1] += pool1Amount;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    AXIATOKEN
Line:        430
Source: 
>                     
>                 DSP(pool2).scaledToken(pool1Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool2] += pool1Amount;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    AXIATOKEN
Line:        446
Source: 
>                     
>                 USP(pool3).scaledToken(pool2Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool3] += pool2Amount;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    AXIATOKEN
Line:        461
Source: 
>                     
>                 USP(pool4).scaledToken(pool3Amount);
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 balanceOf[pool4] += pool3Amount;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AXIATOKEN
Line:        197
Source: 
>    // ERC-20 Parameters
>     string public name; 
>     ^^^^^^^^^^^^^^^^^^
>     string public symbol;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AXIATOKEN
Line:        198
Source: 
>     string public name; 
>     string public symbol;
>     ^^^^^^^^^^^^^^^^^^^^
>     uint public decimals; 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AXIATOKEN
Line:        239
Source: 
>     uint public TrigReward;
>     uint public burnAmount;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     address administrator;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    AXIATOKEN
Line:        241
Source: 
>     address administrator;
>     uint totalEmitted;
>     ^^^^^^^^^^^^^^^^^
>     

[0m
