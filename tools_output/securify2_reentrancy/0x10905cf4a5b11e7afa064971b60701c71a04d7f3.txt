[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Minter
Line:        147
Source: 
>     uint256 public handlingFeeRateNew;
>     uint256 public changeFeeWaitTime = 12000;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public changeFeeTime;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        34
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        46
Source: 
> 
>     function renounceOwnership() public virtual onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        51
Source: 
> 
>     function transferOwnership(address newOwner) public virtual onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(newOwner != address(0), "Ownable: new owner is the zero address");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        57
Source: 
> 
>     function setAdmin(address _admin) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         admin = _admin;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        61
Source: 
> 
>     function setDev(address _dev) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         dev = _dev;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        34
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        46
Source: 
> 
>     function renounceOwnership() public virtual onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        51
Source: 
> 
>     function transferOwnership(address newOwner) public virtual onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(newOwner != address(0), "Ownable: new owner is the zero address");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        57
Source: 
> 
>     function setAdmin(address _admin) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         admin = _admin;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        61
Source: 
> 
>     function setDev(address _dev) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         dev = _dev;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Minter
Line:        170
Source: 
> 
>     function generate(uint256 amount) public onlyOwner returns(bool){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(amount > 0, "minterï¼šgenerate amount error");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Minter
Line:        177
Source: 
>     
>     function minter(address _to, uint256 amount) public onlyDev returns(bool){
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(amount > minHandlingFee.mul(10 ** 18).div(100), "minterï¼šwithdrawal amount must be greater than the minimum handling fee");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Minter
Line:        193
Source: 
> 
>     function setCollector(address _collector) public onlyAdmin {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_collector != address(0), "Minter: collector is the zero address");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Minter
Line:        199
Source: 
>     
>     function collectHandlingFee(uint256 amount) public onlyAdmin returns(bool){
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(amount > 0, "minterï¼šcollect amount error");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Minter
Line:        208
Source: 
> 
>     function setHandlingFee(uint256 _fee,uint256 _rate) public onlyAdmin {
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_fee > 0 || _rate > 0,"Minter: New handling fee rate must be greater than 0"); 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Minter
Line:        217
Source: 
>     
>     function effectblockchange() public onlyAdmin {
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(needChangeFee,"Minter: No new handling fee rate are set");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        57
Source: 
> 
>     function setAdmin(address _admin) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         admin = _admin;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        61
Source: 
> 
>     function setDev(address _dev) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         dev = _dev;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Minter
Line:        177
Source: 
>     
>     function minter(address _to, uint256 amount) public onlyDev returns(bool){
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(amount > minHandlingFee.mul(10 ** 18).div(100), "minterï¼šwithdrawal amount must be greater than the minimum handling fee");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Ownable
Line:        57
Source: 
> 
>     function setAdmin(address _admin) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         admin = _admin;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Ownable
Line:        61
Source: 
> 
>     function setDev(address _dev) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         dev = _dev;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Minter
Line:        172
Source: 
>         require(amount > 0, "minterï¼šgenerate amount error");
>         require(amount <= zild.balanceOf(address(this)), "minterï¼šinsufficient balance generates more mines");
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minedAmount = minedAmount.add(amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Minter
Line:        182
Source: 
>         if (handlingfee < minHandlingFee.mul(10 ** 18).div(100)) handlingfee = minHandlingFee.mul(10 ** 18).div(100);
>         zild.transfer(_to,amount.sub(handlingfee));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minedAmount = minedAmount.sub(amount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Builtin
Description: Reports declarations that shadow Solidity's builtin
             symbols.
Type:        Violation
Contract:    Minter
Line:        162
Source: 
>     event SetCollector(address indexed collector,uint256 time);
>     event CollectHandlingFee(uint256 amount,uint256 handlingFeeCollect,uint256 now);
>                                                                        ^^^^^^^^^^^
>     event SetHandlingFee(uint256 fee,uint256 rate,address indexed who,uint256 time);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Minter
Line:        156
Source: 
> 
>     mapping(address => uint256) public user_minter_amount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => uint256) public user_minter_netincome;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Minter
Line:        157
Source: 
>     mapping(address => uint256) public user_minter_amount;
>     mapping(address => uint256) public user_minter_netincome;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     mapping(address => uint256) public user_minter_fee;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Minter
Line:        158
Source: 
>     mapping(address => uint256) public user_minter_netincome;
>     mapping(address => uint256) public user_minter_fee;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Minter
Line:        172
Source: 
>         require(amount > 0, "minterï¼šgenerate amount error");
>         require(amount <= zild.balanceOf(address(this)), "minterï¼šinsufficient balance generates more mines");
>                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minedAmount = minedAmount.add(amount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Minter
Line:        182
Source: 
>         if (handlingfee < minHandlingFee.mul(10 ** 18).div(100)) handlingfee = minHandlingFee.mul(10 ** 18).div(100);
>         zild.transfer(_to,amount.sub(handlingfee));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         minedAmount = minedAmount.sub(amount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Minter
Line:        202
Source: 
>         require(amount <= handlingFeeCollect, "minterï¼šwithdrawal amount exceeds collector balance");
>         zild.transfer(collector,amount);
>                     ^^^^^^^^^^^^^^^^^^^^
>         handlingFeeCollect = handlingFeeCollect.sub(amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Ownable
Line:        17
Source: 
>     address private _owner;
>     address public admin;
>     ^^^^^^^^^^^^^^^^^^^^
>     address public dev;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Ownable
Line:        18
Source: 
>     address public admin;
>     address public dev;
>     ^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Ownable
Line:        17
Source: 
>     address private _owner;
>     address public admin;
>     ^^^^^^^^^^^^^^^^^^^^
>     address public dev;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Ownable
Line:        18
Source: 
>     address public admin;
>     address public dev;
>     ^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Minter
Line:        144
Source: 
>     uint256 public minHandlingFee = 5;
>     uint256 public minHandlingFeeNew;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public handlingFeeRate = 4;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Minter
Line:        146
Source: 
>     uint256 public handlingFeeRate = 4;
>     uint256 public handlingFeeRateNew;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public changeFeeWaitTime = 12000;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Minter
Line:        148
Source: 
>     uint256 public changeFeeWaitTime = 12000;
>     uint256 public changeFeeTime;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 	bool    public needChangeFee = false;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Minter
Line:        150
Source: 
> 	bool    public needChangeFee = false;
>     uint256 public handlingFeeCollect;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public minedAmount;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Minter
Line:        151
Source: 
>     uint256 public handlingFeeCollect;
>     uint256 public minedAmount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public collector = address(0);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Ownable
Line:        17
Source: 
>     address private _owner;
>     address public admin;
>     ^^^^^^^^^^^^^^^^^^^^
>     address public dev;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Ownable
Line:        18
Source: 
>     address public admin;
>     address public dev;
>     ^^^^^^^^^^^^^^^^^^
>     

[0m
