pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    UOP_Vesting
Line:        335
Source: 
>     using SafeMath for uint256;
>     address UOP_token_address = 0xE4AE84448DB5CFE1DaF1e6fb172b469c161CB85F; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant START_VESTING_DATE = 1608076800; //2020-12-16T00:00:00+00:00

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    UOP_Vesting
Line:        360
Source: 
>     uint8 constant stagesAmount = 9;
>     address[allowedAddressesAmount] allowedAddresses = [PUBLIC_SALE, FOUND_ECOSYSTEM, FOUND_TREASURY, AG_SHAREHOLDERS, AG_TEAM];
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256[stagesAmount] private _stageDates;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    UOP_Vesting
Line:        361
Source: 
>     address[allowedAddressesAmount] allowedAddresses = [PUBLIC_SALE, FOUND_ECOSYSTEM, FOUND_TREASURY, AG_SHAREHOLDERS, AG_TEAM];
>     uint256[stagesAmount] private _stageDates;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256[stagesAmount][allowedAddressesAmount] private _caps;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    UOP_Vesting
Line:        362
Source: 
>     uint256[stagesAmount] private _stageDates;
>     uint256[stagesAmount][allowedAddressesAmount] private _caps;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        61
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        80
Source: 
>      */
>     function renounceOwnership() public virtual onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        89
Source: 
>      */
>     function transferOwnership(address newOwner) public virtual onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(newOwner != address(0), "Ownable: new owner is the zero address");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        80
Source: 
>      */
>     function renounceOwnership() public virtual onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UOP_Vesting
Line:        466
Source: 
>         IERC20 uop_token = IERC20(UOP_token_address);
>         return uop_token.transfer(msg.sender, amount);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UOP_Vesting
Line:        471
Source: 
>         IERC20 uop_token = IERC20(UOP_token_address);
>         return uop_token.balanceOf(address(this));
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    UOP_Vesting
Line:        504
Source: 
>         IERC20 uop_token = IERC20(UOP_token_address);
>         return uop_token.transfer(owner(), amount);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    UOP_Vesting
Line:        459
Source: 
> 
>     function retrieveTokens(uint256 amount) external returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint8 stageIndex = getCurrentStageIndex();

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    UOP_Vesting
Line:        487
Source: 
> 
>     function getCap(address recipient, uint8 stageIndex) external view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint8 addrIndex = getAddressIndex(recipient);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    UOP_Vesting
Line:        502
Source: 
> 
>     function revoke(uint256 amount) external onlyOwner returns(bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC20 uop_token = IERC20(UOP_token_address);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    UOP_Vesting
Line:        483
Source: 
>     
>     function getEarnedAmount(address recipient) external view returns (uint256) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return earnedAmount[recipient];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    UOP_Vesting
Line:        494
Source: 
> 
>     function setCap(address recipient, uint8 stageIndex, uint256 amount) external onlyOwner returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint8 addrIndex = getAddressIndex(recipient);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    UOP_Vesting
Line:        466
Source: 
>         IERC20 uop_token = IERC20(UOP_token_address);
>         return uop_token.transfer(msg.sender, amount);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    UOP_Vesting
Line:        332
Source: 
> 
> contract UOP_Vesting is Ownable {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    UOP_Vesting
Line:        335
Source: 
>     using SafeMath for uint256;
>     address UOP_token_address = 0xE4AE84448DB5CFE1DaF1e6fb172b469c161CB85F; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant START_VESTING_DATE = 1608076800; //2020-12-16T00:00:00+00:00

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    UOP_Vesting
Line:        358
Source: 
>     
>     uint8 constant allowedAddressesAmount = 5;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant stagesAmount = 9;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    UOP_Vesting
Line:        359
Source: 
>     uint8 constant allowedAddressesAmount = 5;
>     uint8 constant stagesAmount = 9;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address[allowedAddressesAmount] allowedAddresses = [PUBLIC_SALE, FOUND_ECOSYSTEM, FOUND_TREASURY, AG_SHAREHOLDERS, AG_TEAM];

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    UOP_Vesting
Line:        465
Source: 
>         earnedAmount[msg.sender] = earnedAmount[msg.sender].add(amount);
>         IERC20 uop_token = IERC20(UOP_token_address);
>         ^^^^^^^^^^^^^^^^
>         return uop_token.transfer(msg.sender, amount);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    UOP_Vesting
Line:        470
Source: 
>     function getUopBalance() external view returns (uint256) {
>         IERC20 uop_token = IERC20(UOP_token_address);
>         ^^^^^^^^^^^^^^^^
>         return uop_token.balanceOf(address(this));

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    UOP_Vesting
Line:        503
Source: 
>     function revoke(uint256 amount) external onlyOwner returns(bool) {
>         IERC20 uop_token = IERC20(UOP_token_address);
>         ^^^^^^^^^^^^^^^^
>         return uop_token.transfer(owner(), amount);

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        172
Source: 
> 
> pragma solidity >=0.6.0 <0.8.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        335
Source: 
>     using SafeMath for uint256;
>     address UOP_token_address = 0xE4AE84448DB5CFE1DaF1e6fb172b469c161CB85F; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant START_VESTING_DATE = 1608076800; //2020-12-16T00:00:00+00:00

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        336
Source: 
>     address UOP_token_address = 0xE4AE84448DB5CFE1DaF1e6fb172b469c161CB85F; 
>     uint256 constant START_VESTING_DATE = 1608076800; //2020-12-16T00:00:00+00:00
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant ONE_DAY_IN_SECONDS = 60 * 60 * 24;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        337
Source: 
>     uint256 constant START_VESTING_DATE = 1608076800; //2020-12-16T00:00:00+00:00
>     uint256 constant ONE_DAY_IN_SECONDS = 60 * 60 * 24;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant AMOUNT_MULTIPLIER = 10 ** 21;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        338
Source: 
>     uint256 constant ONE_DAY_IN_SECONDS = 60 * 60 * 24;
>     uint256 constant AMOUNT_MULTIPLIER = 10 ** 21;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        340
Source: 
> 
>     mapping (address => uint256) earnedAmount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        342
Source: 
> 
>     uint256 constant STAGE_1_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 0; // IEO date
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant STAGE_2_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 60; // 60 days from start

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        343
Source: 
>     uint256 constant STAGE_1_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 0; // IEO date
>     uint256 constant STAGE_2_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 60; // 60 days from start
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant STAGE_3_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 120; // 120 days from start

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        344
Source: 
>     uint256 constant STAGE_2_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 60; // 60 days from start
>     uint256 constant STAGE_3_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 120; // 120 days from start
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant STAGE_4_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 180; // 180 days from start

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        345
Source: 
>     uint256 constant STAGE_3_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 120; // 120 days from start
>     uint256 constant STAGE_4_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 180; // 180 days from start
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant STAGE_5_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 240; // 240 days from start

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        346
Source: 
>     uint256 constant STAGE_4_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 180; // 180 days from start
>     uint256 constant STAGE_5_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 240; // 240 days from start
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant STAGE_6_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 360; // 360 days from start

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        347
Source: 
>     uint256 constant STAGE_5_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 240; // 240 days from start
>     uint256 constant STAGE_6_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 360; // 360 days from start
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant STAGE_7_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 720; // 720 days from start

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        348
Source: 
>     uint256 constant STAGE_6_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 360; // 360 days from start
>     uint256 constant STAGE_7_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 720; // 720 days from start
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant STAGE_8_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 1080; // 1080 days from start

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        349
Source: 
>     uint256 constant STAGE_7_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 720; // 720 days from start
>     uint256 constant STAGE_8_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 1080; // 1080 days from start
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant STAGE_9_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 1800; // 1800 days from start

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        350
Source: 
>     uint256 constant STAGE_8_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 1080; // 1080 days from start
>     uint256 constant STAGE_9_DATE = START_VESTING_DATE + ONE_DAY_IN_SECONDS * 1800; // 1800 days from start
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        352
Source: 
>     
>     address constant PUBLIC_SALE = 0xe33Ba03933ab0fcC064c03C9a2e4Da9d8e19B3d7; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant FOUND_ECOSYSTEM = 0xAb6EB3FF8BEc07A018c98E2A7Dc687F60bADaBDe; 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        353
Source: 
>     address constant PUBLIC_SALE = 0xe33Ba03933ab0fcC064c03C9a2e4Da9d8e19B3d7; 
>     address constant FOUND_ECOSYSTEM = 0xAb6EB3FF8BEc07A018c98E2A7Dc687F60bADaBDe; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant FOUND_TREASURY = 0xb2dE9aB64676CE1A5A0E821244a2b9edF401043c; 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        354
Source: 
>     address constant FOUND_ECOSYSTEM = 0xAb6EB3FF8BEc07A018c98E2A7Dc687F60bADaBDe; 
>     address constant FOUND_TREASURY = 0xb2dE9aB64676CE1A5A0E821244a2b9edF401043c; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant AG_SHAREHOLDERS = 0x9e1605321664d13426F67D07f3bFc4fB28777f78; 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        355
Source: 
>     address constant FOUND_TREASURY = 0xb2dE9aB64676CE1A5A0E821244a2b9edF401043c; 
>     address constant AG_SHAREHOLDERS = 0x9e1605321664d13426F67D07f3bFc4fB28777f78; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address constant AG_TEAM = 0xE459e5bF1E872Ca5b02cfA24e622874A2AC1BB34; 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        356
Source: 
>     address constant AG_SHAREHOLDERS = 0x9e1605321664d13426F67D07f3bFc4fB28777f78; 
>     address constant AG_TEAM = 0xE459e5bF1E872Ca5b02cfA24e622874A2AC1BB34; 
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        358
Source: 
>     
>     uint8 constant allowedAddressesAmount = 5;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8 constant stagesAmount = 9;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        359
Source: 
>     uint8 constant allowedAddressesAmount = 5;
>     uint8 constant stagesAmount = 9;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address[allowedAddressesAmount] allowedAddresses = [PUBLIC_SALE, FOUND_ECOSYSTEM, FOUND_TREASURY, AG_SHAREHOLDERS, AG_TEAM];

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    UOP_Vesting
Line:        360
Source: 
>     uint8 constant stagesAmount = 9;
>     address[allowedAddressesAmount] allowedAddresses = [PUBLIC_SALE, FOUND_ECOSYSTEM, FOUND_TREASURY, AG_SHAREHOLDERS, AG_TEAM];
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256[stagesAmount] private _stageDates;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UOP_Vesting
Line:        466
Source: 
>         IERC20 uop_token = IERC20(UOP_token_address);
>         return uop_token.transfer(msg.sender, amount);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UOP_Vesting
Line:        471
Source: 
>         IERC20 uop_token = IERC20(UOP_token_address);
>         return uop_token.balanceOf(address(this));
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    UOP_Vesting
Line:        504
Source: 
>         IERC20 uop_token = IERC20(UOP_token_address);
>         return uop_token.transfer(owner(), amount);
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UOP_Vesting
Line:        361
Source: 
>     address[allowedAddressesAmount] allowedAddresses = [PUBLIC_SALE, FOUND_ECOSYSTEM, FOUND_TREASURY, AG_SHAREHOLDERS, AG_TEAM];
>     uint256[stagesAmount] private _stageDates;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256[stagesAmount][allowedAddressesAmount] private _caps;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    UOP_Vesting
Line:        362
Source: 
>     uint256[stagesAmount] private _stageDates;
>     uint256[stagesAmount][allowedAddressesAmount] private _caps;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    UOP_Vesting
Line:        456
Source: 
>     function getCurrentStageIndex() public view returns (uint8) {
>         return getStageIndexAt(block.timestamp);
>                                ^^^^^^^^^^^^^^^
>     }

[0m
