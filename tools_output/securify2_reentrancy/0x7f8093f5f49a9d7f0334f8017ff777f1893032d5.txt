Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ThankYouToken
Line:        8
Source: 
> contract ThankYouToken {
>     string public name     = "Thank You Token";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public symbol   = "TYT";

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ThankYouToken
Line:        9
Source: 
>     string public name     = "Thank You Token";
>     string public symbol   = "TYT";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8  public decimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    ThankYouToken
Line:        10
Source: 
>     string public symbol   = "TYT";
>     uint8  public decimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public totalSupply;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ThankYouToken
Line:        35
Source: 
> 
>     function approve(address guy, uint wad) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowance[msg.sender][guy] = wad;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    ThankYouToken
Line:        41
Source: 
> 
>     function transfer(address dst, uint wad) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return transferFrom(msg.sender, dst, wad);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    ThankYouToken
Line:        29
Source: 
>         totalSupply += msg.value;
>         (bool success,) = vault.call.value(msg.value)("");
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success);

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    ThankYouToken
Line:        29
Source: 
>         totalSupply += msg.value;
>         (bool success,) = vault.call.value(msg.value)("");
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ThankYouToken
Line:        35
Source: 
> 
>     function approve(address guy, uint wad) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         allowance[msg.sender][guy] = wad;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ThankYouToken
Line:        41
Source: 
> 
>     function transfer(address dst, uint wad) public returns (bool) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return transferFrom(msg.sender, dst, wad);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    ThankYouToken
Line:        45
Source: 
> 
>     function transferFrom(address src, address dst, uint wad)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ThankYouToken
Line:        13
Source: 
> 
>     address public constant vault = address(0x83D0D842e6DB3B020f384a2af11bD14787BEC8E7);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    ThankYouToken
Line:        29
Source: 
>         totalSupply += msg.value;
>         (bool success,) = vault.call.value(msg.value)("");
>          ^^^^^^^^^^^^
>         require(success);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    ThankYouToken
Line:        29
Source: 
>         totalSupply += msg.value;
>         (bool success,) = vault.call.value(msg.value)("");
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success);

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    ThankYouToken
Line:        11
Source: 
>     uint8  public decimals = 18;
>     uint public totalSupply;
>     ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    ThankYouToken
Line:        29
Source: 
>         totalSupply += msg.value;
>         (bool success,) = vault.call.value(msg.value)("");
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ThankYouToken
Line:        28
Source: 
>         balanceOf[msg.sender] += msg.value;
>         totalSupply += msg.value;
>         ^^^^^^^^^^^^^^^^^^^^^^^^
>         (bool success,) = vault.call.value(msg.value)("");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    ThankYouToken
Line:        36
Source: 
>     function approve(address guy, uint wad) public returns (bool) {
>         allowance[msg.sender][guy] = wad;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit Approval(msg.sender, guy, wad);

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ThankYouToken
Line:        8
Source: 
> contract ThankYouToken {
>     string public name     = "Thank You Token";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     string public symbol   = "TYT";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ThankYouToken
Line:        9
Source: 
>     string public name     = "Thank You Token";
>     string public symbol   = "TYT";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint8  public decimals = 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ThankYouToken
Line:        10
Source: 
>     string public symbol   = "TYT";
>     uint8  public decimals = 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public totalSupply;

[0m
