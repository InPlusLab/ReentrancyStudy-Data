Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    NativeSwap
Line:        323
Source: 
> 
>     function deposit(uint256 _amount) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    NativeSwap
Line:        333
Source: 
> 
>     function withdraw(uint256 _amount) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_amount >= swapTokenBalanceOf[msg.sender], "balance < amount");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    NativeSwap
Line:        306
Source: 
> 
>     function init(
>     ^^^^^^^^^^^^^^
>         uint256 _period,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    NativeSwap
Line:        356
Source: 
> 
>     function calculateDeltaPenalty(uint256 amount)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    NativeSwap
Line:        325
Source: 
>         require(
>             swapToken.transferFrom(msg.sender, address(this), _amount),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "NativeSwap: transferFrom error"

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        275
Source: 
> 
> pragma solidity >=0.4.25 <0.7.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    NativeSwap
Line:        325
Source: 
>         require(
>             swapToken.transferFrom(msg.sender, address(this), _amount),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "NativeSwap: transferFrom error"

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NativeSwap
Line:        338
Source: 
>         );
>         swapToken.transfer(msg.sender, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NativeSwap
Line:        349
Source: 
>         swapTokenBalanceOf[msg.sender] = 0;
>         mainToken.mint(address(auction), deltaPenalty);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         auction.callIncomeDailyTokensTrigger(deltaPenalty);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NativeSwap
Line:        350
Source: 
>         mainToken.mint(address(auction), deltaPenalty);
>         auction.callIncomeDailyTokensTrigger(deltaPenalty);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         mainToken.mint(msg.sender, amountOut);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NativeSwap
Line:        351
Source: 
>         auction.callIncomeDailyTokensTrigger(deltaPenalty);
>         mainToken.mint(msg.sender, amountOut);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    NativeSwap
Line:        291
Source: 
> 
>     uint256 public start;
>     ^^^^^^^^^^^^^^^^^^^^
>     uint256 public period;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    NativeSwap
Line:        292
Source: 
>     uint256 public start;
>     uint256 public period;
>     ^^^^^^^^^^^^^^^^^^^^^
>     uint256 public stepTimestamp;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    NativeSwap
Line:        293
Source: 
>     uint256 public period;
>     uint256 public stepTimestamp;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     IERC20 public swapToken;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    NativeSwap
Line:        294
Source: 
>     uint256 public stepTimestamp;
>     IERC20 public swapToken;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     IToken public mainToken;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    NativeSwap
Line:        295
Source: 
>     IERC20 public swapToken;
>     IToken public mainToken;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     IAuction public auction;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    NativeSwap
Line:        296
Source: 
>     IToken public mainToken;
>     IAuction public auction;
>     ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    NativeSwap
Line:        314
Source: 
>         require(!init_, "init is active");
>         period = _period;
>         ^^^^^^^^^^^^^^^^
>         stepTimestamp = _stepTimestamp;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    NativeSwap
Line:        315
Source: 
>         period = _period;
>         stepTimestamp = _stepTimestamp;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         swapToken = IERC20(_swapToken);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    NativeSwap
Line:        316
Source: 
>         stepTimestamp = _stepTimestamp;
>         swapToken = IERC20(_swapToken);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         mainToken = IToken(_mainToken);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    NativeSwap
Line:        317
Source: 
>         swapToken = IERC20(_swapToken);
>         mainToken = IToken(_mainToken);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         auction = IAuction(_auction);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    NativeSwap
Line:        318
Source: 
>         mainToken = IToken(_mainToken);
>         auction = IAuction(_auction);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         start = now;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    NativeSwap
Line:        319
Source: 
>         auction = IAuction(_auction);
>         start = now;
>         ^^^^^^^^^^^
>         init_ = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    NativeSwap
Line:        320
Source: 
>         start = now;
>         init_ = true;
>         ^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    NativeSwap
Line:        338
Source: 
>         );
>         swapToken.transfer(msg.sender, _amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
