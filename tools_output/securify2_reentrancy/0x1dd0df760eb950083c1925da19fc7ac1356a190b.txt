Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BytesConvert
Line:        247
Source: 
>     // solhint-disable-next-line no-inline-assembly
>     assembly {
>     ^^^^^^^^^^
>       result := mload(add(_source, 0x20))

[0m
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    BytesConvert
Line:        258
Source: 
>     // solhint-disable-next-line no-inline-assembly
>     assembly {
>     ^^^^^^^^^^
>       result := mload(add(_source, 0x20))

[0m
[0;33mSeverity:    HIGH
Pattern:     Delegatecall or callcode to unrestricted address
Description: The address of a delegatecall or callcode must be
             approved by the contract owner.
Type:        Warning
Contract:    Core
Line:        298
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, ) = delegate.delegatecall(msg.data);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        108
Source: 
>    */
>   function renounceOwnership() public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit OwnershipRenounced(owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        117
Source: 
>    */
>   function transferOwnership(address _newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(_newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        108
Source: 
>    */
>   function renounceOwnership() public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit OwnershipRenounced(owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        117
Source: 
>    */
>   function transferOwnership(address _newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(_newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        170
Source: 
>    */
>   function coreRole(address _address) public view returns (bytes32) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return operators[_address].coreRole;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        178
Source: 
>    */
>   function proxyRole(address _proxy, address _address)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bytes32)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        189
Source: 
>    */
>   function rolePrivilege(bytes32 _role, bytes4 _privilege)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        198
Source: 
>    */
>   function roleHasPrivilege(bytes32 _role, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return (_role == ALL_PRIVILEGES) || roles[_role].privileges[_privilege];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        206
Source: 
>    */
>   function hasCorePrivilege(address _address, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 role = operators[_address].coreRole;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        216
Source: 
>    */
>   function hasProxyPrivilege(address _address, address _proxy, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     OperatorData storage data = operators[_address];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        108
Source: 
>    */
>   function renounceOwnership() public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit OwnershipRenounced(owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        117
Source: 
>    */
>   function transferOwnership(address _newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(_newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        170
Source: 
>    */
>   function coreRole(address _address) public view returns (bytes32) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return operators[_address].coreRole;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        178
Source: 
>    */
>   function proxyRole(address _proxy, address _address)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bytes32)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        189
Source: 
>    */
>   function rolePrivilege(bytes32 _role, bytes4 _privilege)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        198
Source: 
>    */
>   function roleHasPrivilege(bytes32 _role, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return (_role == ALL_PRIVILEGES) || roles[_role].privileges[_privilege];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        216
Source: 
>    */
>   function hasProxyPrivilege(address _address, address _proxy, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     OperatorData storage data = operators[_address];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableCore
Line:        397
Source: 
>    */
>   function defineRole(bytes32 _role, bytes4[] memory _privileges)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlySysOp returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableCore
Line:        414
Source: 
>    */
>   function assignOperators(bytes32 _role, address[] memory _operators)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlySysOp returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableCore
Line:        429
Source: 
>    */
>   function assignProxyOperators(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _proxy, bytes32 _role, address[] memory _operators)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableCore
Line:        444
Source: 
>    */
>   function revokeOperators(address[] memory _operators)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlySysOp returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableProxy
Line:        514
Source: 
>    */
>   function owner() public view returns (address) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return OperableCore(core).owner();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        108
Source: 
>    */
>   function renounceOwnership() public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit OwnershipRenounced(owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        117
Source: 
>    */
>   function transferOwnership(address _newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(_newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        170
Source: 
>    */
>   function coreRole(address _address) public view returns (bytes32) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return operators[_address].coreRole;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        178
Source: 
>    */
>   function proxyRole(address _proxy, address _address)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bytes32)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        189
Source: 
>    */
>   function rolePrivilege(bytes32 _role, bytes4 _privilege)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        198
Source: 
>    */
>   function roleHasPrivilege(bytes32 _role, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return (_role == ALL_PRIVILEGES) || roles[_role].privileges[_privilege];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        206
Source: 
>    */
>   function hasCorePrivilege(address _address, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 role = operators[_address].coreRole;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        216
Source: 
>    */
>   function hasProxyPrivilege(address _address, address _proxy, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     OperatorData storage data = operators[_address];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        108
Source: 
>    */
>   function renounceOwnership() public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit OwnershipRenounced(owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        117
Source: 
>    */
>   function transferOwnership(address _newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(_newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        170
Source: 
>    */
>   function coreRole(address _address) public view returns (bytes32) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return operators[_address].coreRole;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        178
Source: 
>    */
>   function proxyRole(address _proxy, address _address)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bytes32)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        189
Source: 
>    */
>   function rolePrivilege(bytes32 _role, bytes4 _privilege)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableStorage
Line:        198
Source: 
>    */
>   function roleHasPrivilege(bytes32 _role, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return (_role == ALL_PRIVILEGES) || roles[_role].privileges[_privilege];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableCore
Line:        397
Source: 
>    */
>   function defineRole(bytes32 _role, bytes4[] memory _privileges)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlySysOp returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableCore
Line:        414
Source: 
>    */
>   function assignOperators(bytes32 _role, address[] memory _operators)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlySysOp returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableCore
Line:        429
Source: 
>    */
>   function assignProxyOperators(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _proxy, bytes32 _role, address[] memory _operators)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableCore
Line:        444
Source: 
>    */
>   function revokeOperators(address[] memory _operators)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlySysOp returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1051
Source: 
> 
>   function name() public view returns (string memory) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return name_;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1055
Source: 
> 
>   function oracles() public view returns
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     (IUserRegistry, IRatesProvider, bytes32, uint256[] memory)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1061
Source: 
> 
>   function auditSelector(
>   ^^^^^^^^^^^^^^^^^^^^^^^
>     address _scope,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1075
Source: 
> 
>   function auditShared(
>   ^^^^^^^^^^^^^^^^^^^^^
>     address _scope,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1094
Source: 
> 
>   function auditUser(
>   ^^^^^^^^^^^^^^^^^^^
>     address _scope,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1114
Source: 
> 
>   function auditAddress(
>   ^^^^^^^^^^^^^^^^^^^^^^
>     address _scope,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1135
Source: 
>   /**************  ERC20  **************/
>   function tokenName() public view returns (string memory) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return tokens_[msg.sender].name;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1139
Source: 
> 
>   function tokenSymbol() public view returns (string memory) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return tokens_[msg.sender].symbol;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1143
Source: 
> 
>   function tokenDecimals() public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return tokens_[msg.sender].decimals;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1147
Source: 
> 
>   function tokenTotalSupply() public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return tokens_[msg.sender].totalSupply;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1151
Source: 
> 
>   function tokenBalanceOf(address _owner) public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return tokens_[msg.sender].balances[_owner];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1155
Source: 
> 
>   function tokenAllowance(address _owner, address _spender)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (uint256)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1161
Source: 
> 
>   function transfer(address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (bool status)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1167
Source: 
> 
>   function transferFrom(address, address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (bool status)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1173
Source: 
> 
>   function approve(address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (bool status)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1179
Source: 
> 
>   function increaseApproval(address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (bool status)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1185
Source: 
> 
>   function decreaseApproval(address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (bool status)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1191
Source: 
> 
>   function canTransfer(address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (uint256)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1198
Source: 
>   /***********  TOKEN DATA   ***********/
>   function token(address _token) public view returns (
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool mintingFinished,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1219
Source: 
> 
>   function tokenProofs(address _token, address _holder, uint256 _proofId)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (uint256, uint64, uint64)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1231
Source: 
>   /***********  TOKEN ADMIN  ***********/
>   function issue(address _token, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1237
Source: 
> 
>   function redeem(address _token, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1243
Source: 
> 
>   function mint(address _token, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1249
Source: 
> 
>   function finishMinting(address _token)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1255
Source: 
> 
>   function mintAtOnce(address _token, address[] memory, uint256[] memory)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1261
Source: 
> 
>   function seize(address _token, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1267
Source: 
> 
>   function freezeManyAddresses(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _token,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1275
Source: 
> 
>   function createProof(address _token, address)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1281
Source: 
> 
>   function defineLock(address _token, uint256, uint256, address[] memory)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1287
Source: 
> 
>   function defineRules(address _token, IRule[] memory)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1293
Source: 
> 
>   function defineClaimables(address _token, IClaimable[] memory)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1300
Source: 
>   /************  CORE ADMIN  ************/
>   function defineToken(
>   ^^^^^^^^^^^^^^^^^^^^^
>     address _token,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1318
Source: 
> 
>   function removeToken(address _token)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyCoreOp returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1328
Source: 
> 
>   function defineOracles(
>   ^^^^^^^^^^^^^^^^^^^^^^^
>     IUserRegistry _userRegistry,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenCore
Line:        1348
Source: 
> 
>   function defineAuditSelector(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _scope,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    OperableProxy
Line:        514
Source: 
>    */
>   function owner() public view returns (address) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return OperableCore(core).owner();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1421
Source: 
> 
>   function name() public view returns (string memory) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return TokenCore(core).tokenName();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1425
Source: 
> 
>   function symbol() public view returns (string memory) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return TokenCore(core).tokenSymbol();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1429
Source: 
> 
>   function decimals() public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return TokenCore(core).tokenDecimals();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1433
Source: 
> 
>   function totalSupply() public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return TokenCore(core).tokenTotalSupply();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1437
Source: 
> 
>   function balanceOf(address _owner) public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return TokenCore(core).tokenBalanceOf(_owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1441
Source: 
> 
>   function allowance(address _owner, address _spender)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (uint256)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1447
Source: 
> 
>   function transfer(address _to, uint256 _value) public returns (bool status)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1452
Source: 
> 
>   function transferFrom(address _from, address _to, uint256 _value)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (bool status)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1458
Source: 
> 
>   function approve(address _spender, uint256 _value)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (bool status)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1464
Source: 
> 
>   function increaseApproval(address _spender, uint256 _addedValue)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (bool status)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1470
Source: 
> 
>   function decreaseApproval(address _spender, uint256 _subtractedValue)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (bool status)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1476
Source: 
> 
>   function canTransfer(address _from, address _to, uint256 _value)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (uint256)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1482
Source: 
> 
>   function emitTransfer(address _from, address _to, uint256 _value)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyCore returns (bool)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    TokenProxy
Line:        1489
Source: 
> 
>   function emitApproval(address _owner, address _spender, uint256 _value)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyCore returns (bool)

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Core
Line:        298
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, ) = delegate.delegatecall(msg.data);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Core
Line:        315
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, result) = delegate.delegatecall(msg.data);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Core
Line:        298
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, ) = delegate.delegatecall(msg.data);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Core
Line:        315
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, result) = delegate.delegatecall(msg.data);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Core
Line:        298
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, ) = delegate.delegatecall(msg.data);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Core
Line:        315
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, result) = delegate.delegatecall(msg.data);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        117
Source: 
>    */
>   function transferOwnership(address _newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _transferOwnership(_newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    TokenCore
Line:        1249
Source: 
> 
>   function finishMinting(address _token)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        170
Source: 
>    */
>   function coreRole(address _address) public view returns (bytes32) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return operators[_address].coreRole;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        178
Source: 
>    */
>   function proxyRole(address _proxy, address _address)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bytes32)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        189
Source: 
>    */
>   function rolePrivilege(bytes32 _role, bytes4 _privilege)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        198
Source: 
>    */
>   function roleHasPrivilege(bytes32 _role, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return (_role == ALL_PRIVILEGES) || roles[_role].privileges[_privilege];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        206
Source: 
>    */
>   function hasCorePrivilege(address _address, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 role = operators[_address].coreRole;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        216
Source: 
>    */
>   function hasProxyPrivilege(address _address, address _proxy, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     OperatorData storage data = operators[_address];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        170
Source: 
>    */
>   function coreRole(address _address) public view returns (bytes32) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return operators[_address].coreRole;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        178
Source: 
>    */
>   function proxyRole(address _proxy, address _address)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bytes32)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        189
Source: 
>    */
>   function rolePrivilege(bytes32 _role, bytes4 _privilege)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        198
Source: 
>    */
>   function roleHasPrivilege(bytes32 _role, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return (_role == ALL_PRIVILEGES) || roles[_role].privileges[_privilege];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        206
Source: 
>    */
>   function hasCorePrivilege(address _address, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 role = operators[_address].coreRole;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        216
Source: 
>    */
>   function hasProxyPrivilege(address _address, address _proxy, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     OperatorData storage data = operators[_address];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableCore
Line:        414
Source: 
>    */
>   function assignOperators(bytes32 _role, address[] memory _operators)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlySysOp returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableCore
Line:        429
Source: 
>    */
>   function assignProxyOperators(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _proxy, bytes32 _role, address[] memory _operators)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        170
Source: 
>    */
>   function coreRole(address _address) public view returns (bytes32) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return operators[_address].coreRole;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        178
Source: 
>    */
>   function proxyRole(address _proxy, address _address)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bytes32)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        189
Source: 
>    */
>   function rolePrivilege(bytes32 _role, bytes4 _privilege)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        198
Source: 
>    */
>   function roleHasPrivilege(bytes32 _role, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return (_role == ALL_PRIVILEGES) || roles[_role].privileges[_privilege];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        206
Source: 
>    */
>   function hasCorePrivilege(address _address, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 role = operators[_address].coreRole;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        216
Source: 
>    */
>   function hasProxyPrivilege(address _address, address _proxy, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     OperatorData storage data = operators[_address];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        170
Source: 
>    */
>   function coreRole(address _address) public view returns (bytes32) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return operators[_address].coreRole;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        178
Source: 
>    */
>   function proxyRole(address _proxy, address _address)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bytes32)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        189
Source: 
>    */
>   function rolePrivilege(bytes32 _role, bytes4 _privilege)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        198
Source: 
>    */
>   function roleHasPrivilege(bytes32 _role, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return (_role == ALL_PRIVILEGES) || roles[_role].privileges[_privilege];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        206
Source: 
>    */
>   function hasCorePrivilege(address _address, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes32 role = operators[_address].coreRole;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableStorage
Line:        216
Source: 
>    */
>   function hasProxyPrivilege(address _address, address _proxy, bytes4 _privilege) public view returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     OperatorData storage data = operators[_address];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableCore
Line:        414
Source: 
>    */
>   function assignOperators(bytes32 _role, address[] memory _operators)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlySysOp returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OperableCore
Line:        429
Source: 
>    */
>   function assignProxyOperators(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _proxy, bytes32 _role, address[] memory _operators)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1061
Source: 
> 
>   function auditSelector(
>   ^^^^^^^^^^^^^^^^^^^^^^^
>     address _scope,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1075
Source: 
> 
>   function auditShared(
>   ^^^^^^^^^^^^^^^^^^^^^
>     address _scope,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1094
Source: 
> 
>   function auditUser(
>   ^^^^^^^^^^^^^^^^^^^
>     address _scope,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1114
Source: 
> 
>   function auditAddress(
>   ^^^^^^^^^^^^^^^^^^^^^^
>     address _scope,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1151
Source: 
> 
>   function tokenBalanceOf(address _owner) public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return tokens_[msg.sender].balances[_owner];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1155
Source: 
> 
>   function tokenAllowance(address _owner, address _spender)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (uint256)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1161
Source: 
> 
>   function transfer(address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (bool status)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1167
Source: 
> 
>   function transferFrom(address, address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (bool status)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1173
Source: 
> 
>   function approve(address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (bool status)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1179
Source: 
> 
>   function increaseApproval(address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (bool status)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1185
Source: 
> 
>   function decreaseApproval(address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (bool status)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1191
Source: 
> 
>   function canTransfer(address, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxy returns (uint256)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1198
Source: 
>   /***********  TOKEN DATA   ***********/
>   function token(address _token) public view returns (
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bool mintingFinished,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1231
Source: 
>   /***********  TOKEN ADMIN  ***********/
>   function issue(address _token, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1237
Source: 
> 
>   function redeem(address _token, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1243
Source: 
> 
>   function mint(address _token, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1255
Source: 
> 
>   function mintAtOnce(address _token, address[] memory, uint256[] memory)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1261
Source: 
> 
>   function seize(address _token, address, uint256)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1267
Source: 
> 
>   function freezeManyAddresses(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _token,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1275
Source: 
> 
>   function createProof(address _token, address)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1281
Source: 
> 
>   function defineLock(address _token, uint256, uint256, address[] memory)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1287
Source: 
> 
>   function defineRules(address _token, IRule[] memory)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1293
Source: 
> 
>   function defineClaimables(address _token, IClaimable[] memory)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyProxyOp(_token) returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1300
Source: 
>   /************  CORE ADMIN  ************/
>   function defineToken(
>   ^^^^^^^^^^^^^^^^^^^^^
>     address _token,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1318
Source: 
> 
>   function removeToken(address _token)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyCoreOp returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1328
Source: 
> 
>   function defineOracles(
>   ^^^^^^^^^^^^^^^^^^^^^^^
>     IUserRegistry _userRegistry,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenCore
Line:        1348
Source: 
> 
>   function defineAuditSelector(
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address _scope,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenProxy
Line:        1437
Source: 
> 
>   function balanceOf(address _owner) public view returns (uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return TokenCore(core).tokenBalanceOf(_owner);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenProxy
Line:        1441
Source: 
> 
>   function allowance(address _owner, address _spender)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public view returns (uint256)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenProxy
Line:        1447
Source: 
> 
>   function transfer(address _to, uint256 _value) public returns (bool status)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenProxy
Line:        1452
Source: 
> 
>   function transferFrom(address _from, address _to, uint256 _value)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (bool status)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenProxy
Line:        1458
Source: 
> 
>   function approve(address _spender, uint256 _value)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (bool status)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenProxy
Line:        1464
Source: 
> 
>   function increaseApproval(address _spender, uint256 _addedValue)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (bool status)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenProxy
Line:        1470
Source: 
> 
>   function decreaseApproval(address _spender, uint256 _subtractedValue)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (bool status)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenProxy
Line:        1476
Source: 
> 
>   function canTransfer(address _from, address _to, uint256 _value)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public returns (uint256)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenProxy
Line:        1482
Source: 
> 
>   function emitTransfer(address _from, address _to, uint256 _value)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyCore returns (bool)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    TokenProxy
Line:        1489
Source: 
> 
>   function emitApproval(address _owner, address _spender, uint256 _value)
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     public onlyCore returns (bool)

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    TokenCore
Line:        1336
Source: 
>       // Updating the core currency is not yet supported
>       require(_userRegistry.currency() == currency, "TC01");
>               ^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    TokenCore
Line:        1338
Source: 
>     } else {
>       currency = _userRegistry.currency();
>                  ^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    TokenCore
Line:        1336
Source: 
>       // Updating the core currency is not yet supported
>       require(_userRegistry.currency() == currency, "TC01");
>               ^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    TokenCore
Line:        1338
Source: 
>     } else {
>       currency = _userRegistry.currency();
>                  ^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        50
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        68
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        134
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        226
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        266
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        342
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        462
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        491
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        530
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        585
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        601
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        616
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        707
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        744
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        876
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1023
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1368
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        1405
Source: 
> 
> pragma solidity >=0.5.0 <0.6.0;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    OperableCore
Line:        387
Source: 
>    */
>   modifier onlyProxyOp(address _proxy) {
>                        ^^^^^^^^^^^^^^
>     require(hasProxyPrivilege(msg.sender, _proxy, msg.sig), "OC03");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenCore
Line:        1336
Source: 
>       // Updating the core currency is not yet supported
>       require(_userRegistry.currency() == currency, "TC01");
>               ^^^^^^^^^^^^^^^^^^^^^^^^
>     } else {

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    TokenCore
Line:        1338
Source: 
>     } else {
>       currency = _userRegistry.currency();
>                  ^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    OperableProxy
Line:        515
Source: 
>   function owner() public view returns (address) {
>     return OperableCore(core).owner();
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1422
Source: 
>   function name() public view returns (string memory) {
>     return TokenCore(core).tokenName();
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1426
Source: 
>   function symbol() public view returns (string memory) {
>     return TokenCore(core).tokenSymbol();
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1430
Source: 
>   function decimals() public view returns (uint256) {
>     return TokenCore(core).tokenDecimals();
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1434
Source: 
>   function totalSupply() public view returns (uint256) {
>     return TokenCore(core).tokenTotalSupply();
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1438
Source: 
>   function balanceOf(address _owner) public view returns (uint256) {
>     return TokenCore(core).tokenBalanceOf(_owner);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1444
Source: 
>   {
>     return TokenCore(core).tokenAllowance(_owner, _spender);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1449
Source: 
>   {
>     return TokenCore(core).transfer(msg.sender, _to, _value);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1455
Source: 
>   {
>     return TokenCore(core).transferFrom(msg.sender, _from, _to, _value);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1461
Source: 
>   {
>     return TokenCore(core).approve(msg.sender, _spender, _value);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1467
Source: 
>   {
>     return TokenCore(core).increaseApproval(msg.sender, _spender, _addedValue);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1473
Source: 
>   {
>     return TokenCore(core).decreaseApproval(msg.sender, _spender, _subtractedValue);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    TokenProxy
Line:        1479
Source: 
>   {
>     return TokenCore(core).canTransfer(_from, _to, _value);
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    TokenStorage
Line:        827
Source: 
> 
>   IUserRegistry internal userRegistry;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   IRatesProvider internal ratesProvider;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    TokenStorage
Line:        828
Source: 
>   IUserRegistry internal userRegistry;
>   IRatesProvider internal ratesProvider;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    TokenStorage
Line:        830
Source: 
> 
>   bytes32 internal currency;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256[] internal userKeys;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    TokenStorage
Line:        827
Source: 
> 
>   IUserRegistry internal userRegistry;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   IRatesProvider internal ratesProvider;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    TokenStorage
Line:        828
Source: 
>   IUserRegistry internal userRegistry;
>   IRatesProvider internal ratesProvider;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    TokenStorage
Line:        830
Source: 
> 
>   bytes32 internal currency;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256[] internal userKeys;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    TokenStorage
Line:        833
Source: 
> 
>   string internal name_;
>   ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Core
Line:        298
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, ) = delegate.delegatecall(msg.data);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Core
Line:        328
Source: 
>     require(_proxy != address(0), "CO05");
>     proxyDelegates[_proxy] = delegate;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return true;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenCore
Line:        1310
Source: 
>     TokenData storage tokenData = tokens_[_token];
>     tokenData.name = _name;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     tokenData.symbol = _symbol;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenCore
Line:        1311
Source: 
>     tokenData.name = _name;
>     tokenData.symbol = _symbol;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     tokenData.decimals = _decimals;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenCore
Line:        1312
Source: 
>     tokenData.symbol = _symbol;
>     tokenData.decimals = _decimals;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenCore
Line:        1322
Source: 
>     removeProxy(_token);
>     delete tokens_[_token];
>     ^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenCore
Line:        1340
Source: 
>     }
>     userRegistry = _userRegistry;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     ratesProvider = _ratesProvider;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenCore
Line:        1341
Source: 
>     userRegistry = _userRegistry;
>     ratesProvider = _ratesProvider;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     userKeys = _userKeys;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenCore
Line:        1342
Source: 
>     ratesProvider = _ratesProvider;
>     userKeys = _userKeys;
>     ^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenCore
Line:        1338
Source: 
>     } else {
>       currency = _userRegistry.currency();
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    TokenCore
Line:        1358
Source: 
>     for (uint256 i=0; i < _selectorAddresses.length; i++) {
>       auditStorage.selector[_selectorAddresses[i]] = _selectorValues[i];
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Core
Line:        298
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, ) = delegate.delegatecall(msg.data);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Core
Line:        315
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, result) = delegate.delegatecall(msg.data);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Core
Line:        298
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, ) = delegate.delegatecall(msg.data);
>                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Core
Line:        315
Source: 
>     // solhint-disable-next-line avoid-low-level-calls
>     (status, result) = delegate.delegatecall(msg.data);
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(status, "CO03");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    TokenCore
Line:        1321
Source: 
>   {
>     removeProxy(_token);
>     ^^^^^^^^^^^^^^^^^^^
>     delete tokens_[_token];

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Storage
Line:        62
Source: 
> 
>   mapping(address => address) public proxyDelegates;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address[] public delegates;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Storage
Line:        63
Source: 
>   mapping(address => address) public proxyDelegates;
>   address[] public delegates;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Storage
Line:        62
Source: 
> 
>   mapping(address => address) public proxyDelegates;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address[] public delegates;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Storage
Line:        63
Source: 
>   mapping(address => address) public proxyDelegates;
>   address[] public delegates;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Storage
Line:        62
Source: 
> 
>   mapping(address => address) public proxyDelegates;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address[] public delegates;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Storage
Line:        63
Source: 
>   mapping(address => address) public proxyDelegates;
>   address[] public delegates;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Storage
Line:        62
Source: 
> 
>   mapping(address => address) public proxyDelegates;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address[] public delegates;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Storage
Line:        63
Source: 
>   mapping(address => address) public proxyDelegates;
>   address[] public delegates;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Proxy
Line:        474
Source: 
> 
>   address public core;
>   ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Storage
Line:        62
Source: 
> 
>   mapping(address => address) public proxyDelegates;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   address[] public delegates;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Storage
Line:        63
Source: 
>   mapping(address => address) public proxyDelegates;
>   address[] public delegates;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenStorage
Line:        824
Source: 
>   }
>   mapping (address => TokenData) internal tokens_;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   mapping (address => mapping (uint256 => AuditStorage)) internal audits;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenStorage
Line:        825
Source: 
>   mapping (address => TokenData) internal tokens_;
>   mapping (address => mapping (uint256 => AuditStorage)) internal audits;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenStorage
Line:        827
Source: 
> 
>   IUserRegistry internal userRegistry;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   IRatesProvider internal ratesProvider;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenStorage
Line:        828
Source: 
>   IUserRegistry internal userRegistry;
>   IRatesProvider internal ratesProvider;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenStorage
Line:        830
Source: 
> 
>   bytes32 internal currency;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256[] internal userKeys;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenStorage
Line:        831
Source: 
>   bytes32 internal currency;
>   uint256[] internal userKeys;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    TokenStorage
Line:        833
Source: 
> 
>   string internal name_;
>   ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
