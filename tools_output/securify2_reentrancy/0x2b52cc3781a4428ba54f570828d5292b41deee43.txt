pragma directive defines a prior version to 0.5.8. Changing pragma version to 0.5.8....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Disbursement
Line:        102
Source: 
>     /// @param _token Token address
>     function setup(Token _token)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Disbursement
Line:        114
Source: 
>     /// @param _value Number of tokens to transfer
>     function withdraw(address _to, uint256 _value)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Disbursement
Line:        128
Source: 
>     /// @dev Transfers all tokens to multisig wallet
>     function walletWithdraw()
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Disbursement
Line:        114
Source: 
>     /// @param _value Number of tokens to transfer
>     function withdraw(address _to, uint256 _value)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Disbursement
Line:        124
Source: 
>         withdrawnTokens += _value;
>         token.transfer(_to, _value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Disbursement
Line:        133
Source: 
>     {
>         uint balance = token.balanceOf(address(this));
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         withdrawnTokens += balance;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Disbursement
Line:        135
Source: 
>         withdrawnTokens += balance;
>         token.transfer(wallet, balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Disbursement
Line:        145
Source: 
>     {
>         uint maxTokens = (token.balanceOf(address(this)) + withdrawnTokens) * (now - startDate) / disbursementPeriod;
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (withdrawnTokens >= maxTokens || startDate > now){

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Disbursement
Line:        133
Source: 
>     {
>         uint balance = token.balanceOf(address(this));
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         withdrawnTokens += balance;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Disbursement
Line:        124
Source: 
>         withdrawnTokens += _value;
>         token.transfer(_to, _value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Disbursement
Line:        135
Source: 
>         withdrawnTokens += balance;
>         token.transfer(wallet, balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Disbursement
Line:        47
Source: 
>     uint public startDate;
>     uint public withdrawnTokens;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     Token public token;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Disbursement
Line:        48
Source: 
>     uint public withdrawnTokens;
>     Token public token;
>     ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Disbursement
Line:        124
Source: 
>         withdrawnTokens += _value;
>         token.transfer(_to, _value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Disbursement
Line:        135
Source: 
>         withdrawnTokens += balance;
>         token.transfer(wallet, balance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
