Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    AutonomousSway
Line:        38
Source: 
>     /// @notice sway. the way you vote
>     bool public immutable sway = false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    AutonomousSwayFactory
Line:        173
Source: 
>                 */
>                 function createCrowdProposal(address[] memory targets,
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                                              uint[] memory values,

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AutonomousSway
Line:        111
Source: 
>                     // Create governance proposal and save proposal id
>                     govProposalId = IGovernorAlpha(governor).propose(targets, values, signatures, calldatas, description);
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                     emit CrowdProposalProposed(address(this), author, govProposalId);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AutonomousSway
Line:        125
Source: 
>                     // Transfer staked UNI tokens from the crowd proposal contract back to the author
>                     IUni(uni).transfer(author, IUni(uni).balanceOf(address(this)));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    AutonomousSway
Line:        125
Source: 
>                     // Transfer staked UNI tokens from the crowd proposal contract back to the author
>                     IUni(uni).transfer(author, IUni(uni).balanceOf(address(this)));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    AutonomousSway
Line:        111
Source: 
>                     // Create governance proposal and save proposal id
>                     govProposalId = IGovernorAlpha(governor).propose(targets, values, signatures, calldatas, description);
>                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                     emit CrowdProposalProposed(address(this), author, govProposalId);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AutonomousSway
Line:        102
Source: 
>                     // Delegate votes to the crowd proposal
>                     IUni(uni_).delegate(address(this));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AutonomousSway
Line:        125
Source: 
>                     // Transfer staked UNI tokens from the crowd proposal contract back to the author
>                     IUni(uni).transfer(author, IUni(uni).balanceOf(address(this)));
>                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AutonomousSway
Line:        125
Source: 
>                     // Transfer staked UNI tokens from the crowd proposal contract back to the author
>                     IUni(uni).transfer(author, IUni(uni).balanceOf(address(this)));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AutonomousSway
Line:        133
Source: 
>                     require(govProposalId > 0, 'CrowdProposal::vote: gov proposal has not been created yet');
>                     IGovernorAlpha(governor).castVote(govProposalId, sway);
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    AutonomousSwayFactory
Line:        183
Source: 
>                                                  // Stake UNI and force proposal to delegate votes to itself
>                                                  IUni(uni).transferFrom(msg.sender, address(proposal), uniStakeAmount);
>                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                                              }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    AutonomousSway
Line:        56
Source: 
>     /// @notice Governance proposal id
>     uint public govProposalId;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     /// @notice Terminate flag

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    AutonomousSway
Line:        111
Source: 
>                     // Create governance proposal and save proposal id
>                     govProposalId = IGovernorAlpha(governor).propose(targets, values, signatures, calldatas, description);
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                     emit CrowdProposalProposed(address(this), author, govProposalId);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    AutonomousSway
Line:        125
Source: 
>                     // Transfer staked UNI tokens from the crowd proposal contract back to the author
>                     IUni(uni).transfer(author, IUni(uni).balanceOf(address(this)));
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    AutonomousSwayFactory
Line:        183
Source: 
>                                                  // Stake UNI and force proposal to delegate votes to itself
>                                                  IUni(uni).transferFrom(msg.sender, address(proposal), uniStakeAmount);
>                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                                              }

[0m
