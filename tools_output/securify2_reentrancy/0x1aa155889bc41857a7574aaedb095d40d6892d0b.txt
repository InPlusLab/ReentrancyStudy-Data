Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.11. Changing pragma version to 0.6.11....
[0;35mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Conflict
Contract:    EtherBillion
Line:        193
Source: 
> 
>         owner.transfer(msg.value / 10);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    EtherBillion
Line:        172
Source: 
> 
>     function deposit(uint8 _plan, address _upline) external payable nonReentrant {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(plans[_plan].life_days > 0, "Plan not found");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    EtherBillion
Line:        219
Source: 
> 
>     function userInfo(address _addr) view external returns(uint256 for_withdraw,
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 total_invested, uint256 total_withdrawn, uint256 total_match_bonus, uint256[3] memory structure) {

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherBillion
Line:        193
Source: 
> 
>         owner.transfer(msg.value / 10);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    EtherBillion
Line:        213
Source: 
> 
>         msg.sender.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherBillion
Line:        55
Source: 
>     uint256 public withdrawn;
>     uint256 public direct_bonus;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public match_bonus;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherBillion
Line:        56
Source: 
>     uint256 public direct_bonus;
>     uint256 public match_bonus;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherBillion
Line:        58
Source: 
> 
>     uint8[] public ref_bonuses; // 1 => 1%
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    EtherBillion
Line:        108
Source: 
> 
>             uint40 time_end = dep.time + plan.life_days * 86400;
>             ^^^^^^^^^^^^^^^
>             uint40 from = player.last_payout > dep.time ? player.last_payout : dep.time;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherBillion
Line:        213
Source: 
> 
>         msg.sender.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    EtherBillion
Line:        193
Source: 
> 
>         owner.transfer(msg.value / 10);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherBillion
Line:        193
Source: 
> 
>         owner.transfer(msg.value / 10);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    EtherBillion
Line:        213
Source: 
> 
>         msg.sender.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    EtherBillion
Line:        226
Source: 
>         for(uint8 i = 0; i < ref_bonuses.length; i++) {
>             structure[i] = player.structure[i];
>             ^^^^^^^^^
>         }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    EtherBillion
Line:        53
Source: 
> 
>     uint256 public invested;
>     ^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public withdrawn;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    EtherBillion
Line:        54
Source: 
>     uint256 public invested;
>     uint256 public withdrawn;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public direct_bonus;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    EtherBillion
Line:        55
Source: 
>     uint256 public withdrawn;
>     uint256 public direct_bonus;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public match_bonus;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    EtherBillion
Line:        56
Source: 
>     uint256 public direct_bonus;
>     uint256 public match_bonus;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    EtherBillion
Line:        124
Source: 
>         if(payout > 0) {
>             players[_addr].last_payout = uint40(block.timestamp);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             players[_addr].dividends += payout;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    EtherBillion
Line:        125
Source: 
>             players[_addr].last_payout = uint40(block.timestamp);
>             players[_addr].dividends += payout;
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        20
Source: 
>         require(_status != _ENTERED, "ReentrancyGuard: reentrant call");
>         _status = _ENTERED;
>         ^^^^^^^^^^^^^^^^^^
>         _;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        10
Source: 
>     uint256 internal constant _NOT_ENTERED = 1;
>     uint256 internal constant _ENTERED = 2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        12
Source: 
> 
>     uint256 internal _status;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    EtherBillion
Line:        110
Source: 
>             uint40 from = player.last_payout > dep.time ? player.last_payout : dep.time;
>             uint40 to = block.timestamp > time_end ? time_end : uint40(block.timestamp);
>                         ^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    EtherBillion
Line:        110
Source: 
>             uint40 from = player.last_payout > dep.time ? player.last_payout : dep.time;
>             uint40 to = block.timestamp > time_end ? time_end : uint40(block.timestamp);
>                                                                        ^^^^^^^^^^^^^^^
> 

[0m
