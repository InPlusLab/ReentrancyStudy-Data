Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BKP_Sales
Line:        82
Source: 
>     using SafeMath for uint256;
>     address public tokenAddress = 0xe1B3ecdf26aF3C631715b6a49A74470e306D455b;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 unLockingDate = 1609531200; // 1 january 2021, 8pm UTC

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BKP_Sales
Line:        83
Source: 
>     address public tokenAddress = 0xe1B3ecdf26aF3C631715b6a49A74470e306D455b;
>     uint256 unLockingDate = 1609531200; // 1 january 2021, 8pm UTC
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BKP_Sales
Line:        91
Source: 
>     
>     uint256 tokenRatePerEth = 252;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 maxTokensForSale = 240000 * 10 ** 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BKP_Sales
Line:        92
Source: 
>     uint256 tokenRatePerEth = 252;
>     uint256 maxTokensForSale = 240000 * 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 soldTokens = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BKP_Sales
Line:        94
Source: 
>     uint256 soldTokens = 0;
>     uint256 maxInvestment = 25 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 minInvestment = 0.5 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BKP_Sales
Line:        95
Source: 
>     uint256 maxInvestment = 25 ether;
>     uint256 minInvestment = 0.5 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 startDate = 1608750000; // 23 december 2020, 7pm UTC

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BKP_Sales
Line:        96
Source: 
>     uint256 minInvestment = 0.5 ether;
>     uint256 startDate = 1608750000; // 23 december 2020, 7pm UTC
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 endDate = 1609441200; // 31 december 2020, 7pm UTC

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    BKP_Sales
Line:        97
Source: 
>     uint256 startDate = 1608750000; // 23 december 2020, 7pm UTC
>     uint256 endDate = 1609441200; // 31 december 2020, 7pm UTC
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        64
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Owned
Line:        64
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    BKP_Sales
Line:        133
Source: 
>         // send received funds to the owner
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    BKP_Sales
Line:        79
Source: 
> 
> contract BKP_Sales is Owned {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BKP_Sales
Line:        83
Source: 
>     address public tokenAddress = 0xe1B3ecdf26aF3C631715b6a49A74470e306D455b;
>     uint256 unLockingDate = 1609531200; // 1 january 2021, 8pm UTC
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BKP_Sales
Line:        91
Source: 
>     
>     uint256 tokenRatePerEth = 252;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 maxTokensForSale = 240000 * 10 ** 18;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BKP_Sales
Line:        92
Source: 
>     uint256 tokenRatePerEth = 252;
>     uint256 maxTokensForSale = 240000 * 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 soldTokens = 0;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BKP_Sales
Line:        93
Source: 
>     uint256 maxTokensForSale = 240000 * 10 ** 18;
>     uint256 soldTokens = 0;
>     ^^^^^^^^^^^^^^^^^^^^^^
>     uint256 maxInvestment = 25 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BKP_Sales
Line:        94
Source: 
>     uint256 soldTokens = 0;
>     uint256 maxInvestment = 25 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 minInvestment = 0.5 ether;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BKP_Sales
Line:        95
Source: 
>     uint256 maxInvestment = 25 ether;
>     uint256 minInvestment = 0.5 ether;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 startDate = 1608750000; // 23 december 2020, 7pm UTC

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BKP_Sales
Line:        96
Source: 
>     uint256 minInvestment = 0.5 ether;
>     uint256 startDate = 1608750000; // 23 december 2020, 7pm UTC
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 endDate = 1609441200; // 31 december 2020, 7pm UTC

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    BKP_Sales
Line:        97
Source: 
>     uint256 startDate = 1608750000; // 23 december 2020, 7pm UTC
>     uint256 endDate = 1609441200; // 31 december 2020, 7pm UTC
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    BKP_Sales
Line:        133
Source: 
>         // send received funds to the owner
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    BKP_Sales
Line:        133
Source: 
>         // send received funds to the owner
>         owner.transfer(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BKP_Sales
Line:        139
Source: 
>         // the private sale purchasers will claim their tokens using this function
>         require(IToken(tokenAddress).transfer(msg.sender, usersTokens[msg.sender].unClaimed), "Insufficient balance of sale contract!");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    BKP_Sales
Line:        148
Source: 
>         uint256 tokens = IToken(tokenAddress).balanceOf(address(this));
>         require(IToken(tokenAddress).transfer(owner, tokens), "No tokens in contract");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    BKP_Sales
Line:        147
Source: 
>     function getUnSoldTokens() external onlyOwner{
>         uint256 tokens = IToken(tokenAddress).balanceOf(address(this));
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(IToken(tokenAddress).transfer(owner, tokens), "No tokens in contract");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    BKP_Sales
Line:        117
Source: 
>         
>         usersTokens[msg.sender].invested = usersTokens[msg.sender].invested.add(msg.value);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    BKP_Sales
Line:        105
Source: 
>     modifier saleOpen{
>         require(block.timestamp >= startDate && block.timestamp <= endDate, "sale is closed");
>                 ^^^^^^^^^^^^^^^
>         _;

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    BKP_Sales
Line:        105
Source: 
>     modifier saleOpen{
>         require(block.timestamp >= startDate && block.timestamp <= endDate, "sale is closed");
>                                                 ^^^^^^^^^^^^^^^
>         _;

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    BKP_Sales
Line:        100
Source: 
>     modifier unLockingOpen{
>         require(block.timestamp >= unLockingDate, "unlocking will start by 1 january 8pm UTC");
>                 ^^^^^^^^^^^^^^^
>         _;

[0m
