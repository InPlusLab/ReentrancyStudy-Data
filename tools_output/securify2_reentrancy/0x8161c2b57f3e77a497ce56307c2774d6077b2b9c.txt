Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    rfiSantaSale
Line:        82
Source: 
>   uint256 amount;
>   uint256 ratepereth = 25;
>   ^^^^^^^^^^^^^^^^^^^^^^^
>  

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    rfiSantaSale
Line:        159
Source: 
>     uint256 withdrawAmount;
>     if (ethWithdrawals == 0) {
>         ^^^^^^^^^^^^^^^^^^^
>       if (collectedETH <= 25 ether) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    rfiSantaSale
Line:        191
Source: 
>   function startSale() public {
>     require(msg.sender == owner && startDate==0);
>                                    ^^^^^^^^^^^^
>     startDate=now;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    rfiSantaSale
Line:        134
Source: 
> 
>   function numberOfContributions(address from) public view returns(uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _numberOfContributions[address(from)]; 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    rfiSantaSale
Line:        138
Source: 
> 
>   function contributions(address from) public view returns(uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _contributions[address(from)];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    rfiSantaSale
Line:        142
Source: 
> 
>   function averagePurchaseRate(address from) public view returns(uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _averagePurchaseRate[address(from)];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    rfiSantaSale
Line:        146
Source: 
> 
>   function buyBackETH(address payable from) public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(now.sub(startDate) > 3 days && !softCapMet);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    rfiSantaSale
Line:        155
Source: 
> 
>   function withdrawETH() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.sender == owner && address(this).balance > 0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    rfiSantaSale
Line:        180
Source: 
> 
>   function endPresale() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.sender == owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    rfiSantaSale
Line:        185
Source: 
> 
>   function burnrfiSanta() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.sender == owner && rfiSantaToken.balanceOf(address(this)) > 0 && now.sub(startDate) > 1 days);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    rfiSantaSale
Line:        190
Source: 
>   
>   function startSale() public {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.sender == owner && startDate==0);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    rfiSantaSale
Line:        195
Source: 
>   
>   function availablerfiSanta() public view returns(uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return rfiSantaToken.balanceOf(address(this));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    rfiSantaSale
Line:        134
Source: 
> 
>   function numberOfContributions(address from) public view returns(uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _numberOfContributions[address(from)]; 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    rfiSantaSale
Line:        138
Source: 
> 
>   function contributions(address from) public view returns(uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _contributions[address(from)];

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    rfiSantaSale
Line:        142
Source: 
> 
>   function averagePurchaseRate(address from) public view returns(uint256) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return _averagePurchaseRate[address(from)];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    rfiSantaSale
Line:        86
Source: 
>     require(startDate > 0 && now.sub(startDate) <= 2 days);
>     require(rfiSantaToken.balanceOf(address(this)) > 0);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.value >= 0.1 ether && msg.value <= 3 ether);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    rfiSantaSale
Line:        98
Source: 
>     
>     require(amount <= rfiSantaToken.balanceOf(address(this)));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     totalSold = totalSold.add(amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    rfiSantaSale
Line:        103
Source: 
>     _numberOfContributions[msg.sender] = _numberOfContributions[msg.sender].add(1);
>     rfiSantaToken.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (!softCapMet && collectedETH >= 1 ether) {

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    rfiSantaSale
Line:        111
Source: 
>     require(startDate > 0 && now.sub(startDate) <= 2 days);
>     require(rfiSantaToken.balanceOf(address(this)) > 0);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.value >= 0.1 ether && msg.value <= 3 ether);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    rfiSantaSale
Line:        123
Source: 
>         
>     require(amount <= rfiSantaToken.balanceOf(address(this)));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     totalSold = totalSold.add(amount);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    rfiSantaSale
Line:        128
Source: 
>     _numberOfContributions[msg.sender] = _numberOfContributions[msg.sender].add(1);
>     rfiSantaToken.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (!softCapMet && collectedETH >= 1 ether) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    rfiSantaSale
Line:        152
Source: 
>     _contributions[from] = 0;
>     from.transfer(contribution.div(exchangeRate));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    rfiSantaSale
Line:        177
Source: 
>     collectedETH = collectedETH.sub(withdrawAmount);
>     owner.transfer(withdrawAmount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    rfiSantaSale
Line:        59
Source: 
> 
> contract rfiSantaSale {
> ^^^^^^^^^^^^^^^^^^^^^^^
>   using SafeMath for uint256;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    rfiSantaSale
Line:        81
Source: 
> 
>   uint256 amount;
>   ^^^^^^^^^^^^^^
>   uint256 ratepereth = 25;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    rfiSantaSale
Line:        82
Source: 
>   uint256 amount;
>   uint256 ratepereth = 25;
>   ^^^^^^^^^^^^^^^^^^^^^^^
>  

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    rfiSantaSale
Line:        152
Source: 
>     _contributions[from] = 0;
>     from.transfer(contribution.div(exchangeRate));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    rfiSantaSale
Line:        177
Source: 
>     collectedETH = collectedETH.sub(withdrawAmount);
>     owner.transfer(withdrawAmount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    rfiSantaSale
Line:        152
Source: 
>     _contributions[from] = 0;
>     from.transfer(contribution.div(exchangeRate));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    rfiSantaSale
Line:        177
Source: 
>     collectedETH = collectedETH.sub(withdrawAmount);
>     owner.transfer(withdrawAmount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    rfiSantaSale
Line:        152
Source: 
>     _contributions[from] = 0;
>     from.transfer(contribution.div(exchangeRate));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    rfiSantaSale
Line:        177
Source: 
>     collectedETH = collectedETH.sub(withdrawAmount);
>     owner.transfer(withdrawAmount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    rfiSantaSale
Line:        86
Source: 
>     require(startDate > 0 && now.sub(startDate) <= 2 days);
>     require(rfiSantaToken.balanceOf(address(this)) > 0);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.value >= 0.1 ether && msg.value <= 3 ether);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    rfiSantaSale
Line:        98
Source: 
>     
>     require(amount <= rfiSantaToken.balanceOf(address(this)));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     totalSold = totalSold.add(amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    rfiSantaSale
Line:        111
Source: 
>     require(startDate > 0 && now.sub(startDate) <= 2 days);
>     require(rfiSantaToken.balanceOf(address(this)) > 0);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     require(msg.value >= 0.1 ether && msg.value <= 3 ether);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    rfiSantaSale
Line:        123
Source: 
>         
>     require(amount <= rfiSantaToken.balanceOf(address(this)));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     totalSold = totalSold.add(amount);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    rfiSantaSale
Line:        186
Source: 
>   function burnrfiSanta() public {
>     require(msg.sender == owner && rfiSantaToken.balanceOf(address(this)) > 0 && now.sub(startDate) > 1 days);
>                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     rfiSantaToken.transfer(address(0), rfiSantaToken.balanceOf(address(this)));

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    rfiSantaSale
Line:        103
Source: 
>     _numberOfContributions[msg.sender] = _numberOfContributions[msg.sender].add(1);
>     rfiSantaToken.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (!softCapMet && collectedETH >= 1 ether) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    rfiSantaSale
Line:        128
Source: 
>     _numberOfContributions[msg.sender] = _numberOfContributions[msg.sender].add(1);
>     rfiSantaToken.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (!softCapMet && collectedETH >= 1 ether) {

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    rfiSantaSale
Line:        187
Source: 
>     require(msg.sender == owner && rfiSantaToken.balanceOf(address(this)) > 0 && now.sub(startDate) > 1 days);
>     rfiSantaToken.transfer(address(0), rfiSantaToken.balanceOf(address(this)));
>                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    rfiSantaSale
Line:        187
Source: 
>     require(msg.sender == owner && rfiSantaToken.balanceOf(address(this)) > 0 && now.sub(startDate) > 1 days);
>     rfiSantaToken.transfer(address(0), rfiSantaToken.balanceOf(address(this)));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    rfiSantaSale
Line:        196
Source: 
>   function availablerfiSanta() public view returns(uint256) {
>     return rfiSantaToken.balanceOf(address(this));
>            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    rfiSantaSale
Line:        62
Source: 
> 
>   uint256 public totalSold;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>   ERC20 public rfiSantaToken;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    rfiSantaSale
Line:        65
Source: 
>   address payable public owner;
>   uint256 public collectedETH;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   uint256 public startDate;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    rfiSantaSale
Line:        66
Source: 
>   uint256 public collectedETH;
>   uint256 public startDate;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
>   bool public softCapMet;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    rfiSantaSale
Line:        67
Source: 
>   uint256 public startDate;
>   bool public softCapMet;
>   ^^^^^^^^^^^^^^^^^^^^^^
>   bool private presaleClosed = false;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    rfiSantaSale
Line:        70
Source: 
>   uint256 private ethWithdrawals = 0;
>   uint256 private lastWithdrawal;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    rfiSantaSale
Line:        81
Source: 
> 
>   uint256 amount;
>   ^^^^^^^^^^^^^^
>   uint256 ratepereth = 25;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    rfiSantaSale
Line:        152
Source: 
>     _contributions[from] = 0;
>     from.transfer(contribution.div(exchangeRate));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        91
Source: 
>     if (now.sub(startDate) <= 1 days) {
>        amount = msg.value.mul(25);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^
>        _averagePurchaseRate[msg.sender] = _averagePurchaseRate[msg.sender].add(ratepereth.mul(10));

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        99
Source: 
>     require(amount <= rfiSantaToken.balanceOf(address(this)));
>     totalSold = totalSold.add(amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     collectedETH = collectedETH.add(msg.value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        100
Source: 
>     totalSold = totalSold.add(amount);
>     collectedETH = collectedETH.add(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _contributions[msg.sender] = _contributions[msg.sender].add(amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        105
Source: 
>     if (!softCapMet && collectedETH >= 1 ether) {
>       softCapMet = true;
>       ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        94
Source: 
>     } else if(now.sub(startDate) > 1 days && now.sub(startDate) <= 2 days) {
>        amount = msg.value.mul(25);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^
>        _averagePurchaseRate[msg.sender] = _averagePurchaseRate[msg.sender].add(ratepereth.mul(10));

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        116
Source: 
>     if (now.sub(startDate) <= 1 days) {
>        amount = msg.value.mul(25);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^
>        _averagePurchaseRate[msg.sender] = _averagePurchaseRate[msg.sender].add(ratepereth.mul(10));

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        124
Source: 
>     require(amount <= rfiSantaToken.balanceOf(address(this)));
>     totalSold = totalSold.add(amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     collectedETH = collectedETH.add(msg.value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        125
Source: 
>     totalSold = totalSold.add(amount);
>     collectedETH = collectedETH.add(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     _contributions[msg.sender] = _contributions[msg.sender].add(amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        130
Source: 
>     if (!softCapMet && collectedETH >= 1 ether) {
>       softCapMet = true;
>       ^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        119
Source: 
>     } else if(now.sub(startDate) > 1 days && now.sub(startDate) <= 2 days) {
>        amount = msg.value.mul(25);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^
>        _averagePurchaseRate[msg.sender] = _averagePurchaseRate[msg.sender].add(ratepereth.mul(10));

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    rfiSantaSale
Line:        151
Source: 
>     uint256 contribution = _contributions[from];
>     _contributions[from] = 0;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     from.transfer(contribution.div(exchangeRate));

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    rfiSantaSale
Line:        103
Source: 
>     _numberOfContributions[msg.sender] = _numberOfContributions[msg.sender].add(1);
>     rfiSantaToken.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (!softCapMet && collectedETH >= 1 ether) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    rfiSantaSale
Line:        128
Source: 
>     _numberOfContributions[msg.sender] = _numberOfContributions[msg.sender].add(1);
>     rfiSantaToken.transfer(msg.sender, amount);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (!softCapMet && collectedETH >= 1 ether) {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    rfiSantaSale
Line:        187
Source: 
>     require(msg.sender == owner && rfiSantaToken.balanceOf(address(this)) > 0 && now.sub(startDate) > 1 days);
>     rfiSantaToken.transfer(address(0), rfiSantaToken.balanceOf(address(this)));
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>   }

[0m
