Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    DssSpell
Line:        188
Source: 
>         address _action = action;
>         assembly { _tag := extcodehash(_action) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         tag = _tag;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DssSpell
Line:        136
Source: 
>     ChainlogAbstract constant CHANGELOG = ChainlogAbstract(0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F);
>     address MCD_PAUSE = CHANGELOG.getAddress("MCD_PAUSE");
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    DssSpell
Line:        138
Source: 
> 
>     DSPauseAbstract public pause = DSPauseAbstract(MCD_PAUSE);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address         public action;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    DssSpell
Line:        205
Source: 
>         require(now <= expiration, "This contract has expired");
>         require(eta == 0, "This spell has already been scheduled");
>                 ^^^^^^^^
>         eta = now + DSPauseAbstract(pause).delay();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        203
Source: 
> 
>     function schedule() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(now <= expiration, "This contract has expired");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    DssSpell
Line:        210
Source: 
> 
>     function cast() public limited {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!done, "spell-already-cast");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        206
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        207
Source: 
>         eta = now + DSPauseAbstract(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    DssSpell
Line:        213
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    VatAbstract
Line:        64
Source: 
>     function vice() external view returns (uint256);
>     function Line() external view returns (uint256);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function live() external view returns (uint256);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    SpellAction
Line:        129
Source: 
>         // Proving the Pause Proxy has access to the MCD core system at the execution time
>         address MCD_VAT = CHANGELOG.getAddress("MCD_VAT");
>         ^^^^^^^^^^^^^^^
>         require(VatAbstract(MCD_VAT).wards(address(this)) == 1, "no-access");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        136
Source: 
>     ChainlogAbstract constant CHANGELOG = ChainlogAbstract(0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F);
>     address MCD_PAUSE = CHANGELOG.getAddress("MCD_PAUSE");
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        147
Source: 
>     // Office hours enabled if true
>     bool   constant public officeHours = false;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        152
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/community/a7c8ddb3f8d8ea71cb123b9aa45d9d7eaed8d6f0/governance/votes/Executive%20vote%20-%20November%2023%2C%202020.md -q -O - 2>/dev/null)"
>     string constant public description =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         "2020-11-23 MakerDAO Executive Spell | Hash: 0x3567e2282249022428233fe24a48a25ebc34468f2183869109f2bd590f48ef28";

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        173
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/mips/7ab8f2bbde3f0ec6f8ddb150596454fe2a869454/MIP4/MIP4c2-Subproposals/MIP4c2-SP6.md -q -O - 2>/dev/null)"
>     string constant public MIP4c2SP6 = "0xab503375dd94caebafadf3a7eed7809cca49441877cc22056645d6cc94ba4105";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        177
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/mips/7ab8f2bbde3f0ec6f8ddb150596454fe2a869454/MIP13/MIP13c3-Subproposals/MIP13c3-SP6.md -q -O - 2>/dev/null)"
>     string constant public MIP13c3SP6 = "0xe76bd18dfb2eb9aa893e81d4bfa6703e71f17954e4c4800937c672aa6d8b84f6";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        181
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/mips/7ab8f2bbde3f0ec6f8ddb150596454fe2a869454/MIP28/MIP28c7-Subproposals/MIP28c7-SP1.md -q -O - 2>/dev/null)"
>     string constant public MIP28c7SP1 = "0x685efd19c76135ad5f3313b28c556e5c918ad5e121b11ddd9a60c793ad78cc94";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        186
Source: 
>         action = address(new SpellAction());
>         bytes32 _tag;
>         ^^^^^^^^^^^^
>         address _action = action;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    DssSpell
Line:        187
Source: 
>         bytes32 _tag;
>         address _action = action;
>         ^^^^^^^^^^^^^^^
>         assembly { _tag := extcodehash(_action) }

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        6
Source: 
> // hevm: flattened sources of src/DssSpell.sol
> pragma solidity =0.5.12 >=0.5.12;
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        109
Source: 
>     //     https://changelog.makerdao.com/releases/mainnet/1.1.5/contracts.json
>     ChainlogAbstract constant CHANGELOG = ChainlogAbstract(0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        112
Source: 
>     // Decimals & precision
>     uint256 constant THOUSAND = 10 ** 3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant MILLION  = 10 ** 6;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        113
Source: 
>     uint256 constant THOUSAND = 10 ** 3;
>     uint256 constant MILLION  = 10 ** 6;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant WAD      = 10 ** 18;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        114
Source: 
>     uint256 constant MILLION  = 10 ** 6;
>     uint256 constant WAD      = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant RAY      = 10 ** 27;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        115
Source: 
>     uint256 constant WAD      = 10 ** 18;
>     uint256 constant RAY      = 10 ** 27;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant RAD      = 10 ** 45;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    SpellAction
Line:        116
Source: 
>     uint256 constant RAY      = 10 ** 27;
>     uint256 constant RAD      = 10 ** 45;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DssSpell
Line:        135
Source: 
> contract DssSpell {
>     ChainlogAbstract constant CHANGELOG = ChainlogAbstract(0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address MCD_PAUSE = CHANGELOG.getAddress("MCD_PAUSE");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DssSpell
Line:        136
Source: 
>     ChainlogAbstract constant CHANGELOG = ChainlogAbstract(0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F);
>     address MCD_PAUSE = CHANGELOG.getAddress("MCD_PAUSE");
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DssSpell
Line:        195
Source: 
>         if (officeHours) {
>             uint day = (now / 1 days + 3) % 7;
>             ^^^^^^^^
>             require(day < 5, "Can only be cast on a weekday");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    DssSpell
Line:        197
Source: 
>             require(day < 5, "Can only be cast on a weekday");
>             uint hour = now / 1 hours % 24;
>             ^^^^^^^^^
>             require(hour >= 14 && hour < 21, "Outside office hours");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    SpellAction
Line:        130
Source: 
>         address MCD_VAT = CHANGELOG.getAddress("MCD_VAT");
>         require(VatAbstract(MCD_VAT).wards(address(this)) == 1, "no-access");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    DssSpell
Line:        206
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    SpellAction
Line:        129
Source: 
>         // Proving the Pause Proxy has access to the MCD core system at the execution time
>         address MCD_VAT = CHANGELOG.getAddress("MCD_VAT");
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(VatAbstract(MCD_VAT).wards(address(this)) == 1, "no-access");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        207
Source: 
>         eta = now + DSPauseAbstract(pause).delay();
>         pause.plot(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        213
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    DssSpell
Line:        136
Source: 
>     ChainlogAbstract constant CHANGELOG = ChainlogAbstract(0xdA0Ab1e0017DEbCd72Be8599041a2aa3bA7e740F);
>     address MCD_PAUSE = CHANGELOG.getAddress("MCD_PAUSE");
>                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    DssSpell
Line:        189
Source: 
>         assembly { _tag := extcodehash(_action) }
>         tag = _tag;
>               ^^^^
>         expiration = now + 4 days + 2 hours;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell
Line:        141
Source: 
>     bytes32         public tag;
>     uint256         public eta;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     bytes           public sig;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    DssSpell
Line:        144
Source: 
>     uint256         public expiration;
>     bool            public done;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell
Line:        206
Source: 
>         require(eta == 0, "This spell has already been scheduled");
>         eta = now + DSPauseAbstract(pause).delay();
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         pause.plot(action, tag, sig, eta);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    DssSpell
Line:        212
Source: 
>         require(!done, "spell-already-cast");
>         done = true;
>         ^^^^^^^^^^^
>         pause.exec(action, tag, sig, eta);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    DssSpell
Line:        213
Source: 
>         done = true;
>         pause.exec(action, tag, sig, eta);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        112
Source: 
>     // Decimals & precision
>     uint256 constant THOUSAND = 10 ** 3;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant MILLION  = 10 ** 6;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        113
Source: 
>     uint256 constant THOUSAND = 10 ** 3;
>     uint256 constant MILLION  = 10 ** 6;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant WAD      = 10 ** 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        114
Source: 
>     uint256 constant MILLION  = 10 ** 6;
>     uint256 constant WAD      = 10 ** 18;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant RAY      = 10 ** 27;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        115
Source: 
>     uint256 constant WAD      = 10 ** 18;
>     uint256 constant RAY      = 10 ** 27;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 constant RAD      = 10 ** 45;

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    SpellAction
Line:        116
Source: 
>     uint256 constant RAY      = 10 ** 27;
>     uint256 constant RAD      = 10 ** 45;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DssSpell
Line:        152
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/community/a7c8ddb3f8d8ea71cb123b9aa45d9d7eaed8d6f0/governance/votes/Executive%20vote%20-%20November%2023%2C%202020.md -q -O - 2>/dev/null)"
>     string constant public description =
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         "2020-11-23 MakerDAO Executive Spell | Hash: 0x3567e2282249022428233fe24a48a25ebc34468f2183869109f2bd590f48ef28";

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DssSpell
Line:        157
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/mips/7ab8f2bbde3f0ec6f8ddb150596454fe2a869454/MIP24/mip24.md -q -O - 2>/dev/null)"
>     string constant public MIP24 = "0x6d39f78a3343fb030da792962abdd12ca1b0c9384b92f496e8a070e97cf3c1c6";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DssSpell
Line:        161
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/mips/7ab8f2bbde3f0ec6f8ddb150596454fe2a869454/MIP25/mip25.md -q -O - 2>/dev/null)"
>     string constant public MIP25 = "0xd2550d2b15464b6bf3e49bc424a85e6411abf27e72247c4325f6d9b2ba4d9100";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DssSpell
Line:        165
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/mips/7ab8f2bbde3f0ec6f8ddb150596454fe2a869454/MIP27/mip27.md -q -O - 2>/dev/null)"
>     string constant public MIP27 = "0x2848c1ef785a2182d9ccd7171e90eba847330f3da2106500f0f3e097a3bf5553";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DssSpell
Line:        169
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/mips/7ab8f2bbde3f0ec6f8ddb150596454fe2a869454/MIP28/mip28.md -q -O - 2>/dev/null)"
>     string constant public MIP28 = "0x63aa04048b723e496190b080d9d25e1ba90c7d8eeb9060404ca50d665506e915";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DssSpell
Line:        173
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/mips/7ab8f2bbde3f0ec6f8ddb150596454fe2a869454/MIP4/MIP4c2-Subproposals/MIP4c2-SP6.md -q -O - 2>/dev/null)"
>     string constant public MIP4c2SP6 = "0xab503375dd94caebafadf3a7eed7809cca49441877cc22056645d6cc94ba4105";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DssSpell
Line:        177
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/mips/7ab8f2bbde3f0ec6f8ddb150596454fe2a869454/MIP13/MIP13c3-Subproposals/MIP13c3-SP6.md -q -O - 2>/dev/null)"
>     string constant public MIP13c3SP6 = "0xe76bd18dfb2eb9aa893e81d4bfa6703e71f17954e4c4800937c672aa6d8b84f6";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    DssSpell
Line:        181
Source: 
>     // Hash: seth keccak -- "$(wget https://raw.githubusercontent.com/makerdao/mips/7ab8f2bbde3f0ec6f8ddb150596454fe2a869454/MIP28/MIP28c7-Subproposals/MIP28c7-SP1.md -q -O - 2>/dev/null)"
>     string constant public MIP28c7SP1 = "0x685efd19c76135ad5f3313b28c556e5c918ad5e121b11ddd9a60c793ad78cc94";
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
