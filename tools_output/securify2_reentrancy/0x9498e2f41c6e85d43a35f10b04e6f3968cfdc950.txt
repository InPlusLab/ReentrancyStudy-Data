Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Unixo
Line:        226
Source: 
>     }
> }


[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Unixo
Line:        49
Source: 
>         levels.push(0.1 ether);
>         levels.push(0.3 ether);
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         levels.push(0.9 ether);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Unixo
Line:        204
Source: 
> 
>         for(uint16 i = 0; i < 1023; i++) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             if(users[refs[i]].referrals.length < 3) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    Unixo
Line:        135
Source: 
>                 uint256 max_value = max_profit - users[_user].profit;
>                 uint256 profit = _value;
>                         ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Unixo
Line:        49
Source: 
>         levels.push(0.1 ether);
>         levels.push(0.3 ether);
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         levels.push(0.9 ether);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Unixo
Line:        51
Source: 
>         levels.push(0.9 ether);
>         levels.push(1.8 ether);
>                  ^^^^^^^^^^^^^^
>         levels.push(3.6 ether);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Unixo
Line:        54
Source: 
>         levels.push(7.2 ether);
>         levels.push(14.4 ether);
>                        ^^^^^^^^^
>         levels.push(28.8 ether);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Unixo
Line:        149
Source: 
> 
>             if(_value > 0) {
>   ^^^^^^^^^^^^^^^^^^
>                 uint256 b = users[_user].balance + _value;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Unixo
Line:        150
Source: 
>             if(_value > 0) {
>                 uint256 b = users[_user].balance + _value;
>                                       ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Unixo
Line:        154
Source: 
>                     users[_user].balance = 0;
>                     users[_user].profit = 0;
> ^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Unixo
Line:        49
Source: 
>         levels.push(0.1 ether);
>         levels.push(0.3 ether);
>  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         levels.push(0.9 ether);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Unixo
Line:        50
Source: 
>         levels.push(0.3 ether);
>         levels.push(0.9 ether);
>                 ^^^^^^^^^^^^^^^
>         levels.push(1.8 ether);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Unixo
Line:        51
Source: 
>         levels.push(0.9 ether);
>         levels.push(1.8 ether);
>                  ^^^^^^^^^^^^^^
>         levels.push(3.6 ether);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Unixo
Line:        52
Source: 
>         levels.push(1.8 ether);
>         levels.push(3.6 ether);
>                ^^^^^^^^^^^^^^^^
>         levels.push(7.2 ether);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Unixo
Line:        53
Source: 
>         levels.push(3.6 ether);
>         levels.push(7.2 ether);
>             ^^^^^^^^^^^^^^^^^^^
>         levels.push(14.4 ether);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Unixo
Line:        54
Source: 
>         levels.push(7.2 ether);
>         levels.push(14.4 ether);
>                        ^^^^^^^^^
>         levels.push(28.8 ether);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Unixo
Line:        95
Source: 
>     function _upLevel(address _user, uint8 _level) private {
>         users[_user].level = _level;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Warning
Contract:    Unixo
Line:        96
Source: 
>         users[_user].level = _level;
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);
>                          ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    Unixo
Line:        135
Source: 
>                 uint256 max_value = max_profit - users[_user].profit;
>                 uint256 profit = _value;
>                         ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Unixo
Line:        135
Source: 
>                 uint256 max_value = max_profit - users[_user].profit;
>                 uint256 profit = _value;
>                         ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Unixo
Line:        95
Source: 
>     function _upLevel(address _user, uint8 _level) private {
>         users[_user].level = _level;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Unixo
Line:        96
Source: 
>         users[_user].level = _level;
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);
>                          ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Unixo
Line:        96
Source: 
>         users[_user].level = _level;
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);
>                                                                          
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Unixo
Line:        135
Source: 
>                 uint256 max_value = max_profit - users[_user].profit;
>                 uint256 profit = _value;
>                         ^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Unixo
Line:        95
Source: 
>     function _upLevel(address _user, uint8 _level) private {
>         users[_user].level = _level;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Unixo
Line:        96
Source: 
>         users[_user].level = _level;
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);
>                          ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Unixo
Line:        96
Source: 
>         users[_user].level = _level;
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);
>                                                                          
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Unixo
Line:        127
Source: 
> 
>         uint256 cap = levels[users[_user].level] * 3;
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Unixo
Line:        135
Source: 
>                 uint256 max_value = max_profit - users[_user].profit;
>                 uint256 profit = _value;
>                         ^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Unixo
Line:        95
Source: 
>     function _upLevel(address _user, uint8 _level) private {
>         users[_user].level = _level;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Unixo
Line:        96
Source: 
>         users[_user].level = _level;
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);
>                          ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Unixo
Line:        96
Source: 
>         users[_user].level = _level;
>         users[_user].expires = uint40(block.timestamp + LEVEL_TIME_LIFE);
>                                                                          
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        101
Source: 
> 
>     function _register(address _user, address _upline, uint256 _value) private {
>                                                        ^^^^^^^^^
>         require(_value == levels[users[_user].level], "Bad value");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        101
Source: 
> 
>     function _register(address _user, address _upline, uint256 _value) private {
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(_value == levels[users[_user].level], "Bad value");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        101
Source: 
> 
>     function _register(address _user, address _upline, uint256 _value) private {
>                                                                            ^^^^^
>         require(_value == levels[users[_user].level], "Bad value");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        103
Source: 
>         require(_value == levels[users[_user].level], "Bad value");
>         require(_user != root, "Is root");
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        105
Source: 
> 
>         if(users[_user].id == 0) {
>                ^^^^^^^^^^^^^^^^^^^
>             require(users[_upline].id > 0, "Bad upline");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        106
Source: 
>         if(users[_user].id == 0) {
>             require(users[_upline].id > 0, "Bad upline");
>                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        162
Source: 
> 
>                         _send(_user, p);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                         

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        171
Source: 
>                 else users[_user].balance += _value;
>             }
>           ^^^
>         }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        174
Source: 
>         else {
>             if(users[_user].profit < cap) {
>                ^^^^^^^^^^^^^^^^^^^^^^^
>                 users[_user].profit += _value;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        180
Source: 
>                 emit Profit(_user, tx.origin, _value);
>             }
>      ^^^^^^^^
>             else _uplinePay(users[_user].upline, _value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        110
Source: 
>         }
>         else require(users[_user].expires < block.timestamp - 3 days, "Not expires");
>                                                                      ^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        112
Source: 
>         
>         _upLevel(_user, users[_user].level);
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _uplinePay(users[_user].upline, _value);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        192
Source: 
> 
>         selfdestruct(root);
>                      ^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Unixo
Line:        196
Source: 
>     function findFreeReferrer(address _user) external view returns(address) {
>         if(users[_user].referrals.length < 3) return _user;
>                                         ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    Unixo
Line:        138
Source: 
>                 if(max_value < profit) {
>                     profit = max_value;
>          ^^^^^^^^^^^^^^^
>                 }

[0m
[0;35mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Conflict
Contract:    Unixo
Line:        129
Source: 
> 
>         if(users[_user].level < levels.length - 1) {
>                                        ^^^^^^^^^^^^^
>             uint256 next_price = levels[users[_user].level + 1];

[0m
