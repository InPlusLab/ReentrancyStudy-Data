Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    RushChaining
Line:        78
Source: 
> 
>     function regByID(uint256 _referrerID) public payable {
>                   ^^^^^^^^^^^^^^^
>         require(msg.value == 0.1 ether, "Require 0.1 ether");

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    RushChaining
Line:        79
Source: 
>     function regByID(uint256 _referrerID) public payable {
>         require(msg.value == 0.1 ether, "Require 0.1 ether");
>                          ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    RushChaining
Line:        106
Source: 
>         queue[currQueue] = queueStruct;
>         addrByID[currQueue] = msg.sender;
>                        ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        137
Source: 
> 
>             address(uint160(addrByID[currQueue - 10])).transfer(
>                                                       ^^^^^^^^^^
>                 (msg.value * 10) / 100

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        143
Source: 
>                 (msg.value * 10) /
>                 100;
>                   ^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        154
Source: 
>             address(uint160(addrByID[currQueue - 8])).transfer(
>                 (msg.value * 10) / 100
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        162
Source: 
>             address(uint160(addrByID[currQueue - 7])).transfer(
>                 (msg.value * 10) / 100
>              ^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        170
Source: 
>             address(uint160(addrByID[currQueue - 6])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        178
Source: 
>             address(uint160(addrByID[currQueue - 5])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        186
Source: 
>             address(uint160(addrByID[currQueue - 4])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        194
Source: 
>             address(uint160(addrByID[currQueue - 3])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        202
Source: 
>             address(uint160(ownerWallet)).transfer(
>                 (msg.value * (100 - FEE - REWARD)) / 100
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        210
Source: 
>     }
> }
>                                                  

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        210
Source: 
>     }
> }
>                                                                                                                                                                                                                                                                                                                                                     

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Violation
Contract:    RushChaining
Line:        210
Source: 
>     }
> }


[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    RushChaining
Line:        78
Source: 
> 
>     function regByID(uint256 _referrerID) public payable {
>                   ^^^^^^^^^^^^^^^
>         require(msg.value == 0.1 ether, "Require 0.1 ether");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    RushChaining
Line:        79
Source: 
>     function regByID(uint256 _referrerID) public payable {
>         require(msg.value == 0.1 ether, "Require 0.1 ether");
>                          ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    RushChaining
Line:        82
Source: 
>         require(_referrerID <= currQueue, "Incorrect referrer Id");
>         if (_referrerID <= 0) _referrerID = 1;
>                                     ^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RushChaining
Line:        62
Source: 
> 
>         queueStruct = QueueStruct({id: currQueue, addr: msg.sender});
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RushChaining
Line:        65
Source: 
>         userStruct = UserStruct({
>             isExist: true,
>       ^^^^^^^^^^^^^^^^^^^^
>             id: currQueue,

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RushChaining
Line:        74
Source: 
>         users[ownerWallet] = userStruct;
>         queue[currQueue] = queueStruct;
>                   ^^^^^^^^^^^^^^^^^^^^^
>         addrByID[currQueue] = ownerWallet;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RushChaining
Line:        78
Source: 
> 
>     function regByID(uint256 _referrerID) public payable {
>                   ^^^^^^^^^^^^^^^
>         require(msg.value == 0.1 ether, "Require 0.1 ether");

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RushChaining
Line:        79
Source: 
>     function regByID(uint256 _referrerID) public payable {
>         require(msg.value == 0.1 ether, "Require 0.1 ether");
>                          ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RushChaining
Line:        79
Source: 
>     function regByID(uint256 _referrerID) public payable {
>         require(msg.value == 0.1 ether, "Require 0.1 ether");
>                                                     ^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    RushChaining
Line:        81
Source: 
> 
>         require(_referrerID <= currQueue, "Incorrect referrer Id");
>                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (_referrerID <= 0) _referrerID = 1;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        137
Source: 
> 
>             address(uint160(addrByID[currQueue - 10])).transfer(
>                                                       ^^^^^^^^^^
>                 (msg.value * 10) / 100

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        143
Source: 
>                 (msg.value * 10) /
>                 100;
>                   ^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        210
Source: 
>     }
> }


[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        137
Source: 
> 
>             address(uint160(addrByID[currQueue - 10])).transfer(
>                                                       ^^^^^^^^^^
>                 (msg.value * 10) / 100

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        143
Source: 
>                 (msg.value * 10) /
>                 100;
>                   ^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        154
Source: 
>             address(uint160(addrByID[currQueue - 8])).transfer(
>                 (msg.value * 10) / 100
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        162
Source: 
>             address(uint160(addrByID[currQueue - 7])).transfer(
>                 (msg.value * 10) / 100
>              ^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        170
Source: 
>             address(uint160(addrByID[currQueue - 6])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        178
Source: 
>             address(uint160(addrByID[currQueue - 5])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        186
Source: 
>             address(uint160(addrByID[currQueue - 4])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        194
Source: 
>             address(uint160(addrByID[currQueue - 3])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        202
Source: 
>             address(uint160(ownerWallet)).transfer(
>                 (msg.value * (100 - FEE - REWARD)) / 100
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        210
Source: 
>     }
> }
>                                                  

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        210
Source: 
>     }
> }
>                                                                                                                                                                                                                                                                                                                                                     

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    RushChaining
Line:        210
Source: 
>     }
> }


[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        137
Source: 
> 
>             address(uint160(addrByID[currQueue - 10])).transfer(
>                                                       ^^^^^^^^^^
>                 (msg.value * 10) / 100

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        143
Source: 
>                 (msg.value * 10) /
>                 100;
>                   ^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        154
Source: 
>             address(uint160(addrByID[currQueue - 8])).transfer(
>                 (msg.value * 10) / 100
>           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        162
Source: 
>             address(uint160(addrByID[currQueue - 7])).transfer(
>                 (msg.value * 10) / 100
>              ^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        170
Source: 
>             address(uint160(addrByID[currQueue - 6])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        178
Source: 
>             address(uint160(addrByID[currQueue - 5])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        186
Source: 
>             address(uint160(addrByID[currQueue - 4])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        194
Source: 
>             address(uint160(addrByID[currQueue - 3])).transfer(
>                 (msg.value * 10) / 100
>                 ^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        202
Source: 
>             address(uint160(ownerWallet)).transfer(
>                 (msg.value * (100 - FEE - REWARD)) / 100
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        210
Source: 
>     }
> }
>                                                  

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        210
Source: 
>     }
> }
>                                                                                                                                                                                                                                                                                                                                                     

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    RushChaining
Line:        210
Source: 
>     }
> }


[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    RushChaining
Line:        137
Source: 
> 
>             address(uint160(addrByID[currQueue - 10])).transfer(
>                                                       ^^^^^^^^^^
>                 (msg.value * 10) / 100

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Violation
Contract:    RushChaining
Line:        143
Source: 
>                 (msg.value * 10) /
>                 100;
>                   ^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    RushChaining
Line:        117
Source: 
> 
>         // Pay for referral
>              ^^^^^^^^^^^
>         address(uint160(addrByID[_referrerID])).transfer(

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    RushChaining
Line:        132
Source: 
>             );
>             users[addrByID[currQueue - 11]].profit =
>                                                     
>                 users[addrByID[currQueue - 11]].profit +

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    RushChaining
Line:        133
Source: 
>             users[addrByID[currQueue - 11]].profit =
>                 users[addrByID[currQueue - 11]].profit +
>                                        ^^^^^^^^^^^^^^^^^
>                 (msg.value * 10) /

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    RushChaining
Line:        134
Source: 
>                 users[addrByID[currQueue - 11]].profit +
>                 (msg.value * 10) /
>                           ^^^^^^^^
>                 100;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    RushChaining
Line:        140
Source: 
>             );
>             users[addrByID[currQueue - 10]].profit =
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 users[addrByID[currQueue - 10]].profit +

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    RushChaining
Line:        147
Source: 
>                 (msg.value * 10) / 100
>             );
> ^^^^^^^^^^^^^^
>             users[addrByID[currQueue - 9]].profit =

[0m
