Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.17. Changing pragma version to 0.5.17....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        217
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        243
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        252
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        217
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        243
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        252
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    NFTSwapper_Council
Line:        422
Source: 
>     
>     function setActive(bool isActive) public onlyOwner{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         active = isActive;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    NFTSwapper_Council
Line:        426
Source: 
> 
>     function hasPurchased(address buyer) public view returns (bool){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return purchased[buyer];

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    NFTSwapper_Council
Line:        430
Source: 
> 
>     function purchase() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(!purchased[msg.sender], "Cannot buy: Already purchased!");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        252
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    NFTSwapper_Council
Line:        422
Source: 
>     
>     function setActive(bool isActive) public onlyOwner{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         active = isActive;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    NFTSwapper_Council
Line:        426
Source: 
> 
>     function hasPurchased(address buyer) public view returns (bool){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return purchased[buyer];

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    NFTSwapper_Council
Line:        434
Source: 
>         require(IERC1155(rarigang).balanceOf(seller, nftid) > 0, "Cannot buy: No more available!");
>         require(IERC20(currency).balanceOf(msg.sender) >= price*1e18, "Cannot buy: Need more coin!");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC1155(rarigang).safeTransferFrom(seller, msg.sender, nftid, 1, "");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    NFTSwapper_Council
Line:        435
Source: 
>         require(IERC20(currency).balanceOf(msg.sender) >= price*1e18, "Cannot buy: Need more coin!");
>         IERC1155(rarigang).safeTransferFrom(seller, msg.sender, nftid, 1, "");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC20(currency).transferFrom(msg.sender, 0x000000000000000000000000000000000000dEaD, price*1e18);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    NFTSwapper_Council
Line:        436
Source: 
>         IERC1155(rarigang).safeTransferFrom(seller, msg.sender, nftid, 1, "");
>         IERC20(currency).transferFrom(msg.sender, 0x000000000000000000000000000000000000dEaD, price*1e18);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         purchased[msg.sender] = true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Violation
Contract:    NFTSwapper_Council
Line:        433
Source: 
>         require(active, "Cannot buy: Market not active!");
>         require(IERC1155(rarigang).balanceOf(seller, nftid) > 0, "Cannot buy: No more available!");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(IERC20(currency).balanceOf(msg.sender) >= price*1e18, "Cannot buy: Need more coin!");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    NFTSwapper_Council
Line:        404
Source: 
> 
> contract NFTSwapper_Council is Ownable {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public nftid;

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    NFTSwapper_Council
Line:        433
Source: 
>         require(active, "Cannot buy: Market not active!");
>         require(IERC1155(rarigang).balanceOf(seller, nftid) > 0, "Cannot buy: No more available!");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(IERC20(currency).balanceOf(msg.sender) >= price*1e18, "Cannot buy: Need more coin!");

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    NFTSwapper_Council
Line:        434
Source: 
>         require(IERC1155(rarigang).balanceOf(seller, nftid) > 0, "Cannot buy: No more available!");
>         require(IERC20(currency).balanceOf(msg.sender) >= price*1e18, "Cannot buy: Need more coin!");
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC1155(rarigang).safeTransferFrom(seller, msg.sender, nftid, 1, "");

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NFTSwapper_Council
Line:        435
Source: 
>         require(IERC20(currency).balanceOf(msg.sender) >= price*1e18, "Cannot buy: Need more coin!");
>         IERC1155(rarigang).safeTransferFrom(seller, msg.sender, nftid, 1, "");
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         IERC20(currency).transferFrom(msg.sender, 0x000000000000000000000000000000000000dEaD, price*1e18);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NFTSwapper_Council
Line:        436
Source: 
>         IERC1155(rarigang).safeTransferFrom(seller, msg.sender, nftid, 1, "");
>         IERC20(currency).transferFrom(msg.sender, 0x000000000000000000000000000000000000dEaD, price*1e18);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         purchased[msg.sender] = true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    NFTSwapper_Council
Line:        436
Source: 
>         IERC1155(rarigang).safeTransferFrom(seller, msg.sender, nftid, 1, "");
>         IERC20(currency).transferFrom(msg.sender, 0x000000000000000000000000000000000000dEaD, price*1e18);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         purchased[msg.sender] = true;

[0m
