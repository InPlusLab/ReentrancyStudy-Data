Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        357
Source: 
>        return false;
>      assembly {
>      ^^^^^^^^^^
>          size := extcodesize(_addr)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        73
Source: 
>    */
>   function transferOwnership(address newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (newOwner != address(0)) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Pausable
Line:        118
Source: 
>    */
>   function pause() public onlyOwner whenNotPaused returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     paused = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Pausable
Line:        127
Source: 
>    */
>   function unpause() public onlyOwner whenPaused returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     paused = false;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Controllable
Line:        167
Source: 
>    */
>   function transferControl(address newController) public onlyController {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (newController != address(0)) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        73
Source: 
>    */
>   function transferOwnership(address newOwner) public onlyOwner {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     if (newOwner != address(0)) {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Pausable
Line:        118
Source: 
>    */
>   function pause() public onlyOwner whenNotPaused returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     paused = true;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Pausable
Line:        127
Source: 
>    */
>   function unpause() public onlyOwner whenPaused returns (bool) {
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     paused = false;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    NewWiraTokenSale
Line:        289
Source: 
> 
>    function updateConversionRate(uint256 _conversionRateInCents) onlyOwner public {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        conversionRateInCents = _conversionRateInCents;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    NewWiraTokenSale
Line:        300
Source: 
> 
>    function currentDate() public view returns (uint256) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        return now;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    NewWiraTokenSale
Line:        317
Source: 
>    */
>    function totalSupply() public view returns (uint256) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        return token.totalSupply();

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    NewWiraTokenSale
Line:        326
Source: 
>    */
>    function balanceOf(address _owner) public view returns (uint256) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return token.balanceOf(_owner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    NewWiraTokenSale
Line:        334
Source: 
>    */
>    function changeController(address _newController) public onlyOwner {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(isContract(_newController));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    NewWiraTokenSale
Line:        339
Source: 
> 
>    function finalize() public onlyOwner {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(paused);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    NewWiraTokenSale
Line:        348
Source: 
> 
>    function enableTransfers() public onlyOwner {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>      token.enableTransfers();

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    NewWiraTokenSale
Line:        289
Source: 
> 
>    function updateConversionRate(uint256 _conversionRateInCents) onlyOwner public {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>        conversionRateInCents = _conversionRateInCents;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    NewWiraTokenSale
Line:        326
Source: 
>    */
>    function balanceOf(address _owner) public view returns (uint256) {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       return token.balanceOf(_owner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    NewWiraTokenSale
Line:        334
Source: 
>    */
>    function changeController(address _newController) public onlyOwner {
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       require(isContract(_newController));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    NewWiraTokenSale
Line:        284
Source: 
> 
>     token.mint(_beneficiary, tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit TokenPurchase(msg.sender, _beneficiary, msg.value, tokens);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    NewWiraTokenSale
Line:        344
Source: 
>       uint256 remainingTokens = TOKENSALE_CAP - tokensMinted;
>       token.mint(tokenWalletAddress, remainingTokens);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       finalized = true;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        7
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        42
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        83
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        136
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        177
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        211
Source: 
> 
> pragma solidity ^0.5.0;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    NewWiraTokenSale
Line:        232
Source: 
>    address public tokenWalletAddress;
>    address payable tokenSaleWalletAddress;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint256 public constant TOKENSALE_CAP = 122500000 * 10 ** 18;

[0m
[0;31mSeverity:    INFO
Pattern:     Too Many Digit Literals
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        233
Source: 
>    address payable tokenSaleWalletAddress;
>    uint256 public constant TOKENSALE_CAP = 122500000 * 10 ** 18;
>                                            ^^^^^^^^^
>    uint256 public constant TOTAL_CAP = 408333334 * 10 ** 18;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        297
Source: 
>    function forwardFunds() internal {
>        address(tokenSaleWalletAddress).transfer(msg.value);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        297
Source: 
>    function forwardFunds() internal {
>        address(tokenSaleWalletAddress).transfer(msg.value);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        284
Source: 
> 
>     token.mint(_beneficiary, tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit TokenPurchase(msg.sender, _beneficiary, msg.value, tokens);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        318
Source: 
>    function totalSupply() public view returns (uint256) {
>        return token.totalSupply();
>               ^^^^^^^^^^^^^^^^^^^
>    }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        327
Source: 
>    function balanceOf(address _owner) public view returns (uint256) {
>       return token.balanceOf(_owner);
>              ^^^^^^^^^^^^^^^^^^^^^^^
>    }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        336
Source: 
>       require(isContract(_newController));
>       token.transferControl(_newController);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        344
Source: 
>       uint256 remainingTokens = TOKENSALE_CAP - tokensMinted;
>       token.mint(tokenWalletAddress, remainingTokens);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       finalized = true;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        349
Source: 
>    function enableTransfers() public onlyOwner {
>      token.enableTransfers();
>      ^^^^^^^^^^^^^^^^^^^^^^^
>    }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        360
Source: 
>      }
>      return size>0;
>             ^^^^
>    }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    NewWiraTokenSale
Line:        297
Source: 
>    function forwardFunds() internal {
>        address(tokenSaleWalletAddress).transfer(msg.value);
>        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    NewWiraTokenSale
Line:        274
Source: 
> 
>     totalWeiRaised = totalWeiRaised.add(msg.value);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     tokens = (msg.value * conversionRateInCents) / 20;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    NewWiraTokenSale
Line:        276
Source: 
>     tokens = (msg.value * conversionRateInCents) / 20;
>     contributors = contributors.add(1);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     tokensMinted = tokensMinted.add(tokens);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    NewWiraTokenSale
Line:        277
Source: 
>     contributors = contributors.add(1);
>     tokensMinted = tokensMinted.add(tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    NewWiraTokenSale
Line:        284
Source: 
> 
>     token.mint(_beneficiary, tokens);
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     emit TokenPurchase(msg.sender, _beneficiary, msg.value, tokens);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    NewWiraTokenSale
Line:        344
Source: 
>       uint256 remainingTokens = TOKENSALE_CAP - tokensMinted;
>       token.mint(tokenWalletAddress, remainingTokens);
>       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>       finalized = true;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    NewWiraTokenSale
Line:        349
Source: 
>    function enableTransfers() public onlyOwner {
>      token.enableTransfers();
>      ^^^^^^^^^^^^^^^^^^^^^^^
>    }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        234
Source: 
>    uint256 public constant TOKENSALE_CAP = 122500000 * 10 ** 18;
>    uint256 public constant TOTAL_CAP = 408333334 * 10 ** 18;
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>    uint256 public constant TEAM_TOKENS = 285833334 * 10 ** 18; //TOTAL_CAP - TOKENSALE_CAP

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    NewWiraTokenSale
Line:        235
Source: 
>    uint256 public constant TOTAL_CAP = 408333334 * 10 ** 18;
>    uint256 public constant TEAM_TOKENS = 285833334 * 10 ** 18; //TOTAL_CAP - TOKENSALE_CAP
>    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
