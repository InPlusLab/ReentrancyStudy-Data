Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    LibNote
Line:        35
Source: 
>         _;
>         assembly {
>          ^^^^^^^^^
>             // log an 'anonymous' event with a constant 6 words of calldata

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Flipper
Line:        149
Source: 
>     // --- Auction ---
>     function kick(address usr, address gal, uint256 tab, uint256 lot, uint256 bid)
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth returns (uint256 id)

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    FlipFabCompat
Line:        237
Source: 
> 
>     function setCat(address cat_) public {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(deployer == msg.sender, "auth-error");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    FlipFabCompat
Line:        243
Source: 
> 
>     function newFlip(address vat, bytes32 ilk) public returns (Flipper flip) {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         flip = new Flipper(vat, cat, ilk);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Flipper
Line:        79
Source: 
>     mapping (address => uint256) public wards;
>     function rely(address usr) external note auth { wards[usr] = 1; }
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function deny(address usr) external note auth { wards[usr] = 0; }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Flipper
Line:        80
Source: 
>     function rely(address usr) external note auth { wards[usr] = 1; }
>     function deny(address usr) external note auth { wards[usr] = 0; }
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     modifier auth {

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Flipper
Line:        137
Source: 
>     // --- Admin ---
>     function file(bytes32 what, uint256 data) external note auth {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (what == "beg") beg = data;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Flipper
Line:        143
Source: 
>     }
>     function file(bytes32 what, address data) external note auth {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (what == "cat") cat = CatLike(data);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Flipper
Line:        149
Source: 
>     // --- Auction ---
>     function kick(address usr, address gal, uint256 tab, uint256 lot, uint256 bid)
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public auth returns (uint256 id)

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    FlipFabCompat
Line:        237
Source: 
> 
>     function setCat(address cat_) public {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(deployer == msg.sender, "auth-error");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    FlipFabCompat
Line:        243
Source: 
> 
>     function newFlip(address vat, bytes32 ilk) public returns (Flipper flip) {
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         flip = new Flipper(vat, cat, ilk);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Flipper
Line:        163
Source: 
> 
>         vat.flux(ilk, msg.sender, address(this), lot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        22
Source: 
> 
> pragma solidity >=0.5.12;
>  ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Flipper
Line:        103
Source: 
> 
>     uint256 constant ONE = 1.00E18;
>      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public   beg = 1.05E18;  // 5% minimum bid increase

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        163
Source: 
> 
>         vat.flux(ilk, msg.sender, address(this), lot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        183
Source: 
>         if (msg.sender != bids[id].guy) {
>             vat.move(msg.sender, bids[id].guy, bids[id].bid);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             bids[id].guy = msg.sender;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        186
Source: 
>         }
>         vat.move(msg.sender, bids[id].gal, bid - bids[id].bid);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        202
Source: 
>         if (msg.sender != bids[id].guy) {
>             vat.move(msg.sender, bids[id].guy, bid);
>              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             bids[id].guy = msg.sender;

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        205
Source: 
>         }
>         vat.flux(ilk, address(this), bids[id].usr, bids[id].lot - lot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        212
Source: 
>         require(bids[id].tic != 0 && (bids[id].tic < now || bids[id].end < now), "Flipper/not-finished");
>         cat.claw(bids[id].tab);
>          ^^^^^^^^^^^^^^^^^^^^^^
>         vat.flux(ilk, address(this), bids[id].guy, bids[id].lot);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        213
Source: 
>         cat.claw(bids[id].tab);
>         vat.flux(ilk, address(this), bids[id].guy, bids[id].lot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         delete bids[id];

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        220
Source: 
>         require(bids[id].bid < bids[id].tab, "Flipper/already-dent-phase");
>         cat.claw(bids[id].tab);
>          ^^^^^^^^^^^^^^^^^^^^^^
>         vat.flux(ilk, address(this), msg.sender, bids[id].lot);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        221
Source: 
>         cat.claw(bids[id].tab);
>         vat.flux(ilk, address(this), msg.sender, bids[id].lot);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         vat.move(msg.sender, bids[id].guy, bids[id].bid);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Flipper
Line:        222
Source: 
>         vat.flux(ilk, address(this), msg.sender, bids[id].lot);
>         vat.move(msg.sender, bids[id].guy, bids[id].bid);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         delete bids[id];

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    FlipFabCompat
Line:        245
Source: 
>         flip = new Flipper(vat, cat, ilk);
>         flip.rely(msg.sender);
>          ^^^^^^^^^^^^^^^^^^^^^
>         flip.deny(address(this));

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    FlipFabCompat
Line:        246
Source: 
>         flip.rely(msg.sender);
>         flip.deny(address(this));
>          ^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Flipper
Line:        130
Source: 
>     function add(uint48 x, uint48 y) internal pure returns (uint48 z) {
>         require((z = x + y) >= x);
>                   ^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Flipper
Line:        133
Source: 
>     function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {
>         require(y == 0 || (z = x * y) / y == x);
>                             ^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    FlipFabCompat
Line:        229
Source: 
> contract FlipFabCompat {
>     address public cat;
>      ^^^^^^^^^^^^^^^^^^
>     address public deployer;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        170
Source: 
>         require(bids[id].tic == 0, "Flipper/bid-already-placed");
>         bids[id].end = add(uint48(now), tau);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        188
Source: 
> 
>         bids[id].bid = bid;
>          ^^^^^^^^^^^^^^^^^^
>         bids[id].tic = add(uint48(now), ttl);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        189
Source: 
>         bids[id].bid = bid;
>         bids[id].tic = add(uint48(now), ttl);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        207
Source: 
> 
>         bids[id].lot = lot;
>          ^^^^^^^^^^^^^^^^^^
>         bids[id].tic = add(uint48(now), ttl);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        208
Source: 
>         bids[id].lot = lot;
>         bids[id].tic = add(uint48(now), ttl);
>          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Flipper
Line:        214
Source: 
>         vat.flux(ilk, address(this), bids[id].guy, bids[id].lot);
>         delete bids[id];
>          ^^^^^^^^^^^^^^^
>     }

[0m
