Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.12. Changing pragma version to 0.5.12....
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Address
Line:        41
Source: 
>         // solhint-disable-next-line no-inline-assembly
>         assembly { codehash := extcodehash(account) }
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return (codehash != accountHash && codehash != 0x0);

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        613
Source: 
> 
>     IuniswapFactory_Balancer_Unzap_V1_1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public UniSwapFactoryAddress = IuniswapFactory_Balancer_Unzap_V1_1(

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        617
Source: 
>     );
>     IBFactory_Balancer_Unzap_V1_1 BalancerFactory = IBFactory_Balancer_Unzap_V1_1(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         0x9424B1412450D0f8Fc2255FAf6046b98213B76Bd

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        621
Source: 
> 
>     address wethTokenAddress = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Ownable
Line:        237
Source: 
>     function isOwner() public view returns (bool) {
>         return _msgSender() == _owner;
>                ^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        795
Source: 
> 
>         if (_ToTokenContractAddress == address(0)) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             uint256 ethBought = _token2Eth(

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1066
Source: 
>     ) internal returns (uint256 ethBought) {
>         if (_FromTokenContractAddress == wethTokenAddress) {
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             IWETH(wethTokenAddress).withdraw(tokens2Trade);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        406
Source: 
>         // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
>         if (a == 0) {
>             ^^^^^^
>             return 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        411
Source: 
>         uint256 c = a * b;
>         require(c / a == b, "SafeMath: multiplication overflow");
>                 ^^^^^^^^^^
> 

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        680
Source: 
>         } else if (
>             _ToTokenContractAddress == address(0) &&
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        221
Source: 
>      */
>     function owner() public view returns (address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return _owner;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        247
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        256
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        247
Source: 
>      */
>     function renounceOwnership() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         emit OwnershipTransferred(_owner, address(0));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Ownable
Line:        256
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        657
Source: 
>     */
>     function EasyZapOut(
>     ^^^^^^^^^^^^^^^^^^^^
>         address _ToTokenContractAddress,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        716
Source: 
>     */
>     function ZapOut(
>     ^^^^^^^^^^^^^^^^
>         address payable _toWhomToIssue,

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1098
Source: 
> 
>     function updateSlippage(uint256 _newSlippage) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1106
Source: 
> 
>     function set_new_goodwill(uint16 _new_goodwill) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1114
Source: 
> 
>     function set_new_dzgoodwillAddress(address _new_dzgoodwillAddress)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1121
Source: 
> 
>     function inCaseTokengetsStuck(IERC20 _TokenAddress) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 qty = _TokenAddress.balanceOf(address(this));

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1127
Source: 
>     // - to Pause the contract
>     function toggleContractActive() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         stopped = !stopped;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1132
Source: 
>     // - to withdraw any ETH balance sitting in the contract
>     function withdraw() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 contractBalance = address(this).balance;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1139
Source: 
>     // - to kill the contract
>     function destruct() public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         address payable _to = owner().toPayable();

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        664
Source: 
>         require(
>             BalancerFactory.isBPool(_FromBalancerPoolAddress),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "Invalid Balancer Pool"

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        674
Source: 
>         if (
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 _ToTokenContractAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        774
Source: 
>         if (
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 _ToTokenContractAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        854
Source: 
> 
>         IERC20(_ToTokenContractAddress).transfer(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _toWhomToIssue,

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        990
Source: 
> 
>         returnedTokens = IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress)
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .exitswapPoolAmountIn(_ToTokenContractAddress, _amount, 1);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1067
Source: 
>         if (_FromTokenContractAddress == wethTokenAddress) {
>             IWETH(wethTokenAddress).withdraw(tokens2Trade);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _toWhomToIssue.transfer(tokens2Trade);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1068
Source: 
>             IWETH(wethTokenAddress).withdraw(tokens2Trade);
>             _toWhomToIssue.transfer(tokens2Trade);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return tokens2Trade;

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1074
Source: 
>         = Iuniswap_Balancer_Unzap_V1_1(
>             UniSwapFactoryAddress.getExchange(_FromTokenContractAddress)
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1077
Source: 
> 
>         IERC20(_FromTokenContractAddress).approve(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             address(FromUniSwapExchangeContractAddress),

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1082
Source: 
> 
>         uint256 minEthBought = FromUniSwapExchangeContractAddress
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getTokenToEthInputPrice(tokens2Trade);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1014
Source: 
>         = Iuniswap_Balancer_Unzap_V1_1(
>             UniSwapFactoryAddress.getExchange(_FromTokenContractAddress)
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1019
Source: 
>         = Iuniswap_Balancer_Unzap_V1_1(
>             UniSwapFactoryAddress.getExchange(_ToTokenContractAddress)
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1022
Source: 
> 
>         IERC20(_FromTokenContractAddress).approve(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             address(FromUniSwapExchangeContractAddress),

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1027
Source: 
> 
>         uint256 minEthBought = FromUniSwapExchangeContractAddress
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getTokenToEthInputPrice(tokens2Trade);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        681
Source: 
>             _ToTokenContractAddress == address(0) &&
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 wethTokenAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        901
Source: 
>         //get token list
>         address[] memory tokens = IBPool_Balancer_Unzap_V1_1(
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _FromBalancerPoolAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        950
Source: 
>         ).totalSupply();
>         uint256 swapFee = IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress)
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getSwapFee();

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        952
Source: 
>             .getSwapFee();
>         uint256 totalWeight = IBPool_Balancer_Unzap_V1_1(
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _FromBalancerPoolAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        955
Source: 
>         ).getTotalDenormalizedWeight();
>         uint256 balance = IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress)
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getBalance(_toToken);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        957
Source: 
>             .getBalance(_toToken);
>         uint256 denorm = IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress)
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getDenormalizedWeight(_toToken);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        960
Source: 
> 
>         tokensReturned = IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress)
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .calcSingleOutGivenPoolIn(

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1122
Source: 
>     function inCaseTokengetsStuck(IERC20 _TokenAddress) public onlyOwner {
>         uint256 qty = _TokenAddress.balanceOf(address(this));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _TokenAddress.transfer(owner(), qty);

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1123
Source: 
>         uint256 qty = _TokenAddress.balanceOf(address(this));
>         _TokenAddress.transfer(owner(), qty);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1135
Source: 
>         address payable _to = owner().toPayable();
>         _to.transfer(contractBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        918
Source: 
>             = Iuniswap_Balancer_Unzap_V1_1(
>                 UniSwapFactoryAddress.getExchange(tokens[index])
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        924
Source: 
>             }
>             uint256 ethReturned = FromUniSwapExchangeContractAddress
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 .getTokenToEthInputPrice(tokensForBPT);

[0m
[0;31mSeverity:    HIGH
Pattern:     External call in loop
Description: If a single call in the loop fails or revers, it will
             cause all other calls to fail as well.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        947
Source: 
>     ) internal view returns (uint256 tokensReturned) {
>         uint256 totalSupply = IBPool_Balancer_Unzap_V1_1(
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _FromBalancerPoolAddress

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Address
Line:        77
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Ownable
Line:        256
Source: 
>      */
>     function transferOwnership(address newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _transferOwnership(newOwner);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        657
Source: 
>     */
>     function EasyZapOut(
>     ^^^^^^^^^^^^^^^^^^^^
>         address _ToTokenContractAddress,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        716
Source: 
>     */
>     function ZapOut(
>     ^^^^^^^^^^^^^^^^
>         address payable _toWhomToIssue,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1114
Source: 
> 
>     function set_new_dzgoodwillAddress(address _new_dzgoodwillAddress)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1121
Source: 
> 
>     function inCaseTokengetsStuck(IERC20 _TokenAddress) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 qty = _TokenAddress.balanceOf(address(this));

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        664
Source: 
>         require(
>             BalancerFactory.isBPool(_FromBalancerPoolAddress),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "Invalid Balancer Pool"

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        674
Source: 
>         if (
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 _ToTokenContractAddress

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        681
Source: 
>             _ToTokenContractAddress == address(0) &&
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 wethTokenAddress

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        674
Source: 
>         if (
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 _ToTokenContractAddress

[0m
[0;31mSeverity:    HIGH
Pattern:     Repeated Call to Untrusted Contract
Description: Repeated call to an untrusted contract may result in
             different values
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        681
Source: 
>             _ToTokenContractAddress == address(0) &&
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 wethTokenAddress

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Address
Line:        77
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>          ^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IBFactory_Balancer_Unzap_V1_1
Line:        513
Source: 
> 
> interface IBFactory_Balancer_Unzap_V1_1 {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function isBPool(address b) external view returns (bool);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IBPool_Balancer_Unzap_V1_1
Line:        517
Source: 
> 
> interface IBPool_Balancer_Unzap_V1_1 {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function exitswapPoolAmountIn(

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    IuniswapFactory_Balancer_Unzap_V1_1
Line:        551
Source: 
> 
> interface IuniswapFactory_Balancer_Unzap_V1_1 {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     function getExchange(address token)

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Iuniswap_Balancer_Unzap_V1_1
Line:        558
Source: 
> 
> interface Iuniswap_Balancer_Unzap_V1_1 {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     // converting ERC20 to ERC20 and transfer

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        605
Source: 
> 
> contract Balancer_Unzap_V1_1 is ReentrancyGuard, Ownable {
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     using SafeMath for uint256;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        613
Source: 
> 
>     IuniswapFactory_Balancer_Unzap_V1_1
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public UniSwapFactoryAddress = IuniswapFactory_Balancer_Unzap_V1_1(

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        617
Source: 
>     );
>     IBFactory_Balancer_Unzap_V1_1 BalancerFactory = IBFactory_Balancer_Unzap_V1_1(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         0x9424B1412450D0f8Fc2255FAf6046b98213B76Bd

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        657
Source: 
>     */
>     function EasyZapOut(
>     ^^^^^^^^^^^^^^^^^^^^
>         address _ToTokenContractAddress,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        672
Source: 
> 
>         address _FromTokenAddress;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         if (

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        716
Source: 
>     */
>     function ZapOut(
>     ^^^^^^^^^^^^^^^^
>         address payable _toWhomToIssue,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        789
Source: 
>         //exit balancer
>         uint256 _returnedTokens = _exitBalancer(
>         ^^^^^^^^^^^^^^^^^^^^^^^
>             _FromBalancerPoolAddress,

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        916
Source: 
>             //get eth value for each token
>             Iuniswap_Balancer_Unzap_V1_1 FromUniSwapExchangeContractAddress
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             = Iuniswap_Balancer_Unzap_V1_1(

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1012
Source: 
> 
>         Iuniswap_Balancer_Unzap_V1_1 FromUniSwapExchangeContractAddress
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         = Iuniswap_Balancer_Unzap_V1_1(

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1017
Source: 
> 
>         Iuniswap_Balancer_Unzap_V1_1 ToUniSwapExchangeContractAddress
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         = Iuniswap_Balancer_Unzap_V1_1(

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1072
Source: 
> 
>         Iuniswap_Balancer_Unzap_V1_1 FromUniSwapExchangeContractAddress
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         = Iuniswap_Balancer_Unzap_V1_1(

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1106
Source: 
> 
>     function set_new_goodwill(uint16 _new_goodwill) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1114
Source: 
> 
>     function set_new_dzgoodwillAddress(address _new_dzgoodwillAddress)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         public

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1134
Source: 
>         uint256 contractBalance = address(this).balance;
>         address payable _to = owner().toPayable();
>         ^^^^^^^^^^^^^^^^^^^
>         _to.transfer(contractBalance);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1140
Source: 
>     function destruct() public onlyOwner {
>         address payable _to = owner().toPayable();
>         ^^^^^^^^^^^^^^^^^^^
>         selfdestruct(_to);

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        617
Source: 
>     );
>     IBFactory_Balancer_Unzap_V1_1 BalancerFactory = IBFactory_Balancer_Unzap_V1_1(
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         0x9424B1412450D0f8Fc2255FAf6046b98213B76Bd

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        621
Source: 
> 
>     address wethTokenAddress = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Amount
Description: The amount of ether transferred must not be influenced by
             other transactions.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1135
Source: 
>         address payable _to = owner().toPayable();
>         _to.transfer(contractBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1135
Source: 
>         address payable _to = owner().toPayable();
>         _to.transfer(contractBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1068
Source: 
>             IWETH(wethTokenAddress).withdraw(tokens2Trade);
>             _toWhomToIssue.transfer(tokens2Trade);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return tokens2Trade;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1068
Source: 
>             IWETH(wethTokenAddress).withdraw(tokens2Trade);
>             _toWhomToIssue.transfer(tokens2Trade);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return tokens2Trade;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1135
Source: 
>         address payable _to = owner().toPayable();
>         _to.transfer(contractBalance);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        664
Source: 
>         require(
>             BalancerFactory.isBPool(_FromBalancerPoolAddress),
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             "Invalid Balancer Pool"

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        674
Source: 
>         if (
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 _ToTokenContractAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        766
Source: 
>         require(
>             IERC20(_FromBalancerPoolAddress).transferFrom(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 msg.sender,

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        774
Source: 
>         if (
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 _ToTokenContractAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        984
Source: 
>         require(
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 _ToTokenContractAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        990
Source: 
> 
>         returnedTokens = IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress)
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .exitswapPoolAmountIn(_ToTokenContractAddress, _amount, 1);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1074
Source: 
>         = Iuniswap_Balancer_Unzap_V1_1(
>             UniSwapFactoryAddress.getExchange(_FromTokenContractAddress)
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1089
Source: 
> 
>         ethBought = FromUniSwapExchangeContractAddress.tokenToEthTransferInput(
>                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             tokens2Trade,

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1014
Source: 
>         = Iuniswap_Balancer_Unzap_V1_1(
>             UniSwapFactoryAddress.getExchange(_FromTokenContractAddress)
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1041
Source: 
> 
>         tokenBought = FromUniSwapExchangeContractAddress
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .tokenToTokenTransferInput(

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        880
Source: 
>         require(
>             IERC20(_tokenContractAddress).transferFrom(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 msg.sender,

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        681
Source: 
>             _ToTokenContractAddress == address(0) &&
>             IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress).isBound(
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 wethTokenAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        901
Source: 
>         //get token list
>         address[] memory tokens = IBPool_Balancer_Unzap_V1_1(
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _FromBalancerPoolAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        918
Source: 
>             = Iuniswap_Balancer_Unzap_V1_1(
>                 UniSwapFactoryAddress.getExchange(tokens[index])
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             );

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        924
Source: 
>             }
>             uint256 ethReturned = FromUniSwapExchangeContractAddress
>                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>                 .getTokenToEthInputPrice(tokensForBPT);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        947
Source: 
>     ) internal view returns (uint256 tokensReturned) {
>         uint256 totalSupply = IBPool_Balancer_Unzap_V1_1(
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _FromBalancerPoolAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        950
Source: 
>         ).totalSupply();
>         uint256 swapFee = IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress)
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getSwapFee();

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        952
Source: 
>             .getSwapFee();
>         uint256 totalWeight = IBPool_Balancer_Unzap_V1_1(
>                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _FromBalancerPoolAddress

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        955
Source: 
>         ).getTotalDenormalizedWeight();
>         uint256 balance = IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress)
>                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getBalance(_toToken);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        957
Source: 
>             .getBalance(_toToken);
>         uint256 denorm = IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress)
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getDenormalizedWeight(_toToken);

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        960
Source: 
> 
>         tokensReturned = IBPool_Balancer_Unzap_V1_1(_FromBalancerPoolAddress)
>                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .calcSingleOutGivenPoolIn(

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1122
Source: 
>     function inCaseTokengetsStuck(IERC20 _TokenAddress) public onlyOwner {
>         uint256 qty = _TokenAddress.balanceOf(address(this));
>                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         _TokenAddress.transfer(owner(), qty);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        854
Source: 
> 
>         IERC20(_ToTokenContractAddress).transfer(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _toWhomToIssue,

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1067
Source: 
>         if (_FromTokenContractAddress == wethTokenAddress) {
>             IWETH(wethTokenAddress).withdraw(tokens2Trade);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _toWhomToIssue.transfer(tokens2Trade);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1077
Source: 
> 
>         IERC20(_FromTokenContractAddress).approve(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             address(FromUniSwapExchangeContractAddress),

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1082
Source: 
> 
>         uint256 minEthBought = FromUniSwapExchangeContractAddress
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getTokenToEthInputPrice(tokens2Trade);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1019
Source: 
>         = Iuniswap_Balancer_Unzap_V1_1(
>             UniSwapFactoryAddress.getExchange(_ToTokenContractAddress)
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         );

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1022
Source: 
> 
>         IERC20(_FromTokenContractAddress).approve(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             address(FromUniSwapExchangeContractAddress),

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1027
Source: 
> 
>         uint256 minEthBought = FromUniSwapExchangeContractAddress
>                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getTokenToEthInputPrice(tokens2Trade);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1034
Source: 
> 
>         uint256 minTokenBought = ToUniSwapExchangeContractAddress
>                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             .getEthToTokenInputPrice(minEthBought);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1123
Source: 
>         uint256 qty = _TokenAddress.balanceOf(address(this));
>         _TokenAddress.transfer(owner(), qty);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Address
Line:        42
Source: 
>         assembly { codehash := extcodehash(account) }
>         return (codehash != accountHash && codehash != 0x0);
>                 ^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        928
Source: 
>             //get max eth value
>             if (maxEth < ethReturned) {
>                 ^^^^^^
>                 maxEth = ethReturned;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Balancer_Unzap_V1_1
Line:        1068
Source: 
>             IWETH(wethTokenAddress).withdraw(tokens2Trade);
>             _toWhomToIssue.transfer(tokens2Trade);
>             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             return tokens2Trade;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        318
Source: 
>         // Any calls to nonReentrant after this point will fail
>         _notEntered = false;
>         ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        324
Source: 
>         // https://eips.ethereum.org/EIPS/eip-2200)
>         _notEntered = true;
>         ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        318
Source: 
>         // Any calls to nonReentrant after this point will fail
>         _notEntered = false;
>         ^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    ReentrancyGuard
Line:        324
Source: 
>         // https://eips.ethereum.org/EIPS/eip-2200)
>         _notEntered = true;
>         ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        77
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        854
Source: 
> 
>         IERC20(_ToTokenContractAddress).transfer(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             _toWhomToIssue,

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1077
Source: 
> 
>         IERC20(_FromTokenContractAddress).approve(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             address(FromUniSwapExchangeContractAddress),

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1022
Source: 
> 
>         IERC20(_FromTokenContractAddress).approve(
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>             address(FromUniSwapExchangeContractAddress),

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Balancer_Unzap_V1_1
Line:        1123
Source: 
>         uint256 qty = _TokenAddress.balanceOf(address(this));
>         _TokenAddress.transfer(owner(), qty);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    Address
Line:        77
Source: 
>         // solhint-disable-next-line avoid-call-value
>         (bool success, ) = recipient.call.value(amount)("");
>                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Address: unable to send value, recipient may have reverted");

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    ReentrancyGuard
Line:        294
Source: 
> contract ReentrancyGuard {
>     bool private _notEntered;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
