Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Crowdsale
Line:        75
Source: 
>     uint256 price_ = 1 szabo;
>     uint256 MAX_UINT = 115792089237316195423570985008687907853269984665640564039457584007913129639935;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Crowdsale
Line:        162
Source: 
>     // Public price getter
>     function price() public view returns (uint256)
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Crowdsale
Line:        168
Source: 
>     // Public counter getter
>     function getCounters() public view returns (uint256[] memory, uint256[] memory, uint256[] memory)  {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return (getSoldArray(), getEthArray(), getHoldersArray());

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Reentrancy with constant gas
Description: Ether transfers (such as send and transfer) that are
             followed by state changes may be reentrant.
Type:        Warning
Contract:    Crowdsale
Line:        217
Source: 
>         
>         ownerWallet.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         reward.transferFrom(ownerWallet, msg.sender, tokenAmount);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    Crowdsale
Line:        104
Source: 
>     // Price setter for owner only
>     function setPrice(uint256 price) public
>                       ^^^^^^^^^^^^^
>     {

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    token
Line:        46
Source: 
> 
> interface token {
> ^^^^^^^^^^^^^^^^^
>     function transfer(address receiver, uint amount) external;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Crowdsale
Line:        75
Source: 
>     uint256 price_ = 1 szabo;
>     uint256 MAX_UINT = 115792089237316195423570985008687907853269984665640564039457584007913129639935;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        5
Source: 
> 
> pragma solidity ^0.5.8;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Crowdsale
Line:        74
Source: 
>     // vars
>     uint256 price_ = 1 szabo;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 MAX_UINT = 115792089237316195423570985008687907853269984665640564039457584007913129639935;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Crowdsale
Line:        75
Source: 
>     uint256 price_ = 1 szabo;
>     uint256 MAX_UINT = 115792089237316195423570985008687907853269984665640564039457584007913129639935;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Violation
Contract:    Crowdsale
Line:        217
Source: 
>         
>         ownerWallet.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         reward.transferFrom(ownerWallet, msg.sender, tokenAmount);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Crowdsale
Line:        217
Source: 
>         
>         ownerWallet.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         reward.transferFrom(ownerWallet, msg.sender, tokenAmount);

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    Crowdsale
Line:        218
Source: 
>         ownerWallet.transfer(amount);
>         reward.transferFrom(ownerWallet, msg.sender, tokenAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted Ether Flow
Description: The execution of ether flows should be restricted to an
             authorized set of users.
Type:        Warning
Contract:    Crowdsale
Line:        217
Source: 
>         
>         ownerWallet.transfer(amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         reward.transferFrom(ownerWallet, msg.sender, tokenAmount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Crowdsale
Line:        211
Source: 
>         }
>         totalSold[stage_] = SafeMath.add(totalSold[stage_], tokenAmount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         totalEth[stage_] = SafeMath.add(totalEth[stage_], amount);

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    Crowdsale
Line:        212
Source: 
>         totalSold[stage_] = SafeMath.add(totalSold[stage_], tokenAmount);
>         totalEth[stage_] = SafeMath.add(totalEth[stage_], amount);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
