Environment variable LD_LIBRARY_PATH not set. Setting it up...
[0;31mSeverity:    INFO
Pattern:     Assembly Usage
Description: Usage of assembly in Solidity code is discouraged.
Type:        Violation
Contract:    Initializable
Line:        62
Source: 
>     uint256 cs;
>     assembly { cs := extcodesize(self) }
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     return cs == 0;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    Initializable
Line:        67
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        256
Source: 
> 
>     function initialize(address admin_, uint delay_, uint minDelay_, uint maxDelay_) public initializer {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(maxDelay_ > minDelay_, "Timelock::constructor Max delay must exceed minimum delay.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        271
Source: 
> 
>     function setDelay(uint delay_) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == address(this), "Timelock::setDelay: Call must come from Timelock.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        280
Source: 
> 
>     function acceptAdmin() public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == pendingAdmin, "Timelock::acceptAdmin: Call must come from pendingAdmin.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        288
Source: 
> 
>     function setPendingAdmin(address pendingAdmin_) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == address(this), "Timelock::setPendingAdmin: Call must come from Timelock.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        295
Source: 
> 
>     function queueTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public returns (bytes32) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Timelock::queueTransaction: Call must come from admin.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        306
Source: 
> 
>     function cancelTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Timelock::cancelTransaction: Call must come from admin.");

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Timelock
Line:        315
Source: 
> 
>     function executeTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public payable returns (bytes memory) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Timelock::executeTransaction: Call must come from admin.");

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Gas-dependent Reentrancy
Description: Calls into external contracts that receive all remaining
             gas and are followed by state changes may be reentrant.
Type:        Warning
Contract:    Timelock
Line:        334
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool success, bytes memory returnData) = target.call.value(value)(callData);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Timelock::executeTransaction: Transaction execution reverted.");

[0m
[0;31mSeverity:    INFO
Pattern:     Low Level Calls
Description: Usage of <address>.call should be avoided
Type:        Violation
Contract:    Timelock
Line:        334
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool success, bytes memory returnData) = target.call.value(value)(callData);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Timelock::executeTransaction: Transaction execution reverted.");

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Timelock
Line:        288
Source: 
> 
>     function setPendingAdmin(address pendingAdmin_) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == address(this), "Timelock::setPendingAdmin: Call must come from Timelock.");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Timelock
Line:        256
Source: 
> 
>     function initialize(address admin_, uint delay_, uint minDelay_, uint maxDelay_) public initializer {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(maxDelay_ > minDelay_, "Timelock::constructor Max delay must exceed minimum delay.");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Timelock
Line:        295
Source: 
> 
>     function queueTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public returns (bytes32) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Timelock::queueTransaction: Call must come from admin.");

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    Timelock
Line:        306
Source: 
> 
>     function cancelTransaction(address target, uint value, string memory signature, bytes memory data, uint eta) public {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender == admin, "Timelock::cancelTransaction: Call must come from admin.");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Initializable
Line:        67
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Timelock
Line:        245
Source: 
> 
>     uint public GRACE_PERIOD;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public MINIMUM_DELAY;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Timelock
Line:        246
Source: 
>     uint public GRACE_PERIOD;
>     uint public MINIMUM_DELAY;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public MAXIMUM_DELAY;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    Timelock
Line:        247
Source: 
>     uint public MINIMUM_DELAY;
>     uint public MAXIMUM_DELAY;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        7
Source: 
> 
> pragma solidity ^0.6.8;
> ^^^^^^^^^^^^^^^^^^^^^^^
> pragma experimental ABIEncoderV2;

[0m
[0;31mSeverity:    LOW
Pattern:     Solidity pragma directives
Description: Avoid complex solidity version pragma statements.
Type:        Violation
Contract:    None
Line:        231
Source: 
> 
> pragma solidity ^0.6.8;
> ^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    Initializable
Line:        40
Source: 
> 
>     bool isTopLevelCall = !initializing;
>     ^^^^^^^^^^^^^^^^^^^
>     if (isTopLevelCall) {

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Ether Receiver
Description: The receiver of ether transfers must not be influenced by
             other transactions.
Type:        Warning
Contract:    Timelock
Line:        334
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool success, bytes memory returnData) = target.call.value(value)(callData);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Timelock::executeTransaction: Transaction execution reverted.");

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Transaction Order Affects Execution of Ether Transfer
Description: Ether transfers whose execution can be manipulated by
             other transactions must be inspected for unintended
             behavior.
Type:        Violation
Contract:    Timelock
Line:        334
Source: 
>         // solium-disable-next-line security/no-call-value
>         (bool success, bytes memory returnData) = target.call.value(value)(callData);
>                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(success, "Timelock::executeTransaction: Transaction execution reverted.");

[0m
[0;31mSeverity:    INFO
Pattern:     Uninitialized Local Variables
Description: A variable is declared but never initialized.
Type:        Violation
Contract:    Initializable
Line:        63
Source: 
>     assembly { cs := extcodesize(self) }
>     return cs == 0;
>            ^^
>   }

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Initializable
Line:        32
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Timelock
Line:        245
Source: 
> 
>     uint public GRACE_PERIOD;
>     ^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public MINIMUM_DELAY;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Timelock
Line:        249
Source: 
> 
>     address public admin;
>     ^^^^^^^^^^^^^^^^^^^^
>     address public pendingAdmin;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Timelock
Line:        250
Source: 
>     address public admin;
>     address public pendingAdmin;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public delay;

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    Timelock
Line:        251
Source: 
>     address public pendingAdmin;
>     uint public delay;
>     ^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        27
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        32
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        67
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        27
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Initializable
Line:        67
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Timelock
Line:        246
Source: 
>     uint public GRACE_PERIOD;
>     uint public MINIMUM_DELAY;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public MAXIMUM_DELAY;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    Timelock
Line:        247
Source: 
>     uint public MINIMUM_DELAY;
>     uint public MAXIMUM_DELAY;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Initializable
Line:        42
Source: 
>     if (isTopLevelCall) {
>       initializing = true;
>       ^^^^^^^^^^^^^^^^^^^
>       initialized = true;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Initializable
Line:        43
Source: 
>       initializing = true;
>       initialized = true;
>       ^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Timelock
Line:        261
Source: 
> 
>         admin = admin_;
>         ^^^^^^^^^^^^^^
>         delay = delay_;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Timelock
Line:        262
Source: 
>         admin = admin_;
>         delay = delay_;
>         ^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Timelock
Line:        264
Source: 
> 
>         MINIMUM_DELAY = minDelay_;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         MAXIMUM_DELAY = maxDelay_;

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Timelock
Line:        265
Source: 
>         MINIMUM_DELAY = minDelay_;
>         MAXIMUM_DELAY = maxDelay_;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         GRACE_PERIOD = maxDelay_.sub(minDelay_).div(2);

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Timelock
Line:        266
Source: 
>         MAXIMUM_DELAY = maxDelay_;
>         GRACE_PERIOD = maxDelay_.sub(minDelay_).div(2);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Violation
Contract:    Initializable
Line:        49
Source: 
>     if (isTopLevelCall) {
>       initializing = false;
>       ^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        27
Source: 
>    */
>   bool private initialized;
>   ^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        32
Source: 
>    */
>   bool private initializing;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Unused State Variable
Description: Unused state variables should be removed.
Type:        Violation
Contract:    Initializable
Line:        67
Source: 
>   // Reserved storage space to allow for layout changes in the future.
>   uint256[50] private ______gap;
>   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
> }

[0m
[0;31mSeverity:    LOW
Pattern:     Usage of block timestamp
Description: Returned value relies on block timestamp.
Type:        Violation
Contract:    Timelock
Line:        344
Source: 
>         // solium-disable-next-line security/no-block-members
>         return block.timestamp;
>                ^^^^^^^^^^^^^^^
>     }

[0m
