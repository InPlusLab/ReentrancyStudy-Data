Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.6.12. Changing pragma version to 0.6.12....
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    OXS_Staking
Line:        96
Source: 
>     uint256 public totalRewards;
>     uint256 public stakingRate = 25; // .25%
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public totalStakes;

[0m
[0;31mSeverity:    INFO
Pattern:     Constable State Variables
Description: State variables that do not change should be declared as
             constants.
Type:        Violation
Contract:    OXS_Staking
Line:        99
Source: 
>     
>     address public OXS = 0xD48a38BAD734A7c491E98367321f7abE79BB19A2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        44
Source: 
>   function mul(uint256 a, uint256 b) internal pure returns (uint256) {
>     if (a == 0) {
>         ^^^^^^
>       return 0;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Dangerous Strict Equalities
Description: Strict equalities that use account's balance, timestamps
             and block numbers should be avoided
Type:        Violation
Contract:    SafeMath
Line:        48
Source: 
>     uint256 c = a * b;
>     assert(c / a == b);
>            ^^^^^^^^^^
>     return c;

[0m
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    Owned
Line:        30
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    Owned
Line:        30
Source: 
> 
>     function transferOwnership(address payable _newOwner) public onlyOwner {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         owner = _newOwner;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    OXS_Staking
Line:        118
Source: 
> 
>     function Stake(uint256 _amount) external{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    OXS_Staking
Line:        130
Source: 
> 
>     function AddToStake(uint256 _amount) external{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    OXS_Staking
Line:        179
Source: 
> 
>     function PendingReward(address _caller) public view returns(uint256 _pendingRewardWeis){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _totalStakingTime = now.sub(users[_caller].lastClaimedDate);

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OXS_Staking
Line:        190
Source: 
> 
>     function ActiveStakeDeposit(address _user) external view returns(uint256 _activeDeposit){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].activeDeposit;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OXS_Staking
Line:        194
Source: 
> 
>     function YourTotalStakingTillToday(address _user) external view returns(uint256 _totalStaking){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].totalDeposits;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OXS_Staking
Line:        199
Source: 
> 
>     function LastStakedOn(address _user) external view returns(uint256 _unixLastStakedTime){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].startTime;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Violation
Contract:    OXS_Staking
Line:        204
Source: 
> 
>     function TotalStakingRewards(address _user) external view returns(uint256 _totalEarned){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].totalGained;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Multiplication after division
Description: Information might be lost due to division before
             multiplication
Type:        Violation
Contract:    SafeMath
Line:        47
Source: 
>     }
>     uint256 c = a * b;
>                 ^^^^^
>     assert(c / a == b);

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    OXS_Staking
Line:        155
Source: 
>         // mint more tokens inside token contract equivalent to _pendingReward
>         require(IERC20(OXS).transfer(msg.sender, _pendingReward));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        91
Source: 
> 
> contract OXS_Staking is Owned{
> ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        99
Source: 
>     
>     address public OXS = 0xD48a38BAD734A7c491E98367321f7abE79BB19A2;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        118
Source: 
> 
>     function Stake(uint256 _amount) external{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        130
Source: 
> 
>     function AddToStake(uint256 _amount) external{
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        141
Source: 
>  
>     function ClaimReward() external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(PendingReward(msg.sender) > 0, "No pending rewards");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        144
Source: 
>     
>         uint256 _pendingReward = PendingReward(msg.sender);
>         ^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        161
Source: 
> 
>     function StopStaking() external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(users[msg.sender].activeDeposit >= 0, "No active stake");

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        163
Source: 
>         require(users[msg.sender].activeDeposit >= 0, "No active stake");
>         uint256 _activeDeposit = users[msg.sender].activeDeposit;
>         ^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        179
Source: 
> 
>     function PendingReward(address _caller) public view returns(uint256 _pendingRewardWeis){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         uint256 _totalStakingTime = now.sub(users[_caller].lastClaimedDate);

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        180
Source: 
>     function PendingReward(address _caller) public view returns(uint256 _pendingRewardWeis){
>         uint256 _totalStakingTime = now.sub(users[_caller].lastClaimedDate);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        182
Source: 
>         
>         uint256 _reward_token_second = ((stakingRate).mul(10 ** 21)).div(365 days); // added extra 10^21
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        190
Source: 
> 
>     function ActiveStakeDeposit(address _user) external view returns(uint256 _activeDeposit){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].activeDeposit;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        194
Source: 
> 
>     function YourTotalStakingTillToday(address _user) external view returns(uint256 _totalStaking){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].totalDeposits;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        199
Source: 
> 
>     function LastStakedOn(address _user) external view returns(uint256 _unixLastStakedTime){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].startTime;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    OXS_Staking
Line:        204
Source: 
> 
>     function TotalStakingRewards(address _user) external view returns(uint256 _totalEarned){
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return users[_user].totalGained;

[0m
[0;31mSeverity:    INFO
Pattern:     State variables default visibility
Description: Visibility of state variables should be stated explicitly
Type:        Violation
Contract:    OXS_Staking
Line:        110
Source: 
>     
>     mapping(address => DepositedToken) users;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    OXS_Staking
Line:        124
Source: 
>         // transfer tokens from user to the contract balance
>         require(IERC20(OXS).transferFrom(msg.sender, address(this), _amount));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    OXS_Staking
Line:        135
Source: 
>         // move the tokens from the caller to the contract address
>         require(IERC20(OXS).transferFrom(msg.sender,address(this), _amount));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    OXS_Staking
Line:        155
Source: 
>         // mint more tokens inside token contract equivalent to _pendingReward
>         require(IERC20(OXS).transfer(msg.sender, _pendingReward));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Warning
Contract:    OXS_Staking
Line:        174
Source: 
>         // withdraw the tokens and move from contract to the caller
>         require(IERC20(OXS).transfer(msg.sender, _activeDeposit));
>                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    OXS_Staking
Line:        95
Source: 
> 
>     uint256 public totalRewards;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint256 public stakingRate = 25; // .25%

[0m
[0;33mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Warning
Contract:    OXS_Staking
Line:        97
Source: 
>     uint256 public stakingRate = 25; // .25%
>     uint256 public totalStakes;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    OXS_Staking
Line:        147
Source: 
>         // Global stats update
>         totalRewards = totalRewards.add(_pendingReward);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    OXS_Staking
Line:        150
Source: 
>         // update the record
>         users[msg.sender].totalGained = users[msg.sender].totalGained.add(_pendingReward);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         users[msg.sender].lastClaimedDate = now;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    OXS_Staking
Line:        151
Source: 
>         users[msg.sender].totalGained = users[msg.sender].totalGained.add(_pendingReward);
>         users[msg.sender].lastClaimedDate = now;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         users[msg.sender].pendingGains = 0;

[0m
[0;33mSeverity:    CRITICAL
Pattern:     Unrestricted write to storage
Description: Contract fields that can be modified by any user must be
             inspected.
Type:        Warning
Contract:    OXS_Staking
Line:        152
Source: 
>         users[msg.sender].lastClaimedDate = now;
>         users[msg.sender].pendingGains = 0;
>         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         

[0m
