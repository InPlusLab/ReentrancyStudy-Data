Environment variable LD_LIBRARY_PATH not set. Setting it up...
pragma directive defines a prior version to 0.5.17. Changing pragma version to 0.5.17....
[0;31mSeverity:    LOW
Pattern:     External Calls of Functions
Description: A public function that is never called within the
             contract should be marked as external
Type:        Violation
Contract:    safebox
Line:        54
Source: 
>      */
>     function token() public view returns (IERC20) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         return Itoken;

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    safebox
Line:        39
Source: 
>     
>     function setCEO(address newCEO) external returns(address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender==CEO, 'You are not authorized');

[0m
[0;33mSeverity:    MEDIUM
Pattern:     Missing Input Validation
Description: Method arguments must be sanitized before they are used
             in computations.
Type:        Warning
Contract:    safebox
Line:        45
Source: 
>     
>     function setCTO(address newCTO) external returns(address) {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender==CTO, 'You are not authorized');

[0m
[0;33mSeverity:    MEDIUM
Pattern:     No-Ether-Involved Reentrancy
Description: Reentrancy that involves no ether
Type:        Warning
Contract:    safebox
Line:        80
Source: 
>         
>         Itoken.transfer(CTO, wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         approveAmount = approveAmount - wad;

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Shadowed Local Variable
Description: Reports local variable declarations that shadow
             declarations from outer scopes.
Type:        Violation
Contract:    safebox
Line:        35
Source: 
>     
>     constructor (IERC20 token) public {
>                  ^^^^^^^^^^^^
>         Itoken = token;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    safebox
Line:        26
Source: 
> 
> contract safebox {
> ^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    safebox
Line:        29
Source: 
>     // ERC20 basic token contract being held
>     IERC20 private Itoken;
>     ^^^^^^^^^^^^^^^^^^^^^
> 

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    safebox
Line:        31
Source: 
> 
>     address public CEO = 0x1238DE607d15B9e4e176FA801552d214d2f1c0D7;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     address public CTO = 0x2E29304769e5fdD0bF4F6Eb3174afA6a08B5aC75;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    safebox
Line:        32
Source: 
>     address public CEO = 0x1238DE607d15B9e4e176FA801552d214d2f1c0D7;
>     address public CTO = 0x2E29304769e5fdD0bF4F6Eb3174afA6a08B5aC75;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     uint public approveAmount;

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    safebox
Line:        65
Source: 
>     
>     function ApproveWithdraw(uint wad) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender==CEO, 'You are not authorized');

[0m
[0;31mSeverity:    INFO
Pattern:     Solidity Naming Convention
Description: Reports declarations that do not adhere to Solidity's
             naming convention.
Type:        Violation
Contract:    safebox
Line:        73
Source: 
>     
>     function Withdraw(uint wad) external {
>     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>         require(msg.sender==CTO, 'You are not authorized');

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    safebox
Line:        62
Source: 
>     function balance() public view returns (uint256) {
>         return Itoken.balanceOf(address(this));
>                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
>     }

[0m
[0;31mSeverity:    HIGH
Pattern:     Unhandled Exception
Description: The return value of statements that may return error
             values must be explicitly checked.
Type:        Violation
Contract:    safebox
Line:        80
Source: 
>         
>         Itoken.transfer(CTO, wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         approveAmount = approveAmount - wad;

[0m
[0;31mSeverity:    HIGH
Pattern:     Uninitialized State Variable
Description: State variables should be explicitly initialized.
Type:        Violation
Contract:    safebox
Line:        33
Source: 
>     address public CTO = 0x2E29304769e5fdD0bF4F6Eb3174afA6a08B5aC75;
>     uint public approveAmount;
>     ^^^^^^^^^^^^^^^^^^^^^^^^^
>     

[0m
[0;31mSeverity:    MEDIUM
Pattern:     Unused Return Pattern
Description: The value returned by an external function call is never
             used
Type:        Violation
Contract:    safebox
Line:        80
Source: 
>         
>         Itoken.transfer(CTO, wad);
>         ^^^^^^^^^^^^^^^^^^^^^^^^^
>         approveAmount = approveAmount - wad;

[0m
